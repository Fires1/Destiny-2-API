[{"Namespace":"User","Name":"GeneralUser","RawName":"User.GeneralUser","Properties":[{"Name":"membershipId","Type":"integer","Format":"int64"},{"Name":"uniqueName","Type":"string"},{"Name":"normalizedName","Type":"string"},{"Name":"displayName","Type":"string"},{"Name":"profilePicture","Type":"integer","Format":"int32"},{"Name":"profileTheme","Type":"integer","Format":"int32"},{"Name":"userTitle","Type":"integer","Format":"int32"},{"Name":"successMessageFlags","Type":"integer","Format":"int64"},{"Name":"isDeleted","Type":"boolean"},{"Name":"about","Type":"string"},{"Name":"firstAccess","Type":"string","Format":"date-time","Nullable":true},{"Name":"lastUpdate","Type":"string","Format":"date-time","Nullable":true},{"Name":"legacyPortalUID","Type":"integer","Format":"int64","Nullable":true},{"Name":"context","$ref":"#/components/schemas/User.UserToUserContext"},{"Name":"psnDisplayName","Type":"string"},{"Name":"xboxDisplayName","Type":"string"},{"Name":"fbDisplayName","Type":"string"},{"Name":"showActivity","Type":"boolean","Nullable":true},{"Name":"locale","Type":"string"},{"Name":"localeInheritDefault","Type":"boolean"},{"Name":"lastBanReportId","Type":"integer","Format":"int64","Nullable":true},{"Name":"showGroupMessaging","Type":"boolean"},{"Name":"profilePicturePath","Type":"string"},{"Name":"profilePictureWidePath","Type":"string"},{"Name":"profileThemeName","Type":"string"},{"Name":"userTitleDisplay","Type":"string"},{"Name":"statusText","Type":"string"},{"Name":"statusDate","Type":"string","Format":"date-time"},{"Name":"profileBanExpire","Type":"string","Format":"date-time","Nullable":true},{"Name":"blizzardDisplayName","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User\r\n{\r\n    public class GeneralUser\r\n    {\r\npublic int membershipId;\r\npublic string uniqueName;\r\npublic string normalizedName;\r\npublic string displayName;\r\npublic int profilePicture;\r\npublic int profileTheme;\r\npublic int userTitle;\r\npublic int successMessageFlags;\r\npublic bool isDeleted;\r\npublic string about;\r\npublic string firstAccess;\r\npublic string lastUpdate;\r\npublic int legacyPortalUID;\r\npublic User.UserToUserContext context;\r\npublic string psnDisplayName;\r\npublic string xboxDisplayName;\r\npublic string fbDisplayName;\r\npublic bool showActivity;\r\npublic string locale;\r\npublic bool localeInheritDefault;\r\npublic int lastBanReportId;\r\npublic bool showGroupMessaging;\r\npublic string profilePicturePath;\r\npublic string profilePictureWidePath;\r\npublic string profileThemeName;\r\npublic string userTitleDisplay;\r\npublic string statusText;\r\npublic string statusDate;\r\npublic string profileBanExpire;\r\npublic string blizzardDisplayName;\r\n}\r\n}"},{"Namespace":"User","Name":"UserToUserContext","RawName":"User.UserToUserContext","Properties":[{"Name":"isFollowing","Type":"boolean"},{"Name":"ignoreStatus","$ref":"#/components/schemas/Ignores.IgnoreResponse"},{"Name":"globalIgnoreEndDate","Type":"string","Format":"date-time","Nullable":true}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User\r\n{\r\n    public class UserToUserContext\r\n    {\r\npublic bool isFollowing;\r\npublic Ignores.IgnoreResponse ignoreStatus;\r\npublic string globalIgnoreEndDate;\r\n}\r\n}"},{"Namespace":"Ignores","Name":"IgnoreResponse","RawName":"Ignores.IgnoreResponse","Properties":[{"Name":"isIgnored","Type":"boolean"},{"Name":"ignoreFlags","$ref":"#/components/schemas/Ignores.IgnoreStatus"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Ignores\r\n{\r\n    public class IgnoreResponse\r\n    {\r\npublic bool isIgnored;\r\npublic Ignores.IgnoreStatus ignoreFlags;\r\n}\r\n}"},{"Namespace":"User.Models","Name":"UserAlias","RawName":"User.Models.UserAlias","Properties":[{"Name":"cachePrefix","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User.Models\r\n{\r\n    public class UserAlias\r\n    {\r\npublic string cachePrefix;\r\n}\r\n}"},{"Namespace":"Config","Name":"UserTheme","RawName":"Config.UserTheme","Properties":[{"Name":"userThemeId","Type":"integer","Format":"int32"},{"Name":"userThemeName","Type":"string"},{"Name":"userThemeDescription","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Config\r\n{\r\n    public class UserTheme\r\n    {\r\npublic int userThemeId;\r\npublic string userThemeName;\r\npublic string userThemeDescription;\r\n}\r\n}"},{"Namespace":"User","Name":"UserMembershipData","RawName":"User.UserMembershipData","Properties":[{"Name":"destinyMemberships","Type":"array","Description":"this allows you to see destiny memberships that are visible and linked to this account (regardless of whether or not they have characters on the world server)","items":[{"$ref":"#/components/schemas/User.UserInfoCard"}]},{"Name":"bungieNetUser","$ref":"#/components/schemas/User.GeneralUser"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User\r\n{\r\n    public class UserMembershipData\r\n    {\r\npublic List<object> destinyMemberships;\r\npublic User.GeneralUser bungieNetUser;\r\n}\r\n}"},{"Namespace":"User","Name":"UserMembership","RawName":"User.UserMembership","Properties":[{"Name":null,"Description":"Type of the membership.","allOf":[[{"$ref":"#/components/schemas/BungieMembershipType"}]]},{"Name":"membershipId","Type":"integer","Format":"int64","Description":"Membership ID as they user is known in the Accounts service"},{"Name":"displayName","Type":"string","Description":"Display Name the player has chosen for themselves. Thie display name is optional whenthe data type is used as input to a platform API."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User\r\n{\r\n    public class UserMembership\r\n    {\r\npublic int membershipId;\r\npublic string displayName;\r\n}\r\n}","Description":"Very basic info about a user as returned by the Account server."},{"Namespace":"User","Name":"UserInfoCard","RawName":"User.UserInfoCard","Properties":[{"Name":"supplementalDisplayName","Type":"string","Description":"A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc."},{"Name":"iconPath","Type":"string","Description":"URL the Icon if available."},{"Name":null,"Description":"Type of the membership.","allOf":[[{"$ref":"#/components/schemas/BungieMembershipType"}]]},{"Name":"membershipId","Type":"integer","Format":"int64","Description":"Membership ID as they user is known in the Accounts service"},{"Name":"displayName","Type":"string","Description":"Display Name the player has chosen for themselves. Thie display name is optional whenthe data type is used as input to a platform API."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User\r\n{\r\n    public class UserInfoCard\r\n    {\r\npublic string supplementalDisplayName;\r\npublic string iconPath;\r\npublic int membershipId;\r\npublic string displayName;\r\n}\r\n}","Description":"This contract supplies basic information commonly used to display a minimal amount of information about a user.  Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used.  Avoid adding game specific or platform specific details here. In caseswhere UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts."},{"Namespace":"Partnerships","Name":"PublicPartnershipDetail","RawName":"Partnerships.PublicPartnershipDetail","Properties":[{"Name":"partnerType","$ref":"#/components/schemas/Partnerships.PartnershipType"},{"Name":"identifier","Type":"string"},{"Name":"name","Type":"string"},{"Name":"icon","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Partnerships\r\n{\r\n    public class PublicPartnershipDetail\r\n    {\r\npublic Partnerships.PartnershipType partnerType;\r\npublic string identifier;\r\npublic string name;\r\npublic string icon;\r\n}\r\n}","Description":"All the partnership info that's fit to expose externally, if we care to do so."},{"Namespace":"Forum","Name":"PostResponse","RawName":"Forum.PostResponse","Properties":[{"Name":"lastReplyTimestamp","Type":"string","Format":"date-time"},{"Name":"IsPinned","Type":"boolean"},{"Name":"urlMediaType","$ref":"#/components/schemas/Forum.ForumMediaType"},{"Name":"thumbnail","Type":"string"},{"Name":"popularity","$ref":"#/components/schemas/Forum.ForumPostPopularity"},{"Name":"isActive","Type":"boolean"},{"Name":"isAnnouncement","Type":"boolean"},{"Name":"userRating","Type":"integer","Format":"int32"},{"Name":"userHasRated","Type":"boolean"},{"Name":"userHasMutedPost","Type":"boolean"},{"Name":"latestReplyPostId","Type":"integer","Format":"int64"},{"Name":"latestReplyAuthorId","Type":"integer","Format":"int64"},{"Name":"ignoreStatus","$ref":"#/components/schemas/Ignores.IgnoreResponse"},{"Name":"locale","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Forum\r\n{\r\n    public class PostResponse\r\n    {\r\npublic string lastReplyTimestamp;\r\npublic bool IsPinned;\r\npublic Forum.ForumMediaType urlMediaType;\r\npublic string thumbnail;\r\npublic Forum.ForumPostPopularity popularity;\r\npublic bool isActive;\r\npublic bool isAnnouncement;\r\npublic int userRating;\r\npublic bool userHasRated;\r\npublic bool userHasMutedPost;\r\npublic int latestReplyPostId;\r\npublic int latestReplyAuthorId;\r\npublic Ignores.IgnoreResponse ignoreStatus;\r\npublic string locale;\r\n}\r\n}"},{"Namespace":"Queries","Name":"SearchResult","RawName":"Queries.SearchResult","Properties":[{"Name":"totalResults","Type":"integer","Format":"int32"},{"Name":"hasMore","Type":"boolean"},{"Name":"query","$ref":"#/components/schemas/Queries.PagedQuery"},{"Name":"replacementContinuationToken","Type":"string"},{"Name":"useTotalResults","Type":"boolean","Description":"If useTotalResults is true, then totalResults represents an accurate count.\r\nIf False, it does not, and may be estimated/only the size of the current page.\r\nEither way, you should probably always only trust hasMore.\r\nThis is a long-held historical throwback to when we used to do paging with known total results.Those queries toasted our database, and we were left to hastily alter our endpoints and create backward-compatible shims, of which useTotalResults is one."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Queries\r\n{\r\n    public class SearchResult\r\n    {\r\npublic int totalResults;\r\npublic bool hasMore;\r\npublic Queries.PagedQuery query;\r\npublic string replacementContinuationToken;\r\npublic bool useTotalResults;\r\n}\r\n}"},{"Namespace":"Queries","Name":"PagedQuery","RawName":"Queries.PagedQuery","Properties":[{"Name":"itemsPerPage","Type":"integer","Format":"int32"},{"Name":"currentPage","Type":"integer","Format":"int32"},{"Name":"requestContinuationToken","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Queries\r\n{\r\n    public class PagedQuery\r\n    {\r\npublic int itemsPerPage;\r\npublic int currentPage;\r\npublic string requestContinuationToken;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SearchResultOfPostResponse","RawName":"SearchResultOfPostResponse","Properties":[{"Name":"results","Type":"array","items":[{"$ref":"#/components/schemas/Forum.PostResponse"}]},{"Name":"totalResults","Type":"integer","Format":"int32"},{"Name":"hasMore","Type":"boolean"},{"Name":"query","$ref":"#/components/schemas/Queries.PagedQuery"},{"Name":"replacementContinuationToken","Type":"string"},{"Name":"useTotalResults","Type":"boolean","Description":"If useTotalResults is true, then totalResults represents an accurate count.\r\nIf False, it does not, and may be estimated/only the size of the current page.\r\nEither way, you should probably always only trust hasMore.\r\nThis is a long-held historical throwback to when we used to do paging with known total results.Those queries toasted our database, and we were left to hastily alter our endpoints and create backward-compatible shims, of which useTotalResults is one."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SearchResultOfPostResponse\r\n    {\r\npublic List<object> results;\r\npublic int totalResults;\r\npublic bool hasMore;\r\npublic Queries.PagedQuery query;\r\npublic string replacementContinuationToken;\r\npublic bool useTotalResults;\r\n}\r\n}"},{"Namespace":"Forum","Name":"PostSearchResponse","RawName":"Forum.PostSearchResponse","Properties":[{"Name":"relatedPosts","Type":"array","items":[{"$ref":"#/components/schemas/Forum.PostResponse"}]},{"Name":"authors","Type":"array","items":[{"$ref":"#/components/schemas/User.GeneralUser"}]},{"Name":"groups","Type":"array","items":[{"$ref":"#/components/schemas/GroupsV2.GroupResponse"}]},{"Name":"searchedTags","Type":"array","items":[{"$ref":"#/components/schemas/Tags.Models.Contracts.TagResponse"}]},{"Name":"polls","Type":"array","items":[{"$ref":"#/components/schemas/Forum.PollResponse"}]},{"Name":"recruitmentDetails","Type":"array","items":[{"$ref":"#/components/schemas/Forum.ForumRecruitmentDetail"}]},{"Name":"availablePages","Type":"integer","Format":"int32","Nullable":true},{"Name":"results","Type":"array","items":[{"$ref":"#/components/schemas/Forum.PostResponse"}]},{"Name":"totalResults","Type":"integer","Format":"int32"},{"Name":"hasMore","Type":"boolean"},{"Name":"query","$ref":"#/components/schemas/Queries.PagedQuery"},{"Name":"replacementContinuationToken","Type":"string"},{"Name":"useTotalResults","Type":"boolean","Description":"If useTotalResults is true, then totalResults represents an accurate count.\r\nIf False, it does not, and may be estimated/only the size of the current page.\r\nEither way, you should probably always only trust hasMore.\r\nThis is a long-held historical throwback to when we used to do paging with known total results.Those queries toasted our database, and we were left to hastily alter our endpoints and create backward-compatible shims, of which useTotalResults is one."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Forum\r\n{\r\n    public class PostSearchResponse\r\n    {\r\npublic List<object> relatedPosts;\r\npublic List<object> authors;\r\npublic List<object> groups;\r\npublic List<object> searchedTags;\r\npublic List<object> polls;\r\npublic List<object> recruitmentDetails;\r\npublic int availablePages;\r\npublic List<object> results;\r\npublic int totalResults;\r\npublic bool hasMore;\r\npublic Queries.PagedQuery query;\r\npublic string replacementContinuationToken;\r\npublic bool useTotalResults;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupResponse","RawName":"GroupsV2.GroupResponse","Properties":[{"Name":"detail","$ref":"#/components/schemas/GroupsV2.GroupV2"},{"Name":"founder","$ref":"#/components/schemas/GroupsV2.GroupMember"},{"Name":"alliedIds","Type":"array","items":[{"type":"integer","format":"int64"}]},{"Name":"parentGroup","$ref":"#/components/schemas/GroupsV2.GroupV2"},{"Name":"allianceStatus","$ref":"#/components/schemas/GroupsV2.GroupAllianceStatus"},{"Name":"groupJoinInviteCount","Type":"integer","Format":"int32"},{"Name":"currentUserMemberMap","Type":"object","Description":"This property will be populated if the authenticated user is a member of the group. Note that because ofaccount linking, a user can sometimes be part of a clan more than once.  As such, this returns thehighest member type available.","additionalProperties":[{"$ref":"#/components/schemas/GroupsV2.GroupMember"}],"x-dictionary-key":[{"$ref":"#/components/schemas/BungieMembershipType"}]},{"Name":"currentUserPotentialMemberMap","Type":"object","Description":"This property will be populated if the authenticated user is an applicant or has an outstanding invitation to join.Note that because of account linking, a user can sometimes be part of a clan more than once.","additionalProperties":[{"$ref":"#/components/schemas/GroupsV2.GroupPotentialMember"}],"x-dictionary-key":[{"$ref":"#/components/schemas/BungieMembershipType"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupResponse\r\n    {\r\npublic GroupsV2.GroupV2 detail;\r\npublic GroupsV2.GroupMember founder;\r\npublic List<object> alliedIds;\r\npublic GroupsV2.GroupV2 parentGroup;\r\npublic GroupsV2.GroupAllianceStatus allianceStatus;\r\npublic int groupJoinInviteCount;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupV2","RawName":"GroupsV2.GroupV2","Properties":[{"Name":"groupId","Type":"integer","Format":"int64"},{"Name":"name","Type":"string"},{"Name":"groupType","$ref":"#/components/schemas/GroupsV2.GroupType"},{"Name":"membershipIdCreated","Type":"integer","Format":"int64"},{"Name":"creationDate","Type":"string","Format":"date-time"},{"Name":"modificationDate","Type":"string","Format":"date-time"},{"Name":"about","Type":"string"},{"Name":"tags","Type":"array","items":[{"type":"string"}]},{"Name":"memberCount","Type":"integer","Format":"int32"},{"Name":"isPublic","Type":"boolean"},{"Name":"isPublicTopicAdminOnly","Type":"boolean"},{"Name":"primaryAlliedGroupId","Type":"integer","Format":"int64"},{"Name":"motto","Type":"string"},{"Name":"allowChat","Type":"boolean"},{"Name":"isDefaultPostPublic","Type":"boolean"},{"Name":"chatSecurity","$ref":"#/components/schemas/GroupsV2.ChatSecuritySetting"},{"Name":"locale","Type":"string"},{"Name":"avatarImageIndex","Type":"integer","Format":"int32"},{"Name":"homepage","$ref":"#/components/schemas/GroupsV2.GroupHomepage"},{"Name":"membershipOption","$ref":"#/components/schemas/GroupsV2.MembershipOption"},{"Name":"defaultPublicity","$ref":"#/components/schemas/GroupsV2.GroupPostPublicity"},{"Name":"theme","Type":"string"},{"Name":"bannerPath","Type":"string"},{"Name":"avatarPath","Type":"string"},{"Name":"isAllianceOwner","Type":"boolean"},{"Name":"conversationId","Type":"integer","Format":"int64"},{"Name":"enableInvitationMessagingForAdmins","Type":"boolean"},{"Name":"banExpireDate","Type":"string","Format":"date-time","Nullable":true},{"Name":"features","$ref":"#/components/schemas/GroupsV2.GroupFeatures"},{"Name":"clanInfo","$ref":"#/components/schemas/GroupsV2.GroupV2ClanInfoAndInvestment"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupV2\r\n    {\r\npublic int groupId;\r\npublic string name;\r\npublic GroupsV2.GroupType groupType;\r\npublic int membershipIdCreated;\r\npublic string creationDate;\r\npublic string modificationDate;\r\npublic string about;\r\npublic List<object> tags;\r\npublic int memberCount;\r\npublic bool isPublic;\r\npublic bool isPublicTopicAdminOnly;\r\npublic int primaryAlliedGroupId;\r\npublic string motto;\r\npublic bool allowChat;\r\npublic bool isDefaultPostPublic;\r\npublic GroupsV2.ChatSecuritySetting chatSecurity;\r\npublic string locale;\r\npublic int avatarImageIndex;\r\npublic GroupsV2.GroupHomepage homepage;\r\npublic GroupsV2.MembershipOption membershipOption;\r\npublic GroupsV2.GroupPostPublicity defaultPublicity;\r\npublic string theme;\r\npublic string bannerPath;\r\npublic string avatarPath;\r\npublic bool isAllianceOwner;\r\npublic int conversationId;\r\npublic bool enableInvitationMessagingForAdmins;\r\npublic string banExpireDate;\r\npublic GroupsV2.GroupFeatures features;\r\npublic GroupsV2.GroupV2ClanInfoAndInvestment clanInfo;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupFeatures","RawName":"GroupsV2.GroupFeatures","Properties":[{"Name":"maximumMembers","Type":"integer","Format":"int32"},{"Name":"maximumMembershipsOfGroupType","Type":"integer","Format":"int32","Description":"Maximum number of groups of this type a typical membership may join. For example,a user may join about 50 General groups with their Bungie.net account.  They mayjoin one clan per Destiny membership."},{"Name":"capabilities","$ref":"#/components/schemas/GroupsV2.Capabilities"},{"Name":"membershipTypes","Type":"array","items":[{"$ref":"#/components/schemas/BungieMembershipType"}]},{"Name":"invitePermissionOverride","Type":"boolean","Description":"Minimum Member Level allowed to invite new members to group\r\nAlways Allowed: Founder, Acting Founder\r\nTrue means admins have this power, false means they don't\r\nDefault is false for clans, true for groups."},{"Name":"updateCulturePermissionOverride","Type":"boolean","Description":"Minimum Member Level allowed to update group culture\r\nAlways Allowed: Founder, Acting Founder\r\nTrue means admins have this power, false means they don't\r\nDefault is false for clans, true for groups."},{"Name":null,"Description":"Minimum Member Level allowed to host guided games\r\nAlways Allowed: Founder, Acting Founder, Admin\r\nAllowed Overrides: None, Member, Beginner\r\nDefault is Member for clans, None for groups, although this means nothing for groups.","allOf":[[{"$ref":"#/components/schemas/GroupsV2.HostGuidedGamesPermissionLevel"}]]},{"Name":"updateBannerPermissionOverride","Type":"boolean","Description":"Minimum Member Level allowed to update banner\r\nAlways Allowed: Founder, Acting Founder\r\nTrue means admins have this power, false means they don't\r\nDefault is false for clans, true for groups."},{"Name":null,"Description":"Level to join a member at when accepting an invite, application, or joining an open clan\r\nDefault is Beginner.","allOf":[[{"$ref":"#/components/schemas/GroupsV2.RuntimeGroupMemberType"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupFeatures\r\n    {\r\npublic int maximumMembers;\r\npublic int maximumMembershipsOfGroupType;\r\npublic GroupsV2.Capabilities capabilities;\r\npublic List<object> membershipTypes;\r\npublic bool invitePermissionOverride;\r\npublic bool updateCulturePermissionOverride;\r\npublic bool updateBannerPermissionOverride;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupV2ClanInfo","RawName":"GroupsV2.GroupV2ClanInfo","Properties":[{"Name":"clanCallsign","Type":"string"},{"Name":"clanBannerData","$ref":"#/components/schemas/GroupsV2.ClanBanner"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupV2ClanInfo\r\n    {\r\npublic string clanCallsign;\r\npublic GroupsV2.ClanBanner clanBannerData;\r\n}\r\n}","Description":"This contract contains clan-specific group information.  It does not include any investment data."},{"Namespace":"GroupsV2","Name":"ClanBanner","RawName":"GroupsV2.ClanBanner","Properties":[{"Name":"decalId","Type":"integer","Format":"uint32"},{"Name":"decalColorId","Type":"integer","Format":"uint32"},{"Name":"decalBackgroundColorId","Type":"integer","Format":"uint32"},{"Name":"gonfalonId","Type":"integer","Format":"uint32"},{"Name":"gonfalonColorId","Type":"integer","Format":"uint32"},{"Name":"gonfalonDetailId","Type":"integer","Format":"uint32"},{"Name":"gonfalonDetailColorId","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class ClanBanner\r\n    {\r\npublic int decalId;\r\npublic int decalColorId;\r\npublic int decalBackgroundColorId;\r\npublic int gonfalonId;\r\npublic int gonfalonColorId;\r\npublic int gonfalonDetailId;\r\npublic int gonfalonDetailColorId;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupV2ClanInfoAndInvestment","RawName":"GroupsV2.GroupV2ClanInfoAndInvestment","Properties":[{"Name":"d2ClanProgressions","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.DestinyProgression"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"clanCallsign","Type":"string"},{"Name":"clanBannerData","$ref":"#/components/schemas/GroupsV2.ClanBanner"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupV2ClanInfoAndInvestment\r\n    {\r\npublic string clanCallsign;\r\npublic GroupsV2.ClanBanner clanBannerData;\r\n}\r\n}","Description":"The same as GroupV2ClanInfo, but includes any investment data."},{"Namespace":"Destiny","Name":"DestinyProgression","RawName":"Destiny.DestinyProgression","Properties":[{"Name":"progressionHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the Progression in question.  Use it to look up the DestinyProgressionDefinition in static data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition"}]},{"Name":"dailyProgress","Type":"integer","Format":"int32","Description":"The amount of progress earned today for this progression."},{"Name":"dailyLimit","Type":"integer","Format":"int32","Description":"If this progression has a daily limit, this is that limit."},{"Name":"weeklyProgress","Type":"integer","Format":"int32","Description":"The amount of progress earned toward this progression in the current week."},{"Name":"weeklyLimit","Type":"integer","Format":"int32","Description":"If this progression has a weekly limit, this is that limit."},{"Name":"currentProgress","Type":"integer","Format":"int32","Description":"This is the total amount of progress obtained overall for thisprogression (for instance, the total amount of Character Level experience earned)"},{"Name":"level","Type":"integer","Format":"int32","Description":"This is the level of the progression (for instance, the Character Level)."},{"Name":"levelCap","Type":"integer","Format":"int32","Description":"This is the maximum possible level you can achieve for this progression (for example, the maximumcharacter level obtainable)"},{"Name":"stepIndex","Type":"integer","Format":"int32","Description":"Progressions define their levels in \"steps\".  Since the last step may be repeatable, the user maybe at a higher level than the actual Step achieved in the progression.  Not necessarily useful, butpotentially interesting for those cruising the API.  Relate this to the \"steps\" property of the DestinyProgressionto see which step the user is on, if you care about that.  (Note that this is Content Version dependent sinceit refers to indexes.)"},{"Name":"progressToNextLevel","Type":"integer","Format":"int32","Description":"The amount of progression (i.e. \"Experience\") needed to reach the next level of this Progression.Jeez, progression is such an overloaded word."},{"Name":"nextLevelAt","Type":"integer","Format":"int32","Description":"The total amount of progression (i.e. \"Experience\") needed in order to reach the next level."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyProgression\r\n    {\r\npublic int progressionHash;\r\npublic int dailyProgress;\r\npublic int dailyLimit;\r\npublic int weeklyProgress;\r\npublic int weeklyLimit;\r\npublic int currentProgress;\r\npublic int level;\r\npublic int levelCap;\r\npublic int stepIndex;\r\npublic int progressToNextLevel;\r\npublic int nextLevelAt;\r\n}\r\n}","Description":"Information about a current character's status with a Progression.A progression is a value that can increase with activity and has levels.Think Character Level and Reputation Levels.Combine this \"live\" data with the related DestinyProgressionDefinition for a full pictureof the Progression."},{"Namespace":"Destiny.Definitions","Name":"DestinyDefinition","RawName":"Destiny.Definitions.DestinyDefinition","Properties":[{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyDefinition\r\n    {\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Provides common properties for destiny definitions."},{"Namespace":"Destiny.Definitions","Name":"DestinyProgressionDefinition","RawName":"Destiny.Definitions.DestinyProgressionDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition"},{"Name":null,"Description":"The \"Scope\" of the progression indicates the source of the progression's live data.\r\nSee the DestinyProgressionScope enum for more info: but essentially, a Progression can either bebacked by a stored value, or it can be a calculated derivative of other values.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyProgressionScope"}]]},{"Name":"repeatLastStep","Type":"boolean","Description":"If this is True, then the progression doesn't have a maximum level."},{"Name":"source","Type":"string","Description":"If there's a description of how to earn this progression in the local config, this willbe that localized description."},{"Name":"steps","Type":"array","Description":"Progressions are divided into Steps, which roughly equate to \"Levels\" in the traditionalsense of a Progression.  Notably, the last step can be repeated indefinitely if repeatLastStepis true, meaning that the calculation for your level is not as simple as comparing your currentprogress to the max progress of the steps.  \r\nThese and more calculations are done for you ifyou grab live character progression data, such as in the DestinyCharacterProgressionComponent.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionStepDefinition"}]},{"Name":"visible","Type":"boolean","Description":"If true, the Progression is something worth showing to users.\r\nIf false, BNet isn't going to show it.  But that doesn't mean you can't.  We're all friends here."},{"Name":"factionHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the value exists, this is the hash identifier for the Faction that owns this Progression.\r\nThis is purely for convenience, if you're looking at a progression and want to know if and whoit's related to in terms of Faction Reputation.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyFactionDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyProgressionDefinition\r\n    {\r\npublic Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition displayProperties;\r\npublic bool repeatLastStep;\r\npublic string source;\r\npublic List<object> steps;\r\npublic bool visible;\r\npublic int factionHash;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"A \"Progression\" in Destiny is best explained by an example.\r\nA Character's \"Level\" is a progression:it has Experience that can be earned, levels that can be gained, and is evaluated and displayed atvarious points in the game.  A Character's \"Faction Reputation\" is also a progression for much the same reason.\r\nProgression is used by a variety of systems, and the definition of a Progression will generally only be useful if combining with live data (such as a character's DestinyCharacterProgressionComponent.progressionsproperty, which holds that character's live Progression states).\r\nFundamentally, a Progression measures your \"Level\" by evaluating the thresholds in its Steps (one step per level, exceptfor the last step which can be repeated indefinitely for \"Levels\" that have no ceiling) against the total earned\"progression points\"/experience. (for simplicity purposes, we will henceforth refer to earned progression points asexperience, though it need not be a mechanic that in any way resembles Experience in a traditional sense).\r\nEarned experience is calculated in a variety of ways, determined by the Progression's scope.  These go fromlooking up a stored value to performing exceedingly obtuse calculations.  This is why we provide live datain DestinyCharacterProgressionComponent.progressions, so you don't have to worry about those."},{"Namespace":"Destiny.Definitions.Common","Name":"DestinyDisplayPropertiesDefinition","RawName":"Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition","Properties":[{"Name":"description","Type":"string"},{"Name":"name","Type":"string"},{"Name":"icon","Type":"string","Description":"Note that \"icon\" is sometimes misleading, and should be interpreted in the context of the entity.For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.\r\nBut usually, it will be a small square image that you can use as... well, an icon."},{"Name":"hasIcon","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Common\r\n{\r\n    public class DestinyDisplayPropertiesDefinition\r\n    {\r\npublic string description;\r\npublic string name;\r\npublic string icon;\r\npublic bool hasIcon;\r\n}\r\n}","Description":"Many Destiny*Definition contracts - the \"first order\" entities of Destinythat have their own tables in the Manifest Database - also have displayableinformation.  This is the base class for that display information."},{"Namespace":"Destiny.Definitions","Name":"DestinyProgressionDisplayPropertiesDefinition","RawName":"Destiny.Definitions.DestinyProgressionDisplayPropertiesDefinition","Properties":[{"Name":"displayUnitsName","Type":"string","Description":"When progressions show your \"experience\" gained, that bar has units (i.e. \"Experience\",\"Bad Dudes Snuffed Out\", whatever).  This is the localized string for that unit of measurement."},{"Name":"description","Type":"string"},{"Name":"name","Type":"string"},{"Name":"icon","Type":"string","Description":"Note that \"icon\" is sometimes misleading, and should be interpreted in the context of the entity.For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.\r\nBut usually, it will be a small square image that you can use as... well, an icon."},{"Name":"hasIcon","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyProgressionDisplayPropertiesDefinition\r\n    {\r\npublic string displayUnitsName;\r\npublic string description;\r\npublic string name;\r\npublic string icon;\r\npublic bool hasIcon;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyProgressionStepDefinition","RawName":"Destiny.Definitions.DestinyProgressionStepDefinition","Properties":[{"Name":"stepName","Type":"string","Description":"Very rarely, Progressions will have localized text describing the Level of the progression.This will be that localized text, if it exists.  Otherwise, the standard appears to beto simply show the level numerically."},{"Name":null,"Description":"This appears to be, when you \"level up\", whether a visual effect will display and on what entity.See DestinyProgressionStepDisplayEffect for slightly more info.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyProgressionStepDisplayEffect"}]]},{"Name":"progressTotal","Type":"integer","Format":"int32","Description":"The total amount of progression points/\"experience\" you will need to initially reach this step.If this is the last step and the progression is repeating indefinitely (DestinyProgressionDefinition.repeatLastStep),this will also be the progress needed to level it up further by repeating this step again."},{"Name":"rewardItems","Type":"array","Description":"A listing of items rewarded as a result of reaching this level.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyProgressionStepDefinition\r\n    {\r\npublic string stepName;\r\npublic int progressTotal;\r\npublic List<object> rewardItems;\r\n}\r\n}","Description":"This defines a single Step in a progression (which roughly equates to a level.  See DestinyProgressionDefinitionfor caveats)."},{"Namespace":"Destiny","Name":"DestinyItemQuantity","RawName":"Destiny.DestinyItemQuantity","Properties":[{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the item in question.  Use it to look up the item's DestinyInventoryItemDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"itemInstanceId","Type":"integer","Format":"int64","Nullable":true,"Description":"If this quantity is referring to a specific instance of an item, this will have the item's instance ID.Normally, this will be null."},{"Name":"quantity","Type":"integer","Format":"int32","Description":"The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyItemQuantity\r\n    {\r\npublic int itemHash;\r\npublic int itemInstanceId;\r\npublic int quantity;\r\n}\r\n}","Description":"Used in a number of Destiny contracts to return data about an item stack and its quantity.Can optionally return an itemInstanceId if the item is instanced - in which case, the quantity returnedwill be 1.  If it's not... uh, let me know okay?  Thanks."},{"Namespace":"Destiny.Definitions","Name":"DestinyInventoryItemDefinition","RawName":"Destiny.Definitions.DestinyInventoryItemDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"secondaryIcon","Type":"string","Description":"A secondary icon associated with the item.  Currently this is used in very context specificapplications, such as Emblem Nameplates."},{"Name":"secondaryOverlay","Type":"string","Description":"Pulled from the secondary icon, this is the \"secondary background\" of the secondaryicon.  Confusing?  Sure, that's why I call it \"overlay\" here: because as far as it'sbeen used thus far, it has been for an optional overlay image.  We'll see if that holds up,but at least for now it explains what this image is a bit better."},{"Name":"secondarySpecial","Type":"string","Description":"Pulled from the Secondary Icon, this is the \"special\" background for the item.For Emblems, this is the background image used on the Details view: but it neednot be limited to that for other types of items."},{"Name":"screenshot","Type":"string","Description":"If we were able to acquire an in-game screenshot for the item, the path to that screenshotwill be returned here.  Note that not all items have screenshots: particularly not any non-equippableitems."},{"Name":"itemTypeDisplayName","Type":"string","Description":"The localized title/name of the item's type.  This can be whatever the designers want, and has no guaranteeof consistency between items."},{"Name":"itemTypeAndTierDisplayName","Type":"string","Description":"It became a common enough pattern in our UI to show Item Type and Tier combined into a single localizedstring that I'm just going to go ahead and start pre-creating these for items."},{"Name":"displaySource","Type":"string","Description":"In theory, it is a localized string telling you about how you can find the item.I really wish this was more consistent.  Many times, it has nothing.  Sometimes, it's instead a more narrative-forwarddescription of the item.  Which is cool, and I wish all properties had that data, but it should really beits own property."},{"Name":"tooltipStyle","Type":"string","Description":"An identifier that the game UI uses to determine what type of tooltip to show for the item.  These have nocorresponding definitions that BNet can link to: so it'll be up to you to interpret and display your UI differentlyaccording to these styles (or ignore it)."},{"Name":null,"Description":"If the item can be \"used\", this block will be non-null, and will have data related to the action performedwhen using the item.  (Guess what?  99% of the time, this action is \"dismantle\".  Shocker)","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemActionBlockDefinition"}]]},{"Name":null,"Description":"If this item can exist in an inventory, this block will be non-null.  In practice,every item that currently exists has one of these blocks.  But note that it is not necessarily guaranteed.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemInventoryBlockDefinition"}]]},{"Name":null,"Description":"If this item is a quest, this block will be non-null.  In practice, I wish I had called this the Questblock, but at the time it wasn't clear to me whether it would end up being used for purposes other than quests.It will contain data about the steps in the quest, and mechanics we can use for displaying and tracking the quest.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSetBlockDefinition"}]]},{"Name":null,"Description":"If this item can have stats (such as a weapon, armor, or vehicle), this block will be non-null andpopulated with the stats found on the item.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemStatBlockDefinition"}]]},{"Name":null,"Description":"If this item can be equipped, this block will be non-null and will be populated with the conditionsunder which it can be equipped.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyEquippingBlockDefinition"}]]},{"Name":null,"Description":"If this item can be rendered, this block will be non-null and will be populated with renderinginformation.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemTranslationBlockDefinition"}]]},{"Name":null,"Description":"If this item can be Used or Acquired to gain other items (for instance, how Eververse Boxescan be consumed to get items from the box), this block will be non-null and will give summary informationfor the items that can be acquired.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemPreviewBlockDefinition"}]]},{"Name":null,"Description":"If this item can have a level or stats, this block will be non-null and will be populatedwith default quality (item level, \"quality\", and infusion) data.  See the block for more details, there'soften less upfront information in D2 so you'll want to be aware of how you use quality and item level onthe definition level now.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemQualityBlockDefinition"}]]},{"Name":null,"Description":"The conceptual \"Value\" of an item, if any was defined.  See the DestinyItemValueBlockDefinition for more details.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemValueBlockDefinition"}]]},{"Name":null,"Description":"If this item has a known source, this block will be non-null and populatedwith source information.  Unfortunately, at this time we are not generating sources: that is someaggressively manual work which we didn't have time for, and I'm hoping to get back to at some point in the future.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSourceBlockDefinition"}]]},{"Name":null,"Description":"If this item has Objectives (extra tasks that can be accomplished related to the item... most frequentlywhen the item is a Quest Step and the Objectives need to be completed to move on to the next Quest Step),this block will be non-null and the objectives defined herein.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemObjectiveBlockDefinition"}]]},{"Name":null,"Description":"If this item *is* a Plug, this will be non-null and the info defined herein.See DestinyItemPlugDefinition for more information.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyItemPlugDefinition"}]]},{"Name":null,"Description":"If this item has related items in a \"Gear Set\", this will be non-null and the relationships defined herein.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemGearsetBlockDefinition"}]]},{"Name":null,"Description":"If this item is a \"reward sack\" that can be opened to provide other items, this will be non-null andthe properties of the sack contained herein.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSackBlockDefinition"}]]},{"Name":null,"Description":"If this item has any Sockets, this will be non-null and the individual sockets on the itemwill be defined herein.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSocketBlockDefinition"}]]},{"Name":null,"Description":"Summary data about the item.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSummaryBlockDefinition"}]]},{"Name":null,"Description":"If the item has a Talent Grid, this will be non-null and the properties of the grid defined herein.Note that, while many items still have talent grids, the only ones with meaningful Nodes still on themwill be Subclass/\"Build\" items.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemTalentGridBlockDefinition"}]]},{"Name":"investmentStats","Type":"array","Description":"If the item has stats, this block will be defined.  It has the \"raw\" investment stats for the item.These investment stats don't take into account the ways that the items can spawn, nor do they takeinto account any Stat Group transformations.  I have retained them for debugging purposes, but Ido not know how useful people will find them.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemInvestmentStatDefinition"}]},{"Name":"perks","Type":"array","Description":"If the item has any *intrinsic* Perks (Perks that it will provide regardless of Sockets, Talent Grid,and other transitory state), they will be defined here.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemPerkEntryDefinition"}]},{"Name":"loreHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the item has any related Lore (DestinyLoreDefinition), this will be the hash identifier you can useto look up the lore definition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Lore.DestinyLoreDefinition"}]},{"Name":"summaryItemHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"There are times when the game will show you a \"summary/vague\" version of an item - such as a description of its typerepresented as a DestinyInventoryItemDefinition - rather than display the item itself.\r\nThis happens sometimes when summarizing possible rewards in a tooltip.  This is the item displayed instead, ifit exists.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"animations","Type":"array","Description":"If any animations were extracted from game content for this item, these will be the definitionsof those animations.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Animations.DestinyAnimationReference"}]},{"Name":"allowActions","Type":"boolean","Description":"BNet may forbid the execution of actions on this item via the API.  If that is occurring, allowActions will be set to false."},{"Name":"links","Type":"array","Description":"If we added any help or informational URLs about this item, these will be those links.","items":[{"$ref":"#/components/schemas/Links.HyperlinkReference"}]},{"Name":"nonTransferrable","Type":"boolean","Description":"The intrinsic transferability of an item.\r\nI hate that this boolean is negative - but there's a reason.\r\nJust because an item is intrinsically transferrable doesn't mean that it can be transferred,and we don't want to imply that this is the only source of that transferability."},{"Name":"itemCategoryHashes","Type":"array","Description":"BNet attempts to make a more formal definition of item \"Categories\", as defined by DestinyItemCategoryDefinition.  This is a list of all Categories that we were able toalgorithmically determine that this item is a member of.  (for instance, that it's a \"Weapon\",that it's an \"Auto Rifle\", etc...)\r\nThe algorithm for these is, unfortunately, volatile.  If you believe you see a miscategorizeditem, please let us know on the Bungie API forums.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemCategoryDefinition"}]},{"Name":null,"Description":"In Destiny 1, we identified some items as having particular categories that we'd like to know aboutfor various internal logic purposes.  These are defined in SpecialItemType, and while these daysthe itemCategoryHashes are the preferred way of identifying types, we have retained this enumfor its convenience.","allOf":[[{"$ref":"#/components/schemas/Destiny.SpecialItemType"}]]},{"Name":null,"Description":"A value indicating the \"base\" the of the item.  This enum is a useful but dramatic oversimplificationof what it means for an item to have a \"Type\".  Still, it's handy in many situations.\r\nitemCategoryHashes are the preferred way of identifying types, we have retained this enumfor its convenience.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyItemType"}]]},{"Name":null,"Description":"A value indicating the \"sub-type\" of the item.  For instance, where an item might have anitemType value \"Weapon\", this will be something more specific like \"Auto Rifle\".\r\nitemCategoryHashes are the preferred way of identifying types, we have retained this enumfor its convenience.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyItemSubType"}]]},{"Name":null,"Description":"We run a similarly weak-sauce algorithm to try and determine whether an item is restricted to a specificclass.  If we find it to be restricted in such a way, we set this classType property to matchthe class' enumeration value so that users can easily identify class restricted items.\r\nIf you see a mis-classed item, please inform the developers in the Bungie API forum.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyClass"}]]},{"Name":"equippable","Type":"boolean","Description":"If true, then you will be allowed to equip the item if you pass its other requirements.\r\nThis being false means that you cannot equip the item under any circumstances."},{"Name":"damageTypeHashes","Type":"array","Description":"Theoretically, an item can have many possible damage types.  In *practice*, this is not true,but just in case weapons start being made that have multiple (for instance, an item where a sockethas reusable plugs for every possible damage type that you can choose from freely), this fieldwill return all of the possible damage types that are available to the weapon by default.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDamageTypeDefinition"}]},{"Name":"damageTypes","Type":"array","Description":"This is the list of all damage types that we know ahead of time the item can take on.Unfortunately, this does not preclude the possibility of something funky happeningto give the item a damage type that cannot be predicted beforehand: for example,if some designer decides to create arbitrary non-reusable plugs that cause damage typeto change.\r\nThis damage type prediction will only use the following to determine potential damage types:\r\n- Intrinsic perks\r\n- Talent Node perks\r\n- Known, reusable plugs for sockets","items":[{"$ref":"#/components/schemas/Destiny.DamageType"}]},{"Name":null,"Description":"If the item has a damage type that could be considered to be default, it will be populated here.\r\nFor various upsetting reasons, it's surprisingly cumbersome to figure this out.  I hope you're happy.","allOf":[[{"$ref":"#/components/schemas/Destiny.DamageType"}]]},{"Name":"defaultDamageTypeHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"Similar to defaultDamageType, but represented as the hash identifier for a DestinyDamageTypeDefinition.\r\nI will likely regret leaving in the enumeration versions of these properties, but for now they'revery convenient.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDamageTypeDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyInventoryItemDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic string secondaryIcon;\r\npublic string secondaryOverlay;\r\npublic string secondarySpecial;\r\npublic string screenshot;\r\npublic string itemTypeDisplayName;\r\npublic string itemTypeAndTierDisplayName;\r\npublic string displaySource;\r\npublic string tooltipStyle;\r\npublic List<object> investmentStats;\r\npublic List<object> perks;\r\npublic int loreHash;\r\npublic int summaryItemHash;\r\npublic List<object> animations;\r\npublic bool allowActions;\r\npublic List<object> links;\r\npublic bool nonTransferrable;\r\npublic List<object> itemCategoryHashes;\r\npublic bool equippable;\r\npublic List<object> damageTypeHashes;\r\npublic List<object> damageTypes;\r\npublic int defaultDamageTypeHash;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"So much of what you see in Destiny is actually an Item used in a new and creative way.This is the definition for Items in Destiny, which started off as just entities that could existin your Inventory but ended up being the backing data for so much more: quests, reward previews,slots, and subclasses.\r\nIn practice, you will want to associate this data with \"live\" item datafrom a Bungie.Net Platform call: these definitions describe the item in generic, non-instancedterms: but an actual instance of an item can vary widely from these generic definitions."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemActionBlockDefinition","RawName":"Destiny.Definitions.DestinyItemActionBlockDefinition","Properties":[{"Name":"verbName","Type":"string","Description":"Localized text for the verb of the action being performed."},{"Name":"verbDescription","Type":"string","Description":"Localized text describing the action being performed."},{"Name":"isPositive","Type":"boolean","Description":"The content has this property, however it's not entirely clear how it is used."},{"Name":"overlayScreenName","Type":"string","Description":"If the action has an overlay screen associated with it, this is the name of that screen.Unfortunately, we cannot return the screen's data itself."},{"Name":"overlayIcon","Type":"string","Description":"The icon associated with the overlay screen for the action, if any."},{"Name":"requiredCooldownSeconds","Type":"integer","Format":"int32","Description":"The number of seconds to delay before allowing this action to be performed again."},{"Name":"requiredItems","Type":"array","Description":"If the action requires other items to exist or be destroyed, this isthe list of those items and requirements.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemActionRequiredItemDefinition"}]},{"Name":"progressionRewards","Type":"array","Description":"If performing this action earns you Progression, this is the list of progressions and values grantedfor those progressions by performing this action.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionRewardDefinition"}]},{"Name":"actionTypeLabel","Type":"string","Description":"The internal identifier for the action."},{"Name":"requiredLocation","Type":"string","Description":"Theoretically, an item could have a localized string for a hint about the location in whichthe action should be performed.  In practice, no items yet have this property."},{"Name":"requiredCooldownHash","Type":"integer","Format":"uint32","Description":"The identifier hash for the Cooldown associated with this action.  We have not pulled this data yetfor you to have more data to use for cooldowns."},{"Name":"deleteOnAction","Type":"boolean","Description":"If true, the item is deleted when the action completes."},{"Name":"consumeEntireStack","Type":"boolean","Description":"If true, the entire stack is deleted when the action completes."},{"Name":"useOnAcquire","Type":"boolean","Description":"If true, this action will be performed as soon as you earn this item.Some rewards work this way, providing you a single item to pick up froma reward-granting vendor in-game and then immediately consuming itselfto provide you multiple items."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemActionBlockDefinition\r\n    {\r\npublic string verbName;\r\npublic string verbDescription;\r\npublic bool isPositive;\r\npublic string overlayScreenName;\r\npublic string overlayIcon;\r\npublic int requiredCooldownSeconds;\r\npublic List<object> requiredItems;\r\npublic List<object> progressionRewards;\r\npublic string actionTypeLabel;\r\npublic string requiredLocation;\r\npublic int requiredCooldownHash;\r\npublic bool deleteOnAction;\r\npublic bool consumeEntireStack;\r\npublic bool useOnAcquire;\r\n}\r\n}","Description":"If an item can have an action performed on it (like \"Dismantle\"), it will be defined hereif you care."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemActionRequiredItemDefinition","RawName":"Destiny.Definitions.DestinyItemActionRequiredItemDefinition","Properties":[{"Name":"count","Type":"integer","Format":"int32","Description":"The minimum quantity of the item you have to have."},{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the item you need to have.  Use it to look up the DestinyInventoryItemDefinition for more info.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"deleteOnAction","Type":"boolean","Description":"If true, the item/quantity will be deleted from your inventory when the action is performed.  Otherwise,you'll retain these required items after the action is complete."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemActionRequiredItemDefinition\r\n    {\r\npublic int count;\r\npublic int itemHash;\r\npublic bool deleteOnAction;\r\n}\r\n}","Description":"The definition of an item and quantity required in a character's inventory in order toperform an action."},{"Namespace":"Destiny.Definitions","Name":"DestinyProgressionRewardDefinition","RawName":"Destiny.Definitions.DestinyProgressionRewardDefinition","Properties":[{"Name":"progressionMappingHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the DestinyProgressionMappingDefinition that contains the progressionsfor which experience should be applied.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionMappingDefinition"}]},{"Name":"amount","Type":"integer","Format":"int32","Description":"The amount of experience to give to each of the mapped progressions."},{"Name":"applyThrottles","Type":"boolean","Description":"If true, the game's internal mechanisms to throttle progression should be applied."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyProgressionRewardDefinition\r\n    {\r\npublic int progressionMappingHash;\r\npublic int amount;\r\npublic bool applyThrottles;\r\n}\r\n}","Description":"Inventory Items can reward progression when actions are performed on them.  A common exampleof this in Destiny 1 was Bounties, which would reward Experience on your Character and the like when you completed the bounty.\r\nNote that this maps to a DestinyProgressionMappingDefinition, and *not* a DestinyProgressionDefinitiondirectly.  This is apparently so that multiple progressions can be granted progression points/experienceat the same time."},{"Namespace":"Destiny.Definitions","Name":"DestinyProgressionMappingDefinition","RawName":"Destiny.Definitions.DestinyProgressionMappingDefinition","Properties":[{"Name":null,"Description":"Infrequently defined in practice.  Defer to the individual progressions' display properties.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"displayUnits","Type":"string","Description":"The localized unit of measurement for progression across the progressions defined in thismapping.  Unfortunately, this is very infrequently defined.  Defer to the individualprogressions' display units."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyProgressionMappingDefinition\r\n    {\r\npublic string displayUnits;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Aggregations of multiple progressions.\r\nThese are used to apply rewards to multiple progressionsat once.  They can sometimes have human readable data as well, but only extremely sporadically."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemInventoryBlockDefinition","RawName":"Destiny.Definitions.DestinyItemInventoryBlockDefinition","Properties":[{"Name":"stackUniqueLabel","Type":"string","Description":"If this string is populated, you can't have more than one stack with this label in a given inventory.Note that this is different from the equipping block's unique label, which is used for equipping uniqueness."},{"Name":"maxStackSize","Type":"integer","Format":"int32","Description":"The maximum quantity of this item that can exist in a stack."},{"Name":"bucketTypeHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the DestinyInventoryBucketDefinition to which this item belongs.I should have named this \"bucketHash\", but too many things refer to it now.  Sigh.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]},{"Name":"recoveryBucketTypeHash","Type":"integer","Format":"uint32","Description":"If the item is picked up by the lost loot queue, this is the hash identifierfor the DestinyInventoryBucketDefinition into which it will be placed.Again, I should have named this recoveryBucketHash instead.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]},{"Name":"tierTypeHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the Tier Type of the item, use to look up its DestinyItemTierTypeDefinitionif you need to show localized data for the item's tier.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyItemTierTypeDefinition"}]},{"Name":"isInstanceItem","Type":"boolean","Description":"If TRUE, this item is instanced.  Otherwise, it is a generic item that merely has a quantity in a stack (like Glimmer)."},{"Name":"tierTypeName","Type":"string","Description":"The localized name of the tier type, which is a useful shortcut so you don't have to look up the definition every time.  However, it's mostly a holdover from days before we had a DestinyItemTierTypeDefinition to refer to."},{"Name":null,"Description":"The enumeration matching the tier type of the item to known values, again for convenience sake.","allOf":[[{"$ref":"#/components/schemas/Destiny.TierType"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemInventoryBlockDefinition\r\n    {\r\npublic string stackUniqueLabel;\r\npublic int maxStackSize;\r\npublic int bucketTypeHash;\r\npublic int recoveryBucketTypeHash;\r\npublic int tierTypeHash;\r\npublic bool isInstanceItem;\r\npublic string tierTypeName;\r\n}\r\n}","Description":"If the item can exist in an inventory - the overwhelming majority of them can and do -then this is the basic properties regarding the item's relationship with the inventory."},{"Namespace":"Destiny.Definitions","Name":"DestinyInventoryBucketDefinition","RawName":"Destiny.Definitions.DestinyInventoryBucketDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":null,"Description":"Where the bucket is found.  0 = Character, 1 = Account","allOf":[[{"$ref":"#/components/schemas/Destiny.BucketScope"}]]},{"Name":null,"Description":"An enum value for what items can be found in the bucket.  See the BucketCategory enumfor more details.","allOf":[[{"$ref":"#/components/schemas/Destiny.BucketCategory"}]]},{"Name":"bucketOrder","Type":"integer","Format":"int32","Description":"Use this property to provide a quick-and-dirty recommended ordering for buckets in the UI.Most UIs will likely want to forsake this for something more custom and manual."},{"Name":"itemCount","Type":"integer","Format":"int32","Description":"The maximum # of item \"slots\" in a bucket.  A slot is a given combination of item + quantity.\r\nFor instance, a Weapon will always take up a single slot, and always have a quantity of 1.But a material could take up only a single slot with hundreds of quantity."},{"Name":null,"Description":"Sometimes, inventory buckets represent conceptual \"locations\" in the game that might not be expected.This value indicates the conceptual location of the bucket, regardless of where it is actuallycontained on the character/account.  \r\nSee ItemLocation for details.  \r\nNote that location includes the Vault and the Postmaster (both of whom being just inventory buckets with additional actions that can be performed on them through a Vendor)","allOf":[[{"$ref":"#/components/schemas/Destiny.ItemLocation"}]]},{"Name":"hasTransferDestination","Type":"boolean","Description":"If TRUE, there is at least one Vendor that can transfer items to/from this bucket.  See the DestinyVendorDefinition'sacceptedItems property for more information on how transferring works."},{"Name":"enabled","Type":"boolean","Description":"If True, this bucket is enabled.  Disabled buckets may include buckets that were included for test purposes, orthat were going to be used but then were abandoned but never removed from content *cough*."},{"Name":"fifo","Type":"boolean","Description":"if a FIFO bucket fills up, it will delete the oldest item from said bucket when a new item tries to be addedto it.  If this is FALSE, the bucket will not allow new items to be placed in it until room is made by the usermanually deleting items from it.  You can see an example of this with the Postmaster's bucket."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyInventoryBucketDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int bucketOrder;\r\npublic int itemCount;\r\npublic bool hasTransferDestination;\r\npublic bool enabled;\r\npublic bool fifo;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"An Inventory (be it Character or Profile level) is comprised of many Buckets.  An example ofa bucket is \"Primary Weapons\", where all of the primary weapons on a character are gathered togetherinto a single visual element in the UI: a subset of the inventory that has a limited number of slots, andin this case also has an associated Equipment Slot for equipping an item in the bucket.\r\nItem definitions declare what their \"default\" bucket is (DestinyInventoryItemDefinition.inventory.bucketTypeHash),and Item instances will tell you which bucket they are currently residing in (DestinyItemComponent.bucketHash).You can use this information along with the DestinyInventoryBucketDefinition to show these items grouped bybucket.\r\nYou cannot transfer an item to a bucket that is not its Default without going through a Vendor's \"accepted items\"(DestinyVendorDefinition.acceptedItems).  This is how transfer functionality like the Vault is implemented, as afeature of a Vendor.  See the vendor's acceptedItems property for more details."},{"Namespace":"Destiny.Definitions.Items","Name":"DestinyItemTierTypeDefinition","RawName":"Destiny.Definitions.Items.DestinyItemTierTypeDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":null,"Description":"If this tier defines infusion properties, they will be contained here.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyItemTierTypeInfusionBlock"}]]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Items\r\n{\r\n    public class DestinyItemTierTypeDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Defines the tier type of an item.  Mostly this provides human readable properties for typeslike Common, Rare, etc...\r\nIt also provides some base data for infusion that could be useful."},{"Namespace":"Destiny.Definitions.Items","Name":"DestinyItemTierTypeInfusionBlock","RawName":"Destiny.Definitions.Items.DestinyItemTierTypeInfusionBlock","Properties":[{"Name":"baseQualityTransferRatio","Type":"number","Format":"float","Description":"The default portion of quality that will transfer from the infuser to the infusee item.(InfuserQuality - InfuseeQuality) * baseQualityTransferRatio = base quality transferred."},{"Name":"minimumQualityIncrement","Type":"integer","Format":"int32","Description":"As long as InfuserQuality > InfuseeQuality, the amount of quality bestowed is guaranteedto be at least this value, even if the transferRatio would dictate that it should be less.The total amount of quality that ends up in the Infusee cannot exceed the Infuser's quality however(for instance, if you infuse a 300 item with a 301 item and the minimum quality incrementis 10, the infused item will not end up with 310 quality)"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Items\r\n{\r\n    public class DestinyItemTierTypeInfusionBlock\r\n    {\r\npublic decimal baseQualityTransferRatio;\r\npublic int minimumQualityIncrement;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSetBlockDefinition","RawName":"Destiny.Definitions.DestinyItemSetBlockDefinition","Properties":[{"Name":"itemList","Type":"array","Description":"A collection of hashes of set items, for items such as Quest Metadata items that possess this data.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSetBlockEntryDefinition"}]},{"Name":"requireOrderedSetItemAdd","Type":"boolean","Description":"If true, items in the set can only be added in increasing order, and adding an item will remove any previous item.For Quests, this is by necessity true.  Only one quest step is present at a time, and previous steps are removedas you advance in the quest."},{"Name":"setIsFeatured","Type":"boolean","Description":"If true, the UI should treat this quest as \"featured\""},{"Name":"setType","Type":"string","Description":"A string identifier we can use to attempt to identify the category of the Quest."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSetBlockDefinition\r\n    {\r\npublic List<object> itemList;\r\npublic bool requireOrderedSetItemAdd;\r\npublic bool setIsFeatured;\r\npublic string setType;\r\n}\r\n}","Description":"Primarily for Quests, this is the definition of properties related to the item if it is a questand its various quest steps."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSetBlockEntryDefinition","RawName":"Destiny.Definitions.DestinyItemSetBlockEntryDefinition","Properties":[{"Name":"trackingValue","Type":"integer","Format":"int32","Description":"Used for tracking which step a user reached.  These values will be populated in the user'sinternal state, which we expose externally as a more usable DestinyQuestStatus object.If this item has been obtained, this value will be set in trackingUnlockValueHash."},{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"This is the hash identifier for a DestinyInventoryItemDefinition representing this quest step.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSetBlockEntryDefinition\r\n    {\r\npublic int trackingValue;\r\npublic int itemHash;\r\n}\r\n}","Description":"Defines a particular entry in an ItemSet (AKA a particular Quest Step in a Quest)"},{"Namespace":"Destiny.Definitions","Name":"DestinyItemStatBlockDefinition","RawName":"Destiny.Definitions.DestinyItemStatBlockDefinition","Properties":[{"Name":"statGroupHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the item's stats are meant to be modified by a DestinyStatGroupDefinition, this willbe the identifier for that definition.\r\nIf you are using live data or precomputed stats data on the DestinyInventoryItemDefinition.stats.statsproperty, you don't have to worry about statGroupHash and how it alters stats: the already alteredstats are provided to you.  But if you want to see how the sausage gets made, or perform computationsyourself, this is valuable information.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatGroupDefinition"}]},{"Name":"stats","Type":"object","Description":"If you are looking for precomputed values for the stats on a weapon, this is where they are stored.Technically these are the \"Display\" stat values.  Please see DestinyStatsDefinition for whatDisplay Stat Values means, it's a very long story... but essentially these are the closest valuesBNet can get to the item stats that you see in-game.\r\nThese stats are keyed by the DestinyStatDefinition's hash identifier for the statthat's found on the item.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemStatDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":"hasDisplayableStats","Type":"boolean","Description":"A quick and lazy way to determine whether any stat other than the \"primary\" stat is actuallyvisible on the item.  Items often have stats that we return in case people find them useful, butthey're not part of the \"Stat Group\" and thus we wouldn't display them in our UI.  If this is False,then we're not going to display any of these stats other than the primary one."},{"Name":"primaryBaseStatHash","Type":"integer","Format":"uint32","Description":"This stat is determined to be the \"primary\" stat, and can be looked up in the stats or anyother stat collection related to the item.\r\nUse this hash to look up the stat's value using DestinyInventoryItemDefinition.stats.stats,and the renderable data for the primary stat in the related DestinyStatDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemStatBlockDefinition\r\n    {\r\npublic int statGroupHash;\r\npublic bool hasDisplayableStats;\r\npublic int primaryBaseStatHash;\r\n}\r\n}","Description":"Information about the item's calculated stats, with as much data as we can find for the statswithout having an actual instance of the item.\r\nNote that this means the entire concept of providing these stats is fundamentally insufficient:we cannot predict with 100% accuracy the conditions under which an item can spawn, so we use variousheuristics to attempt to simulate the conditions as accurately as possible.  Actual stats for items in-game can and will vary, but these should at least be useful base points for comparisonand display.\r\nIt is also worth noting that some stats, like Magazine size, have further calculations performed on themby scripts in-game and on the game servers that BNet does not have access to.  We cannot know how those statsare further transformed, and thus some stats will be inaccurate even on instances of items in BNet vs. howthey appear in-game.  This is a known limitation of our item statistics, without any planned fix."},{"Namespace":"Destiny.Definitions","Name":"DestinyInventoryItemStatDefinition","RawName":"Destiny.Definitions.DestinyInventoryItemStatDefinition","Properties":[{"Name":"statHash","Type":"integer","Format":"uint32","Description":"The hash for the DestinyStatDefinition representing this stat.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":"value","Type":"integer","Format":"int32","Description":"This value represents the stat value assuming the minimum possible rollbut accounting for any mandatory bonuses that should be applied to the stat on item creation.\r\nIn Destiny 1, this was different from the \"minimum\" value because there were certain conditionswhere an item could be theoretically lower level/value than the initial roll.  \r\nIn Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some othersystem change occurs... thus in practice, value and minimum should be the same in Destiny 2.  Good riddance."},{"Name":"minimum","Type":"integer","Format":"int32","Description":"The minimum possible value for this stat that we think the item can roll."},{"Name":"maximum","Type":"integer","Format":"int32","Description":"The maximum possible value for this stat that we think the item can roll."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyInventoryItemStatDefinition\r\n    {\r\npublic int statHash;\r\npublic int value;\r\npublic int minimum;\r\npublic int maximum;\r\n}\r\n}","Description":"Defines a specific stat value on an item, and the minimum/maximum range that we couldcompute for the item based on our heuristics for how the item might be generated.\r\nNot guaranteed to match real-world instances of the item, but should hopefully at leastbe close.  If it's not close, let us know on the Bungie API forums."},{"Namespace":"Destiny.Definitions","Name":"DestinyStatDefinition","RawName":"Destiny.Definitions.DestinyStatDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":null,"Description":"Stats can exist on a character or an item, and they may potentially be aggregated in differentways.  The DestinyStatAggregationType enum value indicates the way that this stat is beingaggregated.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyStatAggregationType"}]]},{"Name":"hasComputedBlock","Type":"boolean","Description":"True if the stat is computed rather than being delivered as a raw value on items.\r\nFor instance, the Light stat in Destiny 1 was a computed stat."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyStatDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic bool hasComputedBlock;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"This represents a stat that's applied to a character or an item (such as a weapon, piece of armor, or a vehicle).\r\nAn example of a stat might be Attack Power on a weapon.\r\nStats go through a complex set of transformations before they end up being shown to the user asa number or a progress bar, and those transformations are fundamentally intertwined with the conceptof a \"Stat Group\" (DestinyStatGroupDefinition).  Items have both Stats and a reference to a Stat Group,and it is the Stat Group that takes the raw stat information and gives it both rendering metadata(such as whether to show it as a number or a progress bar) and the final transformation data (interpolationtables to turn the raw investment stat into a display stat).  Please see DestinyStatGroupDefinition formore information on that transformational process.\r\nStats are segregated from Stat Groups because different items and types of items can refer to the same stat,but have different \"scales\" for the stat while still having the same underlying value.  For example, botha Shotgun and an Auto Rifle may have a \"raw\" impact stat of 50, but the Auto Rifle's Stat Group will scalethat 50 down so that, when it is displayed, it is a smaller value relative to the shotgun.  (this is atotally made up example, don't assume shotguns have naturally higher impact than auto rifles because of this)\r\nA final caveat is that some stats, even after this \"final\" transformation, go through yet another setof transformations directly in the game as a result of dynamic, stateful scripts that get run.BNet has no access to these scripts, nor any way to know which scripts get executed.  As a result, thestats for an item that you see in-game - particularly for stats that are often impacted by Perks, likeMagazine Size - can change dramatically from what we return on Bungie.Net.  This is a known issue withno fix coming down the pipeline.  Take these stats with a grain of salt.\r\nStats actually go through four transformations, for those interested:\r\n1) \"Sandbox\" stat, the \"most raw\" form.  These are pretty much useless without transformations applied,and thus are not currently returned in the API.  If you really want these, we can provide them.  Maybesomeone could do something cool with it?\r\n2) \"Investment\" stat (the stat's value after DestinyStatDefinition's interpolation tablesand aggregation logic is applied to the \"Sandbox\" stat value)\r\n3) \"Display\" stat (the stat's base UI-visible value after DestinyStatGroupDefinition's interpolation tablesare applied to the Investment Stat value.  For most stats, this is what is displayed.)\r\n4) Underlying in-game stat (the stat's actual value according to the game, after the game runs dynamicscripts based on the game and character's state.  This is the final transformation that BNet does not haveaccess to.  For most stats, this is not actually displayed to the user, with the exception of Magazine Sizewhich is then piped back to the UI for display in-game, but not to BNet.)"},{"Namespace":"Destiny.Definitions","Name":"DestinyStatGroupDefinition","RawName":"Destiny.Definitions.DestinyStatGroupDefinition","Properties":[{"Name":"maximumValue","Type":"integer","Format":"int32","Description":"The maximum possible value that any stat in this group can be transformed into.\r\nThis is used by stats that *don't* have scaledStats entries below, but thatstill need to be displayed as a progress bar, in which case this is usedas the upper bound for said progress bar.  (the lower bound is always 0)"},{"Name":"uiPosition","Type":"integer","Format":"int32","Description":"This apparently indicates the position of the stats in the UI?  I've returned itin case anyone can use it, but it's not of any use to us on BNet.  Something's beinglost in translation with this value."},{"Name":"scaledStats","Type":"array","Description":"Any stat that requires scaling to be transformed from an \"Investment\" stat to a \"Display\"stat will have an entry in this list.  For more information on what those types of statsmean and the transformation process, see DestinyStatDefinition.\r\nIn retrospect, I wouldn't mind if this was a dictionary keyed by the stat hash instead.But I'm going to leave it be because [[After Apple Picking]].","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDisplayDefinition"}]},{"Name":"overrides","Type":"object","Description":"The game has the ability to override, based on the stat group, what the localized text isthat is displayed for Stats being shown on the item.\r\nMercifully, no Stat Groups use this feature currently.  If they start using them,we'll all need to start using them (and those of you who are more prudent than I amcan go ahead and start pre-checking for this.)","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatOverrideDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyStatGroupDefinition\r\n    {\r\npublic int maximumValue;\r\npublic int uiPosition;\r\npublic List<object> scaledStats;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"When an inventory item (DestinyInventoryItemDefinition) has Stats (such as Attack Power),the item will refer to a Stat Group.  This definition enumerates the properties used totransform the item's \"Investment\" stats into \"Display\" stats.\r\nSee DestinyStatDefinition's documentation for information about the transformationof Stats, and the meaning of an Investment vs. a Display stat.\r\nIf you don't want to do these calculations on your own, fear not: pulling live data fromthe BNet endpoints will return display stat values pre-computed and ready for you to use.I highly recommend this approach, saves a lot of time and also accounts for certain statmodifiers that can't easily be accounted for without live data (such as stat modifiers onTalent Grids and Socket Plugs)"},{"Namespace":"Destiny.Definitions","Name":"DestinyStatDisplayDefinition","RawName":"Destiny.Definitions.DestinyStatDisplayDefinition","Properties":[{"Name":"statHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the stat being transformed into a Display stat.\r\nUse it to look up the DestinyStatDefinition, or key into a DestinyInventoryItemDefinition'sstats property.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":"maximumValue","Type":"integer","Format":"int32","Description":"Regardless of the output of interpolation, this is the maximum possible valuethat the stat can be.  It should also be used as the upper boundfor displaying the stat as a progress bar (the minimum always being 0)"},{"Name":"displayAsNumeric","Type":"boolean","Description":"If this is true, the stat should be displayed as a number.  Otherwise, display it asa progress bar.  Or, you know, do whatever you want.  There's no displayAsNumericpolice."},{"Name":"displayInterpolation","Type":"array","Description":"The interpolation table representing how the Investment Stat is transformed intoa Display Stat.  \r\nSee DestinyStatDefinition for a description of the stages ofstat transformation.","items":[{"$ref":"#/components/schemas/Interpolation.InterpolationPoint"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyStatDisplayDefinition\r\n    {\r\npublic int statHash;\r\npublic int maximumValue;\r\npublic bool displayAsNumeric;\r\npublic List<object> displayInterpolation;\r\n}\r\n}","Description":"Describes the way that an Item Stat (see DestinyStatDefinition) is transformedusing the DestinyStatGroupDefinition related to that item.  See both of the aforementioneddefinitions for more information about the stages of stat transformation.\r\nThis represents the transformation of a stat into a \"Display\" stat (the closest valuethat BNet can get to the in-game display value of the stat)"},{"Namespace":"Interpolation","Name":"InterpolationPoint","RawName":"Interpolation.InterpolationPoint","Properties":[{"Name":"value","Type":"integer","Format":"int32"},{"Name":"weight","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Interpolation\r\n{\r\n    public class InterpolationPoint\r\n    {\r\npublic int value;\r\npublic int weight;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyStatOverrideDefinition","RawName":"Destiny.Definitions.DestinyStatOverrideDefinition","Properties":[{"Name":"statHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the stat whose display properties are being overridden.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":null,"Description":"The display properties to show instead of the base DestinyStatDefinition display properties.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyStatOverrideDefinition\r\n    {\r\npublic int statHash;\r\n}\r\n}","Description":"Stat Groups (DestinyStatGroupDefinition) has the ability to override the localized textassociated with stats that are to be shown on the items with which they are associated.\r\nThis defines a specific overridden stat.  You could theoretically check these beforerendering your stat UI, and for each stat that has an override show these displayPropertiesinstead of those on the DestinyStatDefinition.\r\nOr you could be like us, and skip that for now because the game has yet to actuallyuse this feature.  But know that it's here, waiting for a resilliant young designer totake up the mantle and make us all look foolish by showing the wrong name for stats.\r\nNote that, if this gets used, the override will apply only to items using the overridingStat Group.  Other items will still show the default stat's name/description."},{"Namespace":"Destiny.Definitions","Name":"DestinyEquippingBlockDefinition","RawName":"Destiny.Definitions.DestinyEquippingBlockDefinition","Properties":[{"Name":"gearsetItemHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the item is part of a gearset, this is a reference to that gearset item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"uniqueLabel","Type":"string","Description":"If defined, this is the label used to check if the item has other items ofmatching types already equipped.  \r\nFor instance, when you aren't allowed toequip more than one Exotic Weapon, that's because all exotic weapons haveidentical uniqueLabels and the game checks the to-be-equipped item's uniqueLabelvs. all other already equipped items (other than the item in the slot that'sabout to be occupied)."},{"Name":"uniqueLabelHash","Type":"integer","Format":"uint32","Description":"The hash of that unique label.  Does not point to a specific definition."},{"Name":"equipmentSlotTypeHash","Type":"integer","Format":"uint32","Description":"An equipped item *must* be equipped in an Equipment Slot.  This is the hash identifierof the DestinyEquipmentSlotDefinition into which it must be equipped.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyEquipmentSlotDefinition"}]},{"Name":null,"Description":"These are custom attributes on the equippability of the item.\r\nFor now, this can only be \"equip on acquire\", which would mean that the itemwill be automatically equipped as soon as you pick it up.","allOf":[[{"$ref":"#/components/schemas/Destiny.EquippingItemBlockAttributes"}]]},{"Name":"displayStrings","Type":"array","Description":"These are strings that represent the possible Game/Account/Character state failure conditionsthat can occur when trying to equip the item.  They match up one-to-one with requiredUnlockExpressions.","items":[{"type":"string"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyEquippingBlockDefinition\r\n    {\r\npublic int gearsetItemHash;\r\npublic string uniqueLabel;\r\npublic int uniqueLabelHash;\r\npublic int equipmentSlotTypeHash;\r\npublic List<object> displayStrings;\r\n}\r\n}","Description":"Items that can be equipped define this block.  It contains information we need tounderstand how and when the item can be equipped."},{"Namespace":"Destiny.Definitions","Name":"DestinyEquipmentSlotDefinition","RawName":"Destiny.Definitions.DestinyEquipmentSlotDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"equipmentCategoryHash","Type":"integer","Format":"uint32","Description":"These technically point to \"Equipment Category Definitions\".  But don't get excited.  There'snothing of significant value in those definitions, so I didn't bother to expose them.  You can use thehash here to group equipment slots by common functionality, which serves the same purpose as if we hadthe Equipment Category definitions exposed."},{"Name":"bucketTypeHash","Type":"integer","Format":"uint32","Description":"The inventory bucket that owns this equipment slot.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]},{"Name":"applyCustomArtDyes","Type":"boolean","Description":"If True, equipped items should have their custom art dyes applied when rendering the item.Otherwise, custom art dyes on an item should be ignored if the item is equipped in this slot."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyEquipmentSlotDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int equipmentCategoryHash;\r\npublic int bucketTypeHash;\r\npublic bool applyCustomArtDyes;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Characters can not only have Inventory buckets (containers of items that are generally matched by their type orfunctionality), they can also have Equipment Slots.\r\nThe Equipment Slot is an indicator that the related bucket can have instanced items equippedon the character.  For instance, the Primary Weapon bucket has an Equipment Slot that determineswhether you can equip primary weapons, and holds the association between its slot and the inventory bucketfrom which it can have items equipped.\r\nAn Equipment Slot must have a related Inventory Bucket, but notall inventory buckets must have Equipment Slots."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemTranslationBlockDefinition","RawName":"Destiny.Definitions.DestinyItemTranslationBlockDefinition","Properties":[{"Name":"weaponPatternIdentifier","Type":"string"},{"Name":"weaponPatternHash","Type":"integer","Format":"uint32"},{"Name":"defaultDyes","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.DyeReference"}]},{"Name":"lockedDyes","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.DyeReference"}]},{"Name":"customDyes","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.DyeReference"}]},{"Name":"arrangements","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyGearArtArrangementReference"}]},{"Name":"hasGeometry","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemTranslationBlockDefinition\r\n    {\r\npublic string weaponPatternIdentifier;\r\npublic int weaponPatternHash;\r\npublic List<object> defaultDyes;\r\npublic List<object> lockedDyes;\r\npublic List<object> customDyes;\r\npublic List<object> arrangements;\r\npublic bool hasGeometry;\r\n}\r\n}","Description":"This Block defines the rendering data associated with the item, if any."},{"Namespace":"Destiny","Name":"DyeReference","RawName":"Destiny.DyeReference","Properties":[{"Name":"channelHash","Type":"integer","Format":"uint32"},{"Name":"dyeHash","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DyeReference\r\n    {\r\npublic int channelHash;\r\npublic int dyeHash;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyGearArtArrangementReference","RawName":"Destiny.Definitions.DestinyGearArtArrangementReference","Properties":[{"Name":"classHash","Type":"integer","Format":"uint32"},{"Name":"artArrangementHash","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyGearArtArrangementReference\r\n    {\r\npublic int classHash;\r\npublic int artArrangementHash;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyItemPreviewBlockDefinition","RawName":"Destiny.Definitions.DestinyItemPreviewBlockDefinition","Properties":[{"Name":"previewVendorHash","Type":"integer","Format":"uint32","Description":"If the preview data is derived from a fake \"Preview\" Vendor, this willbe the hash identifier for the DestinyVendorDefinition of that fake vendor.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":"previewActionString","Type":"string","Description":"If the preview has an associated action (like \"Open\"), this will be the localizedstring for that action."},{"Name":"derivedItemCategories","Type":"array","Description":"This is a list of the items being previewed, categorized in the same way as they arein the preview UI.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyDerivedItemCategoryDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemPreviewBlockDefinition\r\n    {\r\npublic int previewVendorHash;\r\npublic string previewActionString;\r\npublic List<object> derivedItemCategories;\r\n}\r\n}","Description":"Items like Sacks or Boxes can have items that it shows in-game when you view detailsthat represent the items you can obtain if you use or acquire the item.\r\nThis defines those categories, and gives some insights into that data's source."},{"Namespace":"Destiny.Definitions.Items","Name":"DestinyDerivedItemCategoryDefinition","RawName":"Destiny.Definitions.Items.DestinyDerivedItemCategoryDefinition","Properties":[{"Name":"categoryDescription","Type":"string","Description":"The localized string for the category title.  This will be something describingthe items you can get as a group, or your likelihood/the quantity you'll get."},{"Name":"items","Type":"array","Description":"This is the list of all of the items for this category and the basic properties we'llknow about them.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyDerivedItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Items\r\n{\r\n    public class DestinyDerivedItemCategoryDefinition\r\n    {\r\npublic string categoryDescription;\r\npublic List<object> items;\r\n}\r\n}","Description":"A shortcut for the fact that some items have a \"Preview Vendor\"- See DestinyInventoryItemDefinition.preview.previewVendorHash - that is intendedto be used to show what items you can get as a result of acquiring or using this item.\r\nA common example of this in Destiny 1 was Eververse \"Boxes,\" which could have many possible items.This \"Preview Vendor\" is not a vendor you can actually see in the game, but it defines categories and sale items for all of the possibleitems you could get from the Box so that the game can show them to you.  We summarize that info hereso that you don't have to do that Vendor lookup and aggregation manually."},{"Namespace":"Destiny.Definitions.Items","Name":"DestinyDerivedItemDefinition","RawName":"Destiny.Definitions.Items.DestinyDerivedItemDefinition","Properties":[{"Name":"itemHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"The hash for the DestinyInventoryItemDefinition of this derived item, if there is one.Sometimes we are given this information as a manual override, in which case there won't bean actual DestinyInventoryItemDefinition for what we display, but you can still show the stringsfrom this object itself."},{"Name":"itemName","Type":"string","Description":"The name of the derived item."},{"Name":"itemDetail","Type":"string","Description":"Additional details about the derived item, in addition to the description."},{"Name":"itemDescription","Type":"string","Description":"A brief description of the item."},{"Name":"iconPath","Type":"string","Description":"An icon for the item."},{"Name":"vendorItemIndex","Type":"integer","Format":"int32","Description":"If the item was derived from a \"Preview Vendor\", this will be an index intothe DestinyVendorDefinition's itemList property.  Otherwise, -1."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Items\r\n{\r\n    public class DestinyDerivedItemDefinition\r\n    {\r\npublic int itemHash;\r\npublic string itemName;\r\npublic string itemDetail;\r\npublic string itemDescription;\r\npublic string iconPath;\r\npublic int vendorItemIndex;\r\n}\r\n}","Description":"This is a reference to, and summary data for, a specific item thatyou can get as a result of Using or Acquiring some other Item (For example,this could be summary information for an Emote that you can get by opening an an Eververse Box)See DestinyDerivedItemCategoryDefinition for more information."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorDefinition","RawName":"Destiny.Definitions.DestinyVendorDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDisplayPropertiesDefinition"},{"Name":"buyString","Type":"string","Description":"If the vendor has a custom localized string describing the \"buy\" action, that isreturned here."},{"Name":"sellString","Type":"string","Description":"Ditto for selling.  Not that you can sell items to a vendor anymore.  Will it come back?Who knows.  The string's still there."},{"Name":"displayItemHash","Type":"integer","Format":"uint32","Description":"If the vendor has an item that should be displayed as the \"featured\" item, this isthe hash identifier for that DestinyVendorItemDefinition.\r\nApparently this is usually a related currency, like a reputation token.  But it need not be restricted to that.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"inhibitBuying","Type":"boolean","Description":"If this is true, you aren't allowed to buy whatever the vendor is selling."},{"Name":"inhibitSelling","Type":"boolean","Description":"If this is true, you're not allowed to sell whatever the vendor is buying."},{"Name":"factionHash","Type":"integer","Format":"uint32","Description":"If the Vendor has a faction, this hash will be valid and point to a DestinyFactionDefinition.\r\nThe game UI and BNet often mine the faction definition for additional elements and details to placeon the screen, such as the faction's Progression status (aka \"Reputation\").","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyFactionDefinition"}]},{"Name":"resetIntervalMinutes","Type":"integer","Format":"int32","Description":"A number used for calculating the frequency of a vendor's inventory resetting/refreshing.\r\nDon't worry about calculating this - we do it on the server side and send you the next refreshdate with the live data."},{"Name":"resetOffsetMinutes","Type":"integer","Format":"int32","Description":"Again, used for reset/refreshing of inventory.  Don't worry too much about it.  Unless you want to."},{"Name":"failureStrings","Type":"array","Description":"If an item can't be purchased from the vendor, there may be many \"custom\"/game state specific reasons why not.\r\nThis is a list of localized strings with messages for those custom failures.  The live BNet data will return afailureIndexes property for items that can't be purchased: using those values to index into this array,you can show the user the appropriate failure message for the item that can't be bought.","items":[{"type":"string"}]},{"Name":"unlockRanges","Type":"array","Description":"If we were able to predict the dates when this Vendor will be visible/available, this will be the listof those date ranges.  Sadly, we're not able to predict this very frequently, so this will often be useless data.","items":[{"$ref":"#/components/schemas/Dates.DateRange"}]},{"Name":"vendorIdentifier","Type":"string","Description":"The internal identifier for the Vendor.  A holdover from the old days of Vendors, but we don't havetime to refactor it away."},{"Name":"vendorPortrait","Type":"string","Description":"A portrait of the Vendor's smiling mug.  Or frothing tentacles."},{"Name":"vendorBanner","Type":"string","Description":"If the vendor has a custom banner image, that can be found here."},{"Name":"enabled","Type":"boolean","Description":"If a vendor is not enabled, we won't even save the vendor's definition, and we won't return any items or info about them.It's as if they don't exist."},{"Name":"visible","Type":"boolean","Description":"If a vendor is not visible, we still have and will give vendor definition info, but we won't use themfor things like Advisors or UI."},{"Name":"vendorCategoryIdentifier","Type":"string","Description":"The identifier of the VendorCategoryDefinition for this vendor."},{"Name":"vendorSubcategoryIdentifier","Type":"string","Description":"The identifier of the VendorCategoryDefinition for this vendor's subcategory."},{"Name":"consolidateCategories","Type":"boolean","Description":"If TRUE, consolidate categories that only differ by trivial properties (such as having minor differences in name)"},{"Name":"actions","Type":"array","Description":"Describes \"actions\" that can be performed on a vendor.  Currently, none of these exist.  But theoreticallya Vendor could let you interact with it by performing actions.  We'll see what these end up lookinglike if they ever get used.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorActionDefinition"}]},{"Name":"categories","Type":"array","Description":"These are the headers for sections of items that the vendor is selling.When you see items organized by category in the header, it is these categoriesthat it is showing.\r\nWell, technically not *exactly* these.  On BNet, it doesn't make sense to have categoriesbe \"paged\" as we do in Destiny, so we run some heuristics to attempt to aggregate pages ofcategories together.  \r\nThese are the categories post-concatenation, if the vendor had concatenationapplied.  If you want the pre-aggregated category data, use originalCategories.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorCategoryEntryDefinition"}]},{"Name":"originalCategories","Type":"array","Description":"See the categories property for a description of categories and why originalCategories exists.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorCategoryEntryDefinition"}]},{"Name":"displayCategories","Type":"array","Description":"Display Categories are different from \"categories\" in that these are specifically for visual groupingand display of categories in Vendor UI.  \r\nThe \"categories\" structure is for validation of the containeditems, and can be categorized entirely separately from \"Display Categories\", there need be and often will beno meaningful relationship between the two.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDisplayCategoryDefinition"}]},{"Name":"interactions","Type":"array","Description":"In addition to selling items, vendors can have \"interactions\": UI where you \"talk\" with the vendorand they offer you a reward, some item, or merely acknowledge via dialog that you did something cool.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorInteractionDefinition"}]},{"Name":"inventoryFlyouts","Type":"array","Description":"If the vendor shows you items from your own inventory - such as the Vault vendor does -this data describes the UI around showing those inventory buckets and which ones get shown.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition"}]},{"Name":"itemList","Type":"array","Description":"If the vendor sells items (or merely has a list of items to show like the \"Sack\" vendors do),this is the list of those items that the vendor can sell.  From this list, only a subset will beavailable from the vendor at any given time, selected randomly and reset on the vendor's refresh interval.\r\nNote that a vendor can sell the same item multiple ways: for instance, nothing stops a vendor from sellingyou some specific weapon but using two different currencies, or the same weapon at multiple \"item levels\".","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorItemDefinition"}]},{"Name":"services","Type":"array","Description":"BNet doesn't use this data yet, but it appears to be an optional list of flavor textabout services that the Vendor can provide.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorServiceDefinition"}]},{"Name":"acceptedItems","Type":"array","Description":"If the Vendor is actually a vehicle for the transferring of items (like the Vault and Postmastervendors), this defines the list of source->destination buckets for transferring.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorAcceptedItemDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorDefinition\r\n    {\r\npublic Destiny.Definitions.DestinyVendorDisplayPropertiesDefinition displayProperties;\r\npublic string buyString;\r\npublic string sellString;\r\npublic int displayItemHash;\r\npublic bool inhibitBuying;\r\npublic bool inhibitSelling;\r\npublic int factionHash;\r\npublic int resetIntervalMinutes;\r\npublic int resetOffsetMinutes;\r\npublic List<object> failureStrings;\r\npublic List<object> unlockRanges;\r\npublic string vendorIdentifier;\r\npublic string vendorPortrait;\r\npublic string vendorBanner;\r\npublic bool enabled;\r\npublic bool visible;\r\npublic string vendorCategoryIdentifier;\r\npublic string vendorSubcategoryIdentifier;\r\npublic bool consolidateCategories;\r\npublic List<object> actions;\r\npublic List<object> categories;\r\npublic List<object> originalCategories;\r\npublic List<object> displayCategories;\r\npublic List<object> interactions;\r\npublic List<object> inventoryFlyouts;\r\npublic List<object> itemList;\r\npublic List<object> services;\r\npublic List<object> acceptedItems;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"These are the definitions for Vendors.\r\nIn Destiny, a Vendor can be a lot of things - some things that you wouldn't expect, and some thingsthat you don't even see directly in the game.  Vendors are the Dolly Levi of the Destiny universe.\r\n- Traditional Vendors as you see in game: people who you come up to and who give you quests, rewards, or whoyou can buy things from.\r\n- Kiosks/Collections, which are really just Vendors that don't charge currency (or charge some pittance of a currency)and whose gating for purchases revolves more around your character's state.\r\n- Previews for rewards or the contents of sacks.  These are implemented as Vendors, where you can't actually purchase fromthem but the items that they have for sale and the categories of sale items reflect the rewards or contents of the sack.This is so that the game could reuse the existing Vendor display UI for rewards and save a bunch of wheel reinvention.\r\n- Item Transfer capabilities, like the Vault and Postmaster.  Vendors can have \"acceptedItem\" buckets that determinethe source and destination buckets for transfers.  When you interact with such a vendor, these buckets are whatgets shown in the UI instead of any items that the Vendor would have for sale.  Yep, the Vault is a vendor.\r\nIt is pretty much guaranteed that they'll be used for even more features in the future.  They have cometo be seen more as generic categorized containers for items than \"vendors\" in a traditional sense, forbetter or worse.\r\nWhere possible and time allows, we'll attempt to split those out into their own moredigestible derived \"Definitions\": but often time does not allow that, as you can see from the above waysthat vendors are used which we never split off from Vendor Definitions externally.\r\nSince Vendors are so many things to so many parts of the game, the definition is understandably complex.You will want to combine this data with live Vendor information from the API when it is available."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorDisplayPropertiesDefinition","RawName":"Destiny.Definitions.DestinyVendorDisplayPropertiesDefinition","Properties":[{"Name":"largeIcon","Type":"string"},{"Name":"subtitle","Type":"string"},{"Name":"requirementsDisplay","Type":"array","Description":"Vendors, in addition to expected display property data, may also showsome \"common requirements\" as statically defined definition data.  This might be whena vendor accepts a single type of currency, or when the currency is unique to the vendorand the designers wanted to show that currency when you interact with the vendor.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorRequirementDisplayEntryDefinition"}]},{"Name":"description","Type":"string"},{"Name":"name","Type":"string"},{"Name":"icon","Type":"string","Description":"Note that \"icon\" is sometimes misleading, and should be interpreted in the context of the entity.For instance, in Destiny 1 the DestinyRecordBookDefinition's icon was a big picture of a book.\r\nBut usually, it will be a small square image that you can use as... well, an icon."},{"Name":"hasIcon","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorDisplayPropertiesDefinition\r\n    {\r\npublic string largeIcon;\r\npublic string subtitle;\r\npublic List<object> requirementsDisplay;\r\npublic string description;\r\npublic string name;\r\npublic string icon;\r\npublic bool hasIcon;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorRequirementDisplayEntryDefinition","RawName":"Destiny.Definitions.DestinyVendorRequirementDisplayEntryDefinition","Properties":[{"Name":"icon","Type":"string"},{"Name":"name","Type":"string"},{"Name":"source","Type":"string"},{"Name":"type","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorRequirementDisplayEntryDefinition\r\n    {\r\npublic string icon;\r\npublic string name;\r\npublic string source;\r\npublic string type;\r\n}\r\n}","Description":"The localized properties of the requirementsDisplay, allowing information about the requirement oritem being featured to be seen."},{"Namespace":"Dates","Name":"DateRange","RawName":"Dates.DateRange","Properties":[{"Name":"start","Type":"string","Format":"date-time"},{"Name":"end","Type":"string","Format":"date-time"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Dates\r\n{\r\n    public class DateRange\r\n    {\r\npublic string start;\r\npublic string end;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorActionDefinition","RawName":"Destiny.Definitions.DestinyVendorActionDefinition","Properties":[{"Name":"description","Type":"string"},{"Name":"executeSeconds","Type":"integer","Format":"int32"},{"Name":"icon","Type":"string"},{"Name":"name","Type":"string"},{"Name":"verb","Type":"string"},{"Name":"isPositive","Type":"boolean"},{"Name":"actionId","Type":"string"},{"Name":"actionHash","Type":"integer","Format":"uint32"},{"Name":"autoPerformAction","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorActionDefinition\r\n    {\r\npublic string description;\r\npublic int executeSeconds;\r\npublic string icon;\r\npublic string name;\r\npublic string verb;\r\npublic bool isPositive;\r\npublic string actionId;\r\npublic int actionHash;\r\npublic bool autoPerformAction;\r\n}\r\n}","Description":"If a vendor can ever end up performing actions, these are the properties that will be relatedto those actions.  I'm not going to bother documenting this yet, as it is unused and unclear ifit will ever be used... but in case it is ever populated and someone finds it useful, it is defined here."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorCategoryEntryDefinition","RawName":"Destiny.Definitions.DestinyVendorCategoryEntryDefinition","Properties":[{"Name":"categoryIndex","Type":"integer","Format":"int32","Description":"The index of the category in the original category definitions for the vendor."},{"Name":"categoryId","Type":"string","Description":"The string identifier of the category."},{"Name":"categoryHash","Type":"integer","Format":"uint32","Description":"The hashed identifier for the category.  (note that this is NOT pointing to a DestinyVendorCategoryDefinition,it's confusing but this is a sale item category in a vendor, not a categorization of vendors themselves)"},{"Name":"quantityAvailable","Type":"integer","Format":"int32","Description":"The amount of items that will be available when this category is shown."},{"Name":"showUnavailableItems","Type":"boolean","Description":"If items aren't up for sale in this category, should we still show them (greyed out)?"},{"Name":"hideIfNoCurrency","Type":"boolean","Description":"If you don't have the currency required to buy items from this category, should the items be hidden?"},{"Name":"hideFromRegularPurchase","Type":"boolean","Description":"True if this category doesn't allow purchases."},{"Name":"buyStringOverride","Type":"string","Description":"The localized string for making purchases from this category, if it is different from the vendor's string for purchasing."},{"Name":"disabledDescription","Type":"string","Description":"If the category is disabled, this is the localized description to show."},{"Name":"displayTitle","Type":"string","Description":"The localized title of the category."},{"Name":null,"Description":"If this category has an overlay prompt that should appear, this contains the details of that prompt.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorCategoryOverlayDefinition"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorCategoryEntryDefinition\r\n    {\r\npublic int categoryIndex;\r\npublic string categoryId;\r\npublic int categoryHash;\r\npublic int quantityAvailable;\r\npublic bool showUnavailableItems;\r\npublic bool hideIfNoCurrency;\r\npublic bool hideFromRegularPurchase;\r\npublic string buyStringOverride;\r\npublic string disabledDescription;\r\npublic string displayTitle;\r\n}\r\n}","Description":"This is the definition for a single Vendor Category, into which Sale Items are grouped."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorCategoryOverlayDefinition","RawName":"Destiny.Definitions.DestinyVendorCategoryOverlayDefinition","Properties":[{"Name":"choiceDescription","Type":"string"},{"Name":"description","Type":"string"},{"Name":"icon","Type":"string"},{"Name":"title","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorCategoryOverlayDefinition\r\n    {\r\npublic string choiceDescription;\r\npublic string description;\r\npublic string icon;\r\npublic string title;\r\n}\r\n}","Description":"The details of an overlay prompt to show to a user.  They are all fairlyself-explanatory localized strings that can be shown."},{"Namespace":"Destiny.Definitions","Name":"DestinyDisplayCategoryDefinition","RawName":"Destiny.Definitions.DestinyDisplayCategoryDefinition","Properties":[{"Name":"identifier","Type":"string","Description":"A string identifier for the display category."},{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyDisplayCategoryDefinition\r\n    {\r\npublic string identifier;\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\n}\r\n}","Description":"Display Categories are different from \"categories\" in that these are specifically for visual groupingand display of categories in Vendor UI.  The \"categories\" structure is for validation of the containeditems, and can be categorized entirely separately from \"Display Categories\", there need be and often will beno meaningful relationship between the two."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorInteractionDefinition","RawName":"Destiny.Definitions.DestinyVendorInteractionDefinition","Properties":[{"Name":"replies","Type":"array","Description":"The potential replies that the user can make to the interaction.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorInteractionReplyDefinition"}]},{"Name":"vendorCategoryIndex","Type":"integer","Format":"int32","Description":"If >= 0, this is the category of sale items to show along with this interaction dialog."},{"Name":"questlineItemHash","Type":"integer","Format":"uint32","Description":"If this interaction dialog is about a quest, this is the questline related to the interaction.You can use this to show the quest overview, or even the character's status with the quest ifyou use it to find the character's current Quest Step by checking their inventory against this questlineItemHash'sDestinyInventoryItemDefinition.setData.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"sackInteractionList","Type":"array","Description":"If this interaction is meant to show you sacks, this is the list of types of sacks to be shown.If empty, the interaction is not meant to show sacks.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorInteractionSackEntryDefinition"}]},{"Name":"uiInteractionType","Type":"integer","Format":"uint32","Description":"A UI hint for the behavior of the interaction screen.  BNet doesn't use this, but you can choose to."},{"Name":"rewardBlockLabel","Type":"string","Description":"If this interaction is displaying rewards, this is the text to use for the header of thereward-displaying section of the interaction."},{"Name":"rewardVendorCategoryIndex","Type":"integer","Format":"int32","Description":"If the vendor's reward list is sourced from one of his categories, this is the index intothe category array of items to show."},{"Name":"flavorLineOne","Type":"string","Description":"If the vendor interaction has flavor text, this is some of it."},{"Name":"flavorLineTwo","Type":"string","Description":"If the vendor interaction has flavor text, this is the rest of it."},{"Name":null,"Description":"The header for the interaction dialog.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"instructions","Type":"string","Description":"The localized text telling the player what to do when they see this dialog."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorInteractionDefinition\r\n    {\r\npublic List<object> replies;\r\npublic int vendorCategoryIndex;\r\npublic int questlineItemHash;\r\npublic List<object> sackInteractionList;\r\npublic int uiInteractionType;\r\npublic string rewardBlockLabel;\r\npublic int rewardVendorCategoryIndex;\r\npublic string flavorLineOne;\r\npublic string flavorLineTwo;\r\npublic string instructions;\r\n}\r\n}","Description":"A Vendor Interaction is a dialog shown by the vendor other than sale items or transfer screens.The vendor is showing you something, and asking you to reply to it by choosing an option or reward."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorInteractionReplyDefinition","RawName":"Destiny.Definitions.DestinyVendorInteractionReplyDefinition","Properties":[{"Name":null,"Description":"The rewards granted upon responding to the vendor.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyVendorInteractionRewardSelection"}]]},{"Name":"reply","Type":"string","Description":"The localized text for the reply."},{"Name":null,"Description":"An enum indicating the type of reply being made.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyVendorReplyType"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorInteractionReplyDefinition\r\n    {\r\npublic string reply;\r\n}\r\n}","Description":"When the interaction is replied to, Reward sites will fire and items potentially selected based onwhether the given unlock expression is TRUE.\r\nYou can potentially choose one from multiple replies when replying to an interaction: this is howyou get either/or rewards from vendors."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorInteractionSackEntryDefinition","RawName":"Destiny.Definitions.DestinyVendorInteractionSackEntryDefinition","Properties":[{"Name":"sackType","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorInteractionSackEntryDefinition\r\n    {\r\npublic int sackType;\r\n}\r\n}","Description":"Compare this sackType to the sack identifier in the DestinyInventoryItemDefinition.vendorSackTypeproperty of items.  If they match, show this sack with this interaction."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorInventoryFlyoutDefinition","RawName":"Destiny.Definitions.DestinyVendorInventoryFlyoutDefinition","Properties":[{"Name":"lockedDescription","Type":"string","Description":"If the flyout is locked, this is the reason why."},{"Name":null,"Description":"The title and other common properties of the flyout.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"buckets","Type":"array","Description":"A list of inventory buckets and other metadata to show on the screen.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorInventoryFlyoutBucketDefinition"}]},{"Name":"flyoutId","Type":"integer","Format":"uint32","Description":"An identifier for the flyout, in case anything else needs to refer to them."},{"Name":"suppressNewness","Type":"boolean","Description":"If this is true, don't show any of the glistening \"this is a new item\" UI elements, like we show on the inventory itemsthemselves in in-game UI."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorInventoryFlyoutDefinition\r\n    {\r\npublic string lockedDescription;\r\npublic List<object> buckets;\r\npublic int flyoutId;\r\npublic bool suppressNewness;\r\n}\r\n}","Description":"The definition for an \"inventory flyout\": a UI screen where we show youpart of an otherwise hidden vendor inventory: like the Vault inventory buckets."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorInventoryFlyoutBucketDefinition","RawName":"Destiny.Definitions.DestinyVendorInventoryFlyoutBucketDefinition","Properties":[{"Name":"collapsible","Type":"boolean","Description":"If true, the inventory bucket should be able to be collapsed visually."},{"Name":"inventoryBucketHash","Type":"integer","Format":"uint32","Description":"The inventory bucket whose contents should be shown.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]},{"Name":null,"Description":"The methodology to use for sorting items from the flyout.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyItemSortType"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorInventoryFlyoutBucketDefinition\r\n    {\r\npublic bool collapsible;\r\npublic int inventoryBucketHash;\r\n}\r\n}","Description":"Information about a single inventory bucket in a vendor flyout UI and how it is shown."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorItemDefinition","RawName":"Destiny.Definitions.DestinyVendorItemDefinition","Properties":[{"Name":"vendorItemIndex","Type":"integer","Format":"int32","Description":"The index into the DestinyVendorDefinition.saleList.  This is what we use to refer to itemsbeing sold throughout live and definition data."},{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the item being sold (DestinyInventoryItemDefinition).\r\nNote that a vendor can sell the same item in multiple ways, so don't assume that itemHash isa unique identifier for this entity.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"quantity","Type":"integer","Format":"int32","Description":"The amount you will recieve of the item described in itemHash if you make the purchase."},{"Name":"failureIndexes","Type":"array","Description":"An list of indexes into the DestinyVendorDefinition.failureStrings array, indicatingthe possible failure strings that can be relevant for this item.","items":[{"type":"integer","format":"int32"}]},{"Name":"currencies","Type":"array","Description":"This is a pre-compiled aggregation of item value and priceOverrideList, so that we have one placeto check for what the purchaser must pay for the item.  Use this instead of trying to piece togetherthe price separately.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]},{"Name":null,"Description":"If this item can be refunded, this is the policy for what will be refundd, how, and in what time period.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyVendorItemRefundPolicy"}]]},{"Name":"refundTimeLimit","Type":"integer","Format":"int32","Description":"The amount of time before refundability of the newly purchased item will expire."},{"Name":"creationLevels","Type":"array","Description":"The Default level at which the item will spawn.  Almost always driven by an adjusto these days.Ideally should be singular.  It's a long story how this ended up as a list, but there is always eithergoing to be 0:1 of these entities.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemCreationEntryLevelDefinition"}]},{"Name":"displayCategoryIndex","Type":"integer","Format":"int32","Description":"This is an index specifically into the display category, as opposed to the server-side Categories(which do not need to match or pair with each other in any way: server side categories are really juststructures for common validation.  Display Category will let us more easily categorize items visually)"},{"Name":"categoryIndex","Type":"integer","Format":"int32","Description":"The index into the DestinyVendorDefinition.categories array, so you can find the category associated withthis item."},{"Name":"originalCategoryIndex","Type":"integer","Format":"int32","Description":"Same as above, but for the original category indexes."},{"Name":"minimumLevel","Type":"integer","Format":"int32","Description":"The minimum character level at which this item is available for sale."},{"Name":"maximumLevel","Type":"integer","Format":"int32","Description":"The maximum character level at which this item is available for sale."},{"Name":null,"Description":"The action to be performed when purchasing the item, if it's not just \"buy\".","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorSaleItemActionBlockDefinition"}]]},{"Name":"displayCategory","Type":"string","Description":"The string identifier for the category selling this item."},{"Name":"inventoryBucketHash","Type":"integer","Format":"uint32","Description":"The inventory bucket into which this item will be placed upon purchase."},{"Name":null,"Description":"The most restrictive scope that determines whether the item is available in the Vendor's inventory.See DestinyGatingScope's documentation for more information.\r\nThis can be determined by Unlock gating, or by whether or not the item has purchase level requirements (minimumLeveland maximumLevel properties).","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyGatingScope"}]]},{"Name":null,"Description":"Similar to visibilityScope, it represents the most restrictive scope that determines whether the item can be purchased.It will at least be as restrictive as visibilityScope, but could be more restrictive if the item has additionalpurchase requirements beyond whether it is merely visible or not.\r\nSee DestinyGatingScope's documentation for more information.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyGatingScope"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorItemDefinition\r\n    {\r\npublic int vendorItemIndex;\r\npublic int itemHash;\r\npublic int quantity;\r\npublic List<object> failureIndexes;\r\npublic List<object> currencies;\r\npublic int refundTimeLimit;\r\npublic List<object> creationLevels;\r\npublic int displayCategoryIndex;\r\npublic int categoryIndex;\r\npublic int originalCategoryIndex;\r\npublic int minimumLevel;\r\npublic int maximumLevel;\r\npublic string displayCategory;\r\npublic int inventoryBucketHash;\r\n}\r\n}","Description":"This represents an item being sold by the vendor."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemCreationEntryLevelDefinition","RawName":"Destiny.Definitions.DestinyItemCreationEntryLevelDefinition","Properties":[{"Name":"level","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemCreationEntryLevelDefinition\r\n    {\r\npublic int level;\r\n}\r\n}","Description":"An overly complicated wrapper for the item level at which the item should spawn."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorSaleItemActionBlockDefinition","RawName":"Destiny.Definitions.DestinyVendorSaleItemActionBlockDefinition","Properties":[{"Name":"executeSeconds","Type":"number","Format":"float"},{"Name":"isPositive","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorSaleItemActionBlockDefinition\r\n    {\r\npublic decimal executeSeconds;\r\npublic bool isPositive;\r\n}\r\n}","Description":"Not terribly useful, some basic cooldown interaction info."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorServiceDefinition","RawName":"Destiny.Definitions.DestinyVendorServiceDefinition","Properties":[{"Name":"name","Type":"string","Description":"The localized name of a service provided."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorServiceDefinition\r\n    {\r\npublic string name;\r\n}\r\n}","Description":"When a vendor provides services, this is the localized name of those services."},{"Namespace":"Destiny.Definitions","Name":"DestinyVendorAcceptedItemDefinition","RawName":"Destiny.Definitions.DestinyVendorAcceptedItemDefinition","Properties":[{"Name":"acceptedInventoryBucketHash","Type":"integer","Format":"uint32","Description":"The \"source\" bucket for a transfer.  When a user wants to transfer an item, the appropriate DestinyVendorDefinition'sacceptedItems property is evaluated, looking for an entry where acceptedInventoryBucketHash matchesthe bucket that the item being transferred is currently located.  If it exists, the item will betransferred into whatever bucket is defined by destinationInventoryBucketHash.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]},{"Name":"destinationInventoryBucketHash","Type":"integer","Format":"uint32","Description":"This is the bucket where the item being transferred will be put, given that it was beingtransferred *from* the bucket defined in acceptedInventoryBucketHash.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyVendorAcceptedItemDefinition\r\n    {\r\npublic int acceptedInventoryBucketHash;\r\npublic int destinationInventoryBucketHash;\r\n}\r\n}","Description":"If you ever wondered how the Vault works, here it is.\r\nThe Vault is merely a set of inventory buckets that exist on your Profile/Account level.When you transfer items in the Vault, the game is using the Vault Vendor's DestinyVendorAcceptedItemDefinitionsto see where the appropriate destination bucket is for the source bucket from whence your item is moving.If it finds such an entry, it transfers the item to the other bucket.\r\nThe mechanics for Postmaster works similarly, which is also a vendor.  All driven by Accepted Items."},{"Namespace":"Destiny.Definitions","Name":"DestinyFactionDefinition","RawName":"Destiny.Definitions.DestinyFactionDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"progressionHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the DestinyProgressionDefinition that indicates the character's relationshipwith this faction in terms of experience and levels.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyFactionDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int progressionHash;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"These definitions represent Factions in the game.  Factions have ended up unilaterally beingrelated to Vendors that represent them, but that need not necessarily be the case.\r\nA Faction is really just an entity that has a related progression for which a character can gainexperience.  In Destiny 1, Dead Orbit was an example of a Faction: there happens to be a Vendor that representsDead Orbit (and indeed, DestinyVendorDefinition.factionHash defines to this relationship), butDead Orbit could theoretically exist without the Vendor that provides rewards."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemQualityBlockDefinition","RawName":"Destiny.Definitions.DestinyItemQualityBlockDefinition","Properties":[{"Name":"itemLevels","Type":"array","Description":"The \"base\" defined level of an item.  This is a list because, in theory,each Expansion could define its own base level for an item.\r\nIn practice, not only was that never done in Destiny 1, but now thisisn't even populated at all.  When it's not populated, the level at whichit spawns has to be inferred by Reward information, of which BNet receives an imperfectview and will only be reliable on instanced data as a result.","items":[{"type":"integer","format":"int32"}]},{"Name":"qualityLevel","Type":"integer","Format":"int32","Description":"qualityLevel is used in combination with the item's level to calculate stats likeAttack and Defense.  It plays a role in that calculation, but not nearly as large asitemLevel does."},{"Name":"infusionCategoryName","Type":"string","Description":"The string identifier for this item's \"infusability\", if any.  \r\nItems that match the same infusionCategoryName are allowed to infuse with each other."},{"Name":"infusionCategoryHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the infusion.  It does not map to a Definition entity."},{"Name":"progressionLevelRequirementHash","Type":"integer","Format":"uint32","Description":"An item can refer to pre-set level requirements.  They are defined in DestinyProgressionLevelRequirementDefinition,and you can use this hash to find the appropriate definition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemQualityBlockDefinition\r\n    {\r\npublic List<object> itemLevels;\r\npublic int qualityLevel;\r\npublic string infusionCategoryName;\r\npublic int infusionCategoryHash;\r\npublic int progressionLevelRequirementHash;\r\n}\r\n}","Description":"An item's \"Quality\" determines its calculated stats.  The Level at which the item spawnsis combined with its \"qualityLevel\" along with some additional calculations to determinethe value of those stats.\r\nIn Destiny 2, most items don't have default item levels and quality, making this propertyless useful: these apparently are almost always determined by the complex mechanisms ofthe Reward system rather than statically.  They are still provided here in case theyare still useful for people.  This also contains some information about Infusion."},{"Namespace":"Destiny.Definitions.Progression","Name":"DestinyProgressionLevelRequirementDefinition","RawName":"Destiny.Definitions.Progression.DestinyProgressionLevelRequirementDefinition","Properties":[{"Name":"requirementCurve","Type":"array","Description":"A curve of level requirements, weighted by the related progressions' level.\r\nInterpolate against this curve with the character's progression level to determinewhat the level requirement of the generated item that is using this data will be.","items":[{"$ref":"#/components/schemas/Interpolation.InterpolationPointFloat"}]},{"Name":"progressionHash","Type":"integer","Format":"uint32","Description":"The progression whose level should be used to determine the level requirement.\r\nLook up the DestinyProgressionDefinition with this hash for more information aboutthe progression in question.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Progression\r\n{\r\n    public class DestinyProgressionLevelRequirementDefinition\r\n    {\r\npublic List<object> requirementCurve;\r\npublic int progressionHash;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"These are pre-constructed collections of data that can be used to determine the Level Requirementfor an item given a Progression to be tested (such as the Character's level).\r\nFor instance, say a character receives a new Auto Rifle, and that Auto Rifle'sDestinyInventoryItemDefinition.quality.progressionLevelRequirementHash property is pointingat one of these DestinyProgressionLevelRequirementDefinitions.  Let's pretend also that the progressionHashit is pointing at is the Character Level progression.  In that situation, the character's level will be usedto interpolate a value in the requirementCurve property.  The value picked up from that interpolation willbe the required level for the item."},{"Namespace":"Interpolation","Name":"InterpolationPointFloat","RawName":"Interpolation.InterpolationPointFloat","Properties":[{"Name":"value","Type":"number","Format":"float"},{"Name":"weight","Type":"number","Format":"float"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Interpolation\r\n{\r\n    public class InterpolationPointFloat\r\n    {\r\npublic decimal value;\r\npublic decimal weight;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyItemValueBlockDefinition","RawName":"Destiny.Definitions.DestinyItemValueBlockDefinition","Properties":[{"Name":"itemValue","Type":"array","Description":"References to the items that make up this item's \"value\", and the quantity.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]},{"Name":"valueDescription","Type":"string","Description":"If there's a localized text description of the value provided, this will be said description."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemValueBlockDefinition\r\n    {\r\npublic List<object> itemValue;\r\npublic string valueDescription;\r\n}\r\n}","Description":"This defines an item's \"Value\".Unfortunately, this appears to be used in different ways depending on the way that the item itselfis used.\r\nFor items being sold at a Vendor, this is the default \"sale price\" of the item.  These days, the vendor itselfalmost always sets the price, but it still possible for the price to fall back to this value.For quests, it is a preview of rewards you can gain by completing the quest.For dummy items, if the itemValue refers to an Emblem, it is the emblem that should be shownas the reward. (jeez louise)\r\nIt will likely be used in a number of other ways in the future, it appears to be a bucket wherethey put arbitrary items and quantities into the item."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSourceBlockDefinition","RawName":"Destiny.Definitions.DestinyItemSourceBlockDefinition","Properties":[{"Name":"sourceHashes","Type":"array","Description":"The list of hash identifiers for Reward Sources that hint where the item can be found (DestinyRewardSourceDefinition).","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyRewardSourceDefinition"}]},{"Name":"sources","Type":"array","Description":"A collection of details about the stats that were computed for the ways we found that the itemcould be spawned.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Sources.DestinyItemSourceDefinition"}]},{"Name":null,"Description":"If we found that this item is exclusive to a specific platform, this will be set to theBungieMembershipType enumeration that matches that platform.","allOf":[[{"$ref":"#/components/schemas/BungieMembershipType"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSourceBlockDefinition\r\n    {\r\npublic List<object> sourceHashes;\r\npublic List<object> sources;\r\n}\r\n}","Description":"Data about an item's \"sources\": ways that the item can be obtained."},{"Namespace":"Destiny.Definitions.Sources","Name":"DestinyItemSourceDefinition","RawName":"Destiny.Definitions.Sources.DestinyItemSourceDefinition","Properties":[{"Name":"level","Type":"integer","Format":"int32","Description":"The level at which the item spawns.  Essentially the Primary Keyfor this source data: there will be multiple of these source entries per item thathas source data, grouped by the level at which the item spawns."},{"Name":"minQuality","Type":"integer","Format":"int32","Description":"The minimum Quality at which the item spawns for this level.  Examine DestinyInventoryItemDefinitionfor more information about what Quality means.  Just don't ask Phaedrus about it,he'll never stop talking and you'll have to write a book about it."},{"Name":"maxQuality","Type":"integer","Format":"int32","Description":"The maximum quality at which the item spawns for this level."},{"Name":"minLevelRequired","Type":"integer","Format":"int32","Description":"The minimum Character Level required for equipping the item when the item spawns at the item leveldefined on this DestinyItemSourceDefinition, as far as we saw in our processing."},{"Name":"maxLevelRequired","Type":"integer","Format":"int32","Description":"The maximum Character Level required for equipping the item when the item spawns at the item leveldefined on this DestinyItemSourceDefinition, as far as we saw in our processing."},{"Name":"computedStats","Type":"object","Description":"The stats computed for this level/quality range.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemStatDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"sourceHashes","Type":"array","Description":"The DestinyRewardSourceDefinitions found that can spawn the item at this level.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyRewardSourceDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Sources\r\n{\r\n    public class DestinyItemSourceDefinition\r\n    {\r\npublic int level;\r\npublic int minQuality;\r\npublic int maxQuality;\r\npublic int minLevelRequired;\r\npublic int maxLevelRequired;\r\npublic List<object> sourceHashes;\r\n}\r\n}","Description":"Properties of a DestinyInventoryItemDefinition that store all of the informationwe were able to discern about how the item spawns, and where you can find the item.\r\nItems will have many of these sources, one per level at which it spawns, to tryand give more granular data about where items spawn for specific level ranges."},{"Namespace":"Destiny.Definitions","Name":"DestinyRewardSourceDefinition","RawName":"Destiny.Definitions.DestinyRewardSourceDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":null,"Description":"Sources are grouped into categories: common ways that items are provided.I hope to see this expand in Destiny 2 once we have time to generate accurate reward source data.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyRewardSourceCategory"}]]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyRewardSourceDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Represents a heuristically-determined \"item source\" according to Bungie.net.These item sources are non-canonical: we apply a combination of special configurationand often-fragile heuristics to attempt to discern whether an item should be part of a given\"source,\" but we have known cases of false positives and negatives due to our imperfect heuristics.\r\nStill, they provide a decent approximation for people trying to figure out how an item can be obtained.DestinyInventoryItemDefinition refers to sources in the sourceDatas.sourceHashes property for all sourceswe determined the item could spawn from.\r\nAn example in Destiny 1 of a Source would be \"Nightfall\".  If an item has the \"Nightfall\" source associatedwith it, it's extremely likely that you can earn that item while playing Nightfall, either during playor as an after-completion reward."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemObjectiveBlockDefinition","RawName":"Destiny.Definitions.DestinyItemObjectiveBlockDefinition","Properties":[{"Name":"objectiveHashes","Type":"array","Description":"The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in theorder that they should be rendered.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveDefinition"}]},{"Name":"displayActivityHashes","Type":"array","Description":"For every entry in objectiveHashes, there is a corresponding entry in this arrayat the same index.  If the objective is meant to be associated with a specific DestinyActivityDefinition,there will be a valid hash at that index.  Otherwise, it will be invalid (0).","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"requireFullObjectiveCompletion","Type":"boolean","Description":"If True, all objectives must be completed for the step to be completed.If False, any one objective can be completed for the step to be completed."},{"Name":"questlineItemHash","Type":"integer","Format":"uint32","Description":"The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"narrative","Type":"string","Description":"The localized string for narrative text related to this quest step, if any."},{"Name":"objectiveVerbName","Type":"string","Description":"The localized string describing an action to be performed associated with the objectives, if any."},{"Name":"questTypeIdentifier","Type":"string","Description":"The identifier for the type of quest being performed, if any.  Not associated with any fixed definition, yet."},{"Name":"questTypeHash","Type":"integer","Format":"uint32","Description":"A hashed value for the questTypeIdentifier, because apparently I like to be redundant."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemObjectiveBlockDefinition\r\n    {\r\npublic List<object> objectiveHashes;\r\npublic List<object> displayActivityHashes;\r\npublic bool requireFullObjectiveCompletion;\r\npublic int questlineItemHash;\r\npublic string narrative;\r\npublic string objectiveVerbName;\r\npublic string questTypeIdentifier;\r\npublic int questTypeHash;\r\n}\r\n}","Description":"An item can have objectives on it.  In practice, these are the exclusive purview of\"Quest Step\" items: DestinyInventoryItemDefinitions that represent a specific step in a Quest.\r\nQuest steps have 1:M objectives that we end up processing and returning in live data as DestinyQuestStatusdata, and other useful information."},{"Namespace":"Destiny.Definitions","Name":"DestinyObjectiveDefinition","RawName":"Destiny.Definitions.DestinyObjectiveDefinition","Properties":[{"Name":null,"Description":"Ideally, this should tell you what your task is.  I'm not going to lie to you though.  Sometimesthis doesn't have useful information at all.  Which sucks, but there's nothing either of us can doabout it.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"completionValue","Type":"integer","Format":"int32","Description":"The value that the unlock value defined in unlockValueHash must reach in order forthe objective to be considered Completed.  Used in calculating progress and completion status."},{"Name":"locationHash","Type":"integer","Format":"uint32","Description":"OPTIONAL: a hash identifier for the location at which this objective must be accomplished,if there is a location defined.  Look up the DestinyLocationDefinition for this hash for thatadditional location info.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyLocationDefinition"}]},{"Name":"allowNegativeValue","Type":"boolean","Description":"If true, the value is allowed to go negative."},{"Name":"allowValueChangeWhenCompleted","Type":"boolean","Description":"If true, you can effectively \"un-complete\" this objective if you lose progress aftercrossing the completion threshold.  \r\nIf False, once you complete the task it will remaincompleted forever by locking the value."},{"Name":"isCountingDownward","Type":"boolean","Description":"If true, completion means having an unlock value less than or equal to the completionValue.\r\nIf False, completion means having an unlock value greater than or equal to the completionValue."},{"Name":null,"Description":"The UI style applied to the objective.  It's an enum, take a look at DestinyUnlockValueUIStyle for detailsof the possible styles.  Use this info as you wish to customize your UI.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyUnlockValueUIStyle"}]]},{"Name":"progressDescription","Type":"string","Description":"Text to describe the progress bar."},{"Name":null,"Description":"If this objective enables Perks intrinsically, the conditions for that enabling are defined here.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectivePerkEntryDefinition"}]]},{"Name":null,"Description":"If this objective enables modifications on a player's stats intrinsically, the conditions are defined here.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveStatEntryDefinition"}]]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyObjectiveDefinition\r\n    {\r\npublic int completionValue;\r\npublic int locationHash;\r\npublic bool allowNegativeValue;\r\npublic bool allowValueChangeWhenCompleted;\r\npublic bool isCountingDownward;\r\npublic string progressDescription;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Defines an \"Objective\".\r\nAn objective is a specific task you should accomplish in the game.  These are referred to by:\r\n- Quest Steps (which are DestinyInventoryItemDefinition entities with Objectives)\r\n- Challenges (which are Objectives defined on an DestinyActivityDefintion)\r\n- Milestones (which refer to Objectives that are defined on both Quest Steps and Activities)\r\n- Anything else that the designers decide to do later.\r\nObjectives have progress, a notion of having been Completed, human readable data describing the taskto be accomplished, and a lot of optional tack-on data that can enhance the information provided aboutthe task."},{"Namespace":"Destiny.Definitions","Name":"DestinyObjectivePerkEntryDefinition","RawName":"Destiny.Definitions.DestinyObjectivePerkEntryDefinition","Properties":[{"Name":"perkHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the DestinySandboxPerkDefinition that will be applied to the character.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinySandboxPerkDefinition"}]},{"Name":null,"Description":"An enumeration indicating whether it will be applied as long as the Objective is active, when it's completed,or until it's completed.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyObjectiveGrantStyle"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyObjectivePerkEntryDefinition\r\n    {\r\npublic int perkHash;\r\n}\r\n}","Description":"Defines the conditions under which an intrinsic perk is applied while participating in an Objective.\r\nThese perks will generally not be benefit-granting perks, but rather a perk that modifies gameplayin some interesting way."},{"Namespace":"Destiny.Definitions","Name":"DestinySandboxPerkDefinition","RawName":"Destiny.Definitions.DestinySandboxPerkDefinition","Properties":[{"Name":null,"Description":"These display properties are by no means guaranteed to be populated.  Usually when it is,it's only because we back-filled them with the displayProperties of some Talent Node orPlug item that happened to be uniquely providing that perk.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"perkIdentifier","Type":"string","Description":"The string identifier for the perk."},{"Name":"isDisplayable","Type":"boolean","Description":"If true, you can actually show the perk in the UI.  Otherwise, it doesn'thave useful player-facing information."},{"Name":null,"Description":"If this perk grants a damage type to a weapon, the damage type will be defined here.\r\nUnless you have a compelling reason to use this enum value, use the damageTypeHash insteadto look up the actual DestinyDamageTypeDefinition.","allOf":[[{"$ref":"#/components/schemas/Destiny.DamageType"}]]},{"Name":"damageTypeHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"The hash identifier for looking up the DestinyDamageTypeDefinition, if this perk has a damage type.\r\nThis is preferred over using the damageType enumeration value, which has been left purely because it isoccasionally convenient."},{"Name":null,"Description":"An old holdover from the original Armory, this was an attempt to group perks by functionality.\r\nIt is as yet unpopulated, and there will be quite a bit of work needed to restore it to its formerworking order.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepGroups"}]]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinySandboxPerkDefinition\r\n    {\r\npublic string perkIdentifier;\r\npublic bool isDisplayable;\r\npublic int damageTypeHash;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Perks are modifiers to a character or item that can be applied situationally.\r\n- Perks determine a weapons' damage type.\r\n- Perks put the Mods in Modifiers (they are literally the entity that bestows the Sandboxbenefit for whatever fluff text about the modifier in the Socket, Plug or Talent Node)\r\n- Perks are applied for unique alterations of state in Objectives\r\nAnyways, I'm sure you can see why perks are so interesting.\r\nWhat Perks often don't have is human readable information, so we attempt to reverse engineerthat by pulling that data from places that uniquely refer to these perks: namely, Talent Nodesand Plugs.  That only gives us a subset of perks that are human readable, but those perks arethe ones people generally care about anyways.  The others are left as a mystery, their truepurpose mostly unknown and undocumented."},{"Namespace":"Destiny.Definitions","Name":"DestinyTalentNodeStepGroups","RawName":"Destiny.Definitions.DestinyTalentNodeStepGroups","Properties":[{"Name":"weaponPerformance","$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepWeaponPerformances"},{"Name":"impactEffects","$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepImpactEffects"},{"Name":"guardianAttributes","$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepGuardianAttributes"},{"Name":"lightAbilities","$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepLightAbilities"},{"Name":"damageTypes","$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepDamageTypes"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyTalentNodeStepGroups\r\n    {\r\npublic Destiny.Definitions.DestinyTalentNodeStepWeaponPerformances weaponPerformance;\r\npublic Destiny.Definitions.DestinyTalentNodeStepImpactEffects impactEffects;\r\npublic Destiny.Definitions.DestinyTalentNodeStepGuardianAttributes guardianAttributes;\r\npublic Destiny.Definitions.DestinyTalentNodeStepLightAbilities lightAbilities;\r\npublic Destiny.Definitions.DestinyTalentNodeStepDamageTypes damageTypes;\r\n}\r\n}","Description":"These properties are an attempt to categorize talent node steps by certain common properties.  Seethe related enumerations for the type of properties being categorized."},{"Namespace":"Destiny.Definitions","Name":"DestinyObjectiveStatEntryDefinition","RawName":"Destiny.Definitions.DestinyObjectiveStatEntryDefinition","Properties":[{"Name":null,"Description":"The stat being modified, and the value used.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemInvestmentStatDefinition"}]]},{"Name":null,"Description":"Whether it will be applied as long as the objective is active, when it's completed, or until it's completed.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyObjectiveGrantStyle"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyObjectiveStatEntryDefinition\r\n    {\r\n}\r\n}","Description":"Defines the conditions under which stat modifications will be applied to a Character whileparticipating in an objective."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemInvestmentStatDefinition","RawName":"Destiny.Definitions.DestinyItemInvestmentStatDefinition","Properties":[{"Name":"statTypeHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the DestinyStatDefinition defining this stat.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":"value","Type":"integer","Format":"int32","Description":"The raw \"Investment\" value for the stat, before transformations are performedto turn this raw stat into stats that are displayed in the game UI."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemInvestmentStatDefinition\r\n    {\r\npublic int statTypeHash;\r\npublic int value;\r\n}\r\n}","Description":"Represents a \"raw\" investment stat, before calculated stats are calculatedand before any DestinyStatGroupDefinition is applied to transform the statinto something closer to what you see in-game.\r\nBecause these won't match what you see in-game, consider carefully whetheryou really want to use these stats.  I have left them in case someonecan do something useful or interesting with the pre-processed statistics."},{"Namespace":"Destiny.Definitions","Name":"DestinyLocationDefinition","RawName":"Destiny.Definitions.DestinyLocationDefinition","Properties":[{"Name":"vendorHash","Type":"integer","Format":"uint32","Description":"If the location has a Vendor on it, this is the hash identifier for that Vendor.Look them up with DestinyVendorDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":"locationReleases","Type":"array","Description":"A Location may refer to different specific spots in the world based on the world's current state.This is a list of those potential spots, and the data we can use at runtime to determinewhich one of the spots is the currently valid one.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyLocationReleaseDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyLocationDefinition\r\n    {\r\npublic int vendorHash;\r\npublic List<object> locationReleases;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"A \"Location\" is a sort of shortcut for referring to a specificcombination of Activity, Destination, Place, and even Bubble or NavPoint withina space.\r\nMost of this data isn't intrinsically useful to us, but Objectives refer tolocations, and through that we can at least infer the Activity, Destination, and Placebeing referred to by the Objective."},{"Namespace":"Destiny.Definitions","Name":"DestinyLocationReleaseDefinition","RawName":"Destiny.Definitions.DestinyLocationReleaseDefinition","Properties":[{"Name":null,"Description":"Sadly, these don't appear to be populated anymore (ever?)","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"spawnPoint","Type":"integer","Format":"uint32","Description":"If we had map information, this spawnPoint would be interesting.  But sadly, we don't have that info."},{"Name":"destinationHash","Type":"integer","Format":"uint32","Description":"The Destination being pointed to by this location.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDestinationDefinition"}]},{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The Activity being pointed to by this location.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"activityGraphHash","Type":"integer","Format":"uint32","Description":"The Activity Graph being pointed to by this location."},{"Name":"activityGraphNodeHash","Type":"integer","Format":"uint32","Description":"The Activity Graph Node being pointed to by this location.  (Remember thatActivity Graph Node hashes are only unique within an Activity Graph: so use the combinationto find the node being spoken of)"},{"Name":"activityBubbleName","Type":"integer","Format":"uint32","Description":"The Activity Bubble within the Destination.  Look this up in the DestinyDestinationDefinition'sbubbles and bubbleSettings properties."},{"Name":"activityPathBundle","Type":"integer","Format":"uint32","Description":"If we had map information, this would tell us something cool about the path this location wantsyou to take.  I wish we had map information."},{"Name":"activityPathDestination","Type":"integer","Format":"uint32","Description":"If we had map information, this would tell us about path information related to destinationon the map.  Sad.  Maybe you can do something cool with it.  Go to town man."},{"Name":null,"Description":"The type of Nav Point that this represents.  See the enumeration for more info.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyActivityNavPointType"}]]},{"Name":"worldPosition","Type":"array","Description":"Looks like it should be the position on the map, but sadly it does not look populated... yet?","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyLocationReleaseDefinition\r\n    {\r\npublic int spawnPoint;\r\npublic int destinationHash;\r\npublic int activityHash;\r\npublic int activityGraphHash;\r\npublic int activityGraphNodeHash;\r\npublic int activityBubbleName;\r\npublic int activityPathBundle;\r\npublic int activityPathDestination;\r\npublic List<object> worldPosition;\r\n}\r\n}","Description":"A specific \"spot\" referred to by a location.  Only one of these can be active at a time fora given Location."},{"Namespace":"Destiny.Definitions","Name":"DestinyDestinationDefinition","RawName":"Destiny.Definitions.DestinyDestinationDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"placeHash","Type":"integer","Format":"uint32","Description":"The place that \"owns\" this Destination.  Use this hash to look up the DestinyPlaceDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyPlaceDefinition"}]},{"Name":"defaultFreeroamActivityHash","Type":"integer","Format":"uint32","Description":"If this Destination has a default Free-Roam activity, this is the hash for that Activity.Use it to look up the DestinyActivityDefintion.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"activityGraphEntries","Type":"array","Description":"If the Destination has default Activity Graphs (i.e. \"Map\") that should be shownin the director, this is the list of those Graphs.  At most, only one should be activeat any given time for a Destination: these would represent, for example, differentvariants on a Map if the Destination is changing on a macro level based on game state.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityGraphListEntryDefinition"}]},{"Name":"bubbleSettings","Type":"array","Description":"A Destination may have many \"Bubbles\" zones with human readable properties.\r\nWe don't get as much info as I'd like about them - I'd love to return info like where on the map they are located - but at least this gives you the name of those bubbles.bubbleSettings and bubbles both have the identical number of entries, and you shouldmatch up their indexes to provide matching bubble and bubbleSettings data.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDestinationBubbleSettingDefinition"}]},{"Name":"bubbles","Type":"array","Description":"This provides the unique identifiers for every bubble in the destination(only guaranteed unique within the destination), and any intrinsic properties of the bubble.\r\nbubbleSettings and bubbles both have the identical number of entries, and you shouldmatch up their indexes to provide matching bubble and bubbleSettings data.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyBubbleDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyDestinationDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int placeHash;\r\npublic int defaultFreeroamActivityHash;\r\npublic List<object> activityGraphEntries;\r\npublic List<object> bubbleSettings;\r\npublic List<object> bubbles;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"On to one of the more confusing subjects of the API.  What is a Destination, and whatis the relationship between it, Activities, Locations, and Places?\r\nA \"Destination\" is a specific region/city/area of a larger \"Place\".For instance, a Place might be Earth where a Destination might be Bellevue, Washington.(Please, pick a more interesting destination if you come to visit Earth)."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityGraphListEntryDefinition","RawName":"Destiny.Definitions.DestinyActivityGraphListEntryDefinition","Properties":[{"Name":"activityGraphHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the DestinyActivityGraphDefinition that should be shown when openingthe director.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityGraphListEntryDefinition\r\n    {\r\npublic int activityGraphHash;\r\n}\r\n}","Description":"Destinations and Activities may have default Activity Graphs that should be shownwhen you bring up the Director and are playing in either.\r\nThis contract defines the graph referred to and the gating for when it is relevant."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphDefinition","Properties":[{"Name":"nodes","Type":"array","Description":"These represent the visual \"nodes\" on the map's view.  These are the activities youcan click on in the map.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphNodeDefinition"}]},{"Name":"artElements","Type":"array","Description":"Represents one-off/special UI elements that appear on the map.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphArtElementDefinition"}]},{"Name":"connections","Type":"array","Description":"Represents connections between graph nodes.  However, it lacks context that we'd need to make good use of it.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphConnectionDefinition"}]},{"Name":"displayObjectives","Type":"array","Description":"Objectives can display on maps, and this is supposedly metadata for that.  I have not had the time toanalyze the details of what is useful within however: we could be missing important data to make this work.Expect this property to be expanded on later if possible.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphDisplayObjectiveDefinition"}]},{"Name":"displayProgressions","Type":"array","Description":"Progressions can also display on maps, but similarly to displayObjectives we appear to lack some requiredinformation and context right now.  We will have to look into it later and add more data if possible.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphDisplayProgressionDefinition"}]},{"Name":"linkedGraphs","Type":"array","Description":"Represents links between this Activity Graph and other ones.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyLinkedGraphDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphDefinition\r\n    {\r\npublic List<object> nodes;\r\npublic List<object> artElements;\r\npublic List<object> connections;\r\npublic List<object> displayObjectives;\r\npublic List<object> displayProgressions;\r\npublic List<object> linkedGraphs;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Represents a Map View in the director: be them overview views, destination views, or other.\r\nThey have nodes which map to activities, and other various visual elements that we (or others) mayor may not be able to use.\r\nActivity graphs, most importantly, have nodes which can have activities in various states ofplayability.\r\nUnfortunately, activity graphs are combined at runtime with Game UI-only assets such as fragments ofmap images, various in-game special effects, decals etc... that we don't get in these definitions.\r\nIf we end up having time, we may end up trying to manually populate those here: but the last time we tried that,before the lead-up to D1, it proved to be unmaintainable as the game's content changed.  So don't bet the farmon us providing that content in this definition."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphNodeDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphNodeDefinition","Properties":[{"Name":"nodeId","Type":"integer","Format":"uint32","Description":"An identifier for the Activity Graph Node, only guaranteed to be unique within its parent Activity Graph."},{"Name":null,"Description":"The node *may* have display properties that override the active Activity's display properties.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":null,"Description":"The position on the map for this node.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyPositionDefinition"}]]},{"Name":"featuringStates","Type":"array","Description":"The node may have various visual accents placed on it, or styles applied.  These are the list of possible stylesthat the Node can have.  The game iterates through each, looking for the first one that passes a check of the requiredgame/character/account state in order to show that style, and then renders the node in that style.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphNodeFeaturingStateDefinition"}]},{"Name":"activities","Type":"array","Description":"The node may have various possible activities that could be active for it, however only one may be activeat a time.  See the DestinyActivityGraphNodeActivityDefinition for details.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyActivityGraphNodeActivityDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphNodeDefinition\r\n    {\r\npublic int nodeId;\r\npublic List<object> featuringStates;\r\npublic List<object> activities;\r\n}\r\n}","Description":"This is the position and other data related to nodes in the activity graph that you can clickto launch activities.  An Activity Graph node will only have one active Activity at a time,which will determine the activity to be launched (and, unless overrideDisplay information is provided,will also determine the tooltip and other UI related to the node)"},{"Namespace":"Destiny.Definitions.Common","Name":"DestinyPositionDefinition","RawName":"Destiny.Definitions.Common.DestinyPositionDefinition","Properties":[{"Name":"x","Type":"integer","Format":"int32"},{"Name":"y","Type":"integer","Format":"int32"},{"Name":"z","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Common\r\n{\r\n    public class DestinyPositionDefinition\r\n    {\r\npublic int x;\r\npublic int y;\r\npublic int z;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphNodeFeaturingStateDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphNodeFeaturingStateDefinition","Properties":[{"Name":null,"Description":"The node can be highlighted in a variety of ways - the game iterates through these and findsthe first FeaturingState that is valid at the present moment given the Game, Account, and Characterstate, and renders the node in that state.  See the ActivityGraphNodeHighlightType enum for possiblevalues.","allOf":[[{"$ref":"#/components/schemas/Destiny.ActivityGraphNodeHighlightType"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphNodeFeaturingStateDefinition\r\n    {\r\n}\r\n}","Description":"Nodes can have different visual states.  This object represents a single visual state (\"highlight type\")that a node can be in, and the unlock expression condition to determine whether it should be set."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphNodeActivityDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphNodeActivityDefinition","Properties":[{"Name":"nodeActivityId","Type":"integer","Format":"uint32","Description":"An identifier for this node activity.  It is only guaranteed to be unique within the Activity Graph."},{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The activity that will be activated if the user clicks on this node.  Controls all activity-relatedinformation displayed on the node if it is active (the text shown in the tooltip etc)","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphNodeActivityDefinition\r\n    {\r\npublic int nodeActivityId;\r\npublic int activityHash;\r\n}\r\n}","Description":"The actual activity to be redirected to when you click on the node.Note that a node can have many Activities attached to it: but only one will be active at anygiven time.  The list of Node Activities will be traversed, and the first one found to be activewill be displayed.  This way, a node can layer multiple variants of an activity on top of each other.For instance, one node can control the weekly Crucible Playlist.  There are multiple possible playlists,but only one is active for the week."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityDefinition","RawName":"Destiny.Definitions.DestinyActivityDefinition","Properties":[{"Name":null,"Description":"The title, subtitle, and icon for the activity.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"releaseIcon","Type":"string","Description":"If the activity has an icon associated with a specific release (such as a DLC),this is the path to that release's icon."},{"Name":"releaseTime","Type":"integer","Format":"int32","Description":"If the activity will not be visible until a specific and known time, this will bethe seconds since the Epoch when it will become visible."},{"Name":"activityLevel","Type":"integer","Format":"int32","Description":"The difficulty level of the activity."},{"Name":"activityLightLevel","Type":"integer","Format":"int32","Description":"The recommended light level for this activity."},{"Name":"destinationHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the Destination on which this Activity is played.  Use it to look upthe DestinyDestinationDefinition for human readable info about the destination.A Destination can be thought of as a more specific location than a \"Place\".  For instance,if the \"Place\" is Earth, the \"Destination\" would be a specific city or region on Earth.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDestinationDefinition"}]},{"Name":"placeHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the \"Place\" on which this Activity is played.  Use it to look upthe DestinyPlaceDefinition for human readable info about the Place.A Place is the largest-scoped concept for location information.  For instance,if the \"Place\" is Earth, the \"Destination\" would be a specific city or region on Earth.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyPlaceDefinition"}]},{"Name":"activityTypeHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the Activity Type of this Activity.  You may use it to look upthe DestinyActivityTypeDefinition for human readable info, but be forewarned: Playlists andmany PVP Map Activities will map to generic Activity Types.  You'll have to use your knowledgeof the Activity Mode being played to get more specific information about what the user is playing.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityTypeDefinition"}]},{"Name":"tier","Type":"integer","Format":"int32","Description":"The difficulty tier of the activity."},{"Name":"pgcrImage","Type":"string","Description":"When Activities are completed, we generate a \"Post-Game Carnage Report\", or PGCR, with details aboutwhat happened in that activity (how many kills someone got, which team won, etc...)  We use this imageas the background when displaying PGCR information, and often use it when we refer to the Activity in general."},{"Name":"rewards","Type":"array","Description":"The expected possible rewards for the activity.  These rewards may or may not be accessible for an individual playerbased on their character state, the account state, and even the game's state overall.  But it is a useful referencefor possible rewards you can earn in the activity.  These match up to rewards displayed when you hover overthe Activity in the in-game Director, and often refer to Placeholder or \"Dummy\" items: items that tell you what you can earn in vague terms rather than what you'll specifically be earning (partly because the gamedoesn't even know what you'll earn specifically until you roll for it at the end)","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityRewardDefinition"}]},{"Name":"modifiers","Type":"array","Description":"Activities can have Modifiers, as defined in DestinyActivityModifierDefinition.  These are referencesto the modifiers that *can* be applied to that activity, along with data that we use to determine ifthat modifier is actually active at any given point in time.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityModifierReferenceDefinition"}]},{"Name":"isPlaylist","Type":"boolean","Description":"If True, this Activity is actually a Playlist that refers to multiple possible specific Activities and ActivityModes.  For instance, a Crucible Playlist may have references to multiple Activities (Maps) with multiple Activity Modes(specific PvP gameplay modes).  If this is true, refer to the playlistItems property for the specific entriesin the playlist."},{"Name":"challenges","Type":"array","Description":"An activity can have many Challenges, of which any subset of them may be active for playat any given period of time.  This gives the information about the challenges and datathat we use to understand when they're active and what rewards they provide.Sadly, at the moment there's no central definition for challenges: much like \"Skulls\" werein Destiny 1, these are defined on individual activities and there can be many duplicates/near duplicatesacross the Destiny 2 ecosystem.  I have it in mind to centralize these in a future revision of the API, butwe are out of time.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityChallengeDefinition"}]},{"Name":"optionalUnlockStrings","Type":"array","Description":"If there are status strings related to the activity and based on internal state of the game, account, or character,then this will be the definition of those strings and the states needed in order for the strings to be shown.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityUnlockStringDefinition"}]},{"Name":"activityGraphList","Type":"array","Description":"Unfortunately, in practice this is almost never populated.  In theory, this is supposed to tellwhich Activity Graph to show if you bring up the director while in this activity.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityGraphListEntryDefinition"}]},{"Name":null,"Description":"This block of data provides information about the Activity's matchmaking attributes: how many people can join and such.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition"}]]},{"Name":null,"Description":"This block of data, if it exists, provides information about the guided game experience and restrictions for thisactivity.  If it doesn't exist, the game is not able to be played as a guided game.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityGuidedBlockDefinition"}]]},{"Name":"activityModeHash","Type":"integer","Format":"uint32","Description":"The Activity Mode for this activity.  Note that if this is a playlist, the specific playlist entry chosenwill determine the actual activity mode that ends up being played."},{"Name":"isPvP","Type":"boolean","Description":"If true, this activity is a PVP activity or playlist."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityDefinition\r\n    {\r\npublic string releaseIcon;\r\npublic int releaseTime;\r\npublic int activityLevel;\r\npublic int activityLightLevel;\r\npublic int destinationHash;\r\npublic int placeHash;\r\npublic int activityTypeHash;\r\npublic int tier;\r\npublic string pgcrImage;\r\npublic List<object> rewards;\r\npublic List<object> modifiers;\r\npublic bool isPlaylist;\r\npublic List<object> challenges;\r\npublic List<object> optionalUnlockStrings;\r\npublic List<object> activityGraphList;\r\npublic int activityModeHash;\r\npublic bool isPvP;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"The static data about Activities in Destiny 2.\r\nNote that an Activity must be combined with an ActivityMode to know - from a Gameplay perspective -what the user is \"Playing\".\r\nIn most PvE activities, this is fairly straightforward.  A Story Activity can only be played in the StoryActivity Mode.\r\nHowever, in PvP activities, the Activity alone only tells you the map being played, or the Playlist that the userchose to enter.  You'll need to know the Activity Mode they're playing to know that they're playing Mode X on Map Y.\r\nActivity Definitions tell a great deal of information about what *could* be relevant to a user: what rewards theycan earn, what challenges could be performed, what modifiers could be applied.  To figure out which of these propertiesis actually live, you'll need to combine the definition with \"Live\" data from one of the Destiny endpoints.\r\nActivities also have Activity Types, but unfortunately in Destiny 2 these are even less reliable of a source ofinformation than they were in Destiny 1.  I will be looking into ways to provide more reliable sources for type informationas time goes on, but for now we're going to have to deal with the limitations.  See DestinyActivityTypeDefinitionfor more information."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityRewardDefinition","RawName":"Destiny.Definitions.DestinyActivityRewardDefinition","Properties":[{"Name":"rewardText","Type":"string","Description":"The header for the reward set, if any."},{"Name":"rewardItems","Type":"array","Description":"The \"Items provided\" in the reward.  This is almost always a pointer to a DestinyInventoryItemDefintionfor an item that you can't actually earn in-game, but that has name/description/icon information forthe vague concept of the rewards you will receive.  This is because the actual reward generation isnon-deterministic and extremely complicated, so the best the game can do is tell you what you'll getin vague terms.  And so too shall we.\r\nInteresting trivia: you actually *do* earn these items when you complete the activity.  They go into a single-slotbucket on your profile, which is how you see the pop-ups of these rewards when you complete an activity that matchthese \"dummy\" items.  You can even see them if you look at the last one you earned in yourprofile-level inventory through the BNet API!  Who said reading documentation is a waste of time?","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityRewardDefinition\r\n    {\r\npublic string rewardText;\r\npublic List<object> rewardItems;\r\n}\r\n}","Description":"Activities can refer to one or more sets of tooltip-friendly reward data.  These are the definitionsfor those tooltip friendly rewards."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityModifierReferenceDefinition","RawName":"Destiny.Definitions.DestinyActivityModifierReferenceDefinition","Properties":[{"Name":"activityModifierHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the DestinyActivityModifierDefinition referenced by this activity.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.ActivityModifiers.DestinyActivityModifierDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityModifierReferenceDefinition\r\n    {\r\npublic int activityModifierHash;\r\n}\r\n}","Description":"A reference to an Activity Modifier from another entity, such as an Activity(for now, just Activities).\r\nThis defines some"},{"Namespace":"Destiny.Definitions.ActivityModifiers","Name":"DestinyActivityModifierDefinition","RawName":"Destiny.Definitions.ActivityModifiers.DestinyActivityModifierDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.ActivityModifiers\r\n{\r\n    public class DestinyActivityModifierDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Modifiers - in Destiny 1, these were referred to as \"Skulls\" - are changes that can be appliedto an Activity."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityChallengeDefinition","RawName":"Destiny.Definitions.DestinyActivityChallengeDefinition","Properties":[{"Name":"objectiveHash","Type":"integer","Format":"uint32","Description":"The hash for the Objective that matches this challenge.  Use it to look up the DestinyObjectiveDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityChallengeDefinition\r\n    {\r\npublic int objectiveHash;\r\n}\r\n}","Description":"Represents a reference to a Challenge, which for now is just an Objective."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityUnlockStringDefinition","RawName":"Destiny.Definitions.DestinyActivityUnlockStringDefinition","Properties":[{"Name":"displayString","Type":"string","Description":"The string to be displayed if the conditions are met."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityUnlockStringDefinition\r\n    {\r\npublic string displayString;\r\n}\r\n}","Description":"Represents a status string that could be conditionally displayed about an activity.Note that externally, you can only see the strings themselves.  Internally we combine this informationwith server state to determine which strings should be shown."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityMatchmakingBlockDefinition","RawName":"Destiny.Definitions.DestinyActivityMatchmakingBlockDefinition","Properties":[{"Name":"isMatchmade","Type":"boolean","Description":"If TRUE, the activity is matchmade.  Otherwise, it requires explicit forming of a party."},{"Name":"minParty","Type":"integer","Format":"int32","Description":"The minimum # of people in the fireteam for the activity to launch."},{"Name":"maxParty","Type":"integer","Format":"int32","Description":"The maximum # of people allowed in a Fireteam."},{"Name":"maxPlayers","Type":"integer","Format":"int32","Description":"The maximum # of people allowed across all teams in the activity."},{"Name":"requiresGuardianOath","Type":"boolean","Description":"If true, you have to Solemnly Swear to be up to Nothing But Good(tm) to play."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityMatchmakingBlockDefinition\r\n    {\r\npublic bool isMatchmade;\r\npublic int minParty;\r\npublic int maxParty;\r\npublic int maxPlayers;\r\npublic bool requiresGuardianOath;\r\n}\r\n}","Description":"Information about matchmaking and party size for the activity."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityGuidedBlockDefinition","RawName":"Destiny.Definitions.DestinyActivityGuidedBlockDefinition","Properties":[{"Name":"guidedMaxLobbySize","Type":"integer","Format":"int32","Description":"The maximum amount of people that can be in the waiting lobby."},{"Name":"guidedMinLobbySize","Type":"integer","Format":"int32","Description":"The minimum amount of people that can be in the waiting lobby."},{"Name":"guidedDisbandCount","Type":"integer","Format":"int32","Description":"If -1, the guided group cannot be disbanded.  Otherwise, take the total # of players in the activityand subtract this number: that is the total # of votes needed for the guided group to disband."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityGuidedBlockDefinition\r\n    {\r\npublic int guidedMaxLobbySize;\r\npublic int guidedMinLobbySize;\r\npublic int guidedDisbandCount;\r\n}\r\n}","Description":"Guided Game information for this activity."},{"Namespace":"Destiny.Definitions","Name":"DestinyPlaceDefinition","RawName":"Destiny.Definitions.DestinyPlaceDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyPlaceDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Okay, so Activities (DestinyActivityDefinition) take place in Destinations(DestinyDestinationDefinition).  Destinations are part of larger locations known asPlaces (you're reading its documentation right now).\r\nPlaces are more on the planetary scale, like \"Earth\" and \"Your Mom.\""},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityTypeDefinition","RawName":"Destiny.Definitions.DestinyActivityTypeDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityTypeDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"The definition for an Activity Type.\r\nIn Destiny 2, an Activity Type represents a conceptual categorization of Activities.\r\nThese are most commonly used in the game for the subtitle under Activities, but BNetuses them extensively to identify and group activities by their common properties.\r\nUnfortunately, there has been a movement away from providing the richer data in Destiny 2that we used to get in Destiny 1 for Activity Types.  For instance, Nightfalls aregrouped under the same Activity Type as regular Strikes.  \r\nFor this reason, BNet will eventually migrate toward Activity Modes as a better indicator of activity category.But for the time being, it is still referred to in many places across our codebase."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphArtElementDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphArtElementDefinition","Properties":[{"Name":null,"Description":"The position on the map of the art element.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyPositionDefinition"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphArtElementDefinition\r\n    {\r\n}\r\n}","Description":"These Art Elements are meant to represent one-off visual effects overlaid on the map.Currently, we do not have a pipeline to import the assets for these overlays, so this infoexists as a placeholder for when such a pipeline exists (if it ever will)"},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphConnectionDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphConnectionDefinition","Properties":[{"Name":"sourceNodeHash","Type":"integer","Format":"uint32"},{"Name":"destNodeHash","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphConnectionDefinition\r\n    {\r\npublic int sourceNodeHash;\r\npublic int destNodeHash;\r\n}\r\n}","Description":"Nodes on a graph can be visually connected: this appears to be the information about which nodes to link.It appears to lack more detailed information, such as the path for that linking."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphDisplayObjectiveDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphDisplayObjectiveDefinition","Properties":[{"Name":"id","Type":"integer","Format":"uint32","Description":"$NOTE $amola 2017-01-19 This field is apparently something that CUI uses to manually wire up objectivesto display info.  I am unsure how it works."},{"Name":"objectiveHash","Type":"integer","Format":"uint32","Description":"The objective being shown on the map.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphDisplayObjectiveDefinition\r\n    {\r\npublic int id;\r\npublic int objectiveHash;\r\n}\r\n}","Description":"When a Graph needs to show active Objectives, this defines those objectives as well as an identifier."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyActivityGraphDisplayProgressionDefinition","RawName":"Destiny.Definitions.Director.DestinyActivityGraphDisplayProgressionDefinition","Properties":[{"Name":"id","Type":"integer","Format":"uint32"},{"Name":"progressionHash","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyActivityGraphDisplayProgressionDefinition\r\n    {\r\npublic int id;\r\npublic int progressionHash;\r\n}\r\n}","Description":"When a Graph needs to show active Progressions, this defines those objectives as well as an identifier."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyLinkedGraphDefinition","RawName":"Destiny.Definitions.Director.DestinyLinkedGraphDefinition","Properties":[{"Name":"description","Type":"string"},{"Name":"name","Type":"string"},{"Name":"unlockExpression","$ref":"#/components/schemas/Destiny.Definitions.DestinyUnlockExpressionDefinition"},{"Name":"linkedGraphId","Type":"integer","Format":"uint32"},{"Name":"linkedGraphs","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Director.DestinyLinkedGraphEntryDefinition"}]},{"Name":"overview","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyLinkedGraphDefinition\r\n    {\r\npublic string description;\r\npublic string name;\r\npublic Destiny.Definitions.DestinyUnlockExpressionDefinition unlockExpression;\r\npublic int linkedGraphId;\r\npublic List<object> linkedGraphs;\r\npublic string overview;\r\n}\r\n}","Description":"This describes links between the current graph and others, as well as when that link is relevant."},{"Namespace":"Destiny.Definitions","Name":"DestinyUnlockExpressionDefinition","RawName":"Destiny.Definitions.DestinyUnlockExpressionDefinition","Properties":[{"Name":null,"Description":"A shortcut for determining the most restrictive gating that this expression performs.See the DestinyGatingScope enum's documentation for more details.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyGatingScope"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyUnlockExpressionDefinition\r\n    {\r\n}\r\n}","Description":"Where the sausage gets made.  Unlock Expressions are the foundation of the game's gatingmechanics and investment-related restrictions.  They can test Unlock Flags and Unlock Valuesfor certain states, using a sufficient amount of logical operators such thatunlock expressions are effectively Turing complete.\r\nUse UnlockExpressionParser to evaluate expressions using an IUnlockContext parsed from Babel."},{"Namespace":"Destiny.Definitions.Director","Name":"DestinyLinkedGraphEntryDefinition","RawName":"Destiny.Definitions.Director.DestinyLinkedGraphEntryDefinition","Properties":[{"Name":"activityGraphHash","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Director\r\n{\r\n    public class DestinyLinkedGraphEntryDefinition\r\n    {\r\npublic int activityGraphHash;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyDestinationBubbleSettingDefinition","RawName":"Destiny.Definitions.DestinyDestinationBubbleSettingDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyDestinationBubbleSettingDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\n}\r\n}","Description":"Human readable data about the bubble.  Combine with DestinyBubbleDefinition - seeDestinyDestinationDefinition.bubbleSettings for more information."},{"Namespace":"Destiny.Definitions","Name":"DestinyBubbleDefinition","RawName":"Destiny.Definitions.DestinyBubbleDefinition","Properties":[{"Name":"hash","Type":"integer","Format":"uint32","Description":"The identifier for the bubble: only guaranteed to be unique within the Destination."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyBubbleDefinition\r\n    {\r\npublic int hash;\r\n}\r\n}","Description":"Basic identifying data about the bubble.  Combine with DestinyDestinationBubbleSettingDefinition - seeDestinyDestinationDefinition.bubbleSettings for more information."},{"Namespace":"Destiny.Definitions.Items","Name":"DestinyItemPlugDefinition","RawName":"Destiny.Definitions.Items.DestinyItemPlugDefinition","Properties":[{"Name":"insertionRules","Type":"array","Description":"The rules around when this plug can be inserted into a socket, asidefrom the socket's individual restrictions.\r\nThe live data DestinyItemPlugComponent.insertFailIndexes will be an index intothis array, so you can pull out the failure strings appropriate for the user.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyPlugRuleDefinition"}]},{"Name":"plugCategoryIdentifier","Type":"string","Description":"The string identifier for the plug's category.  Use the socket's DestinySocketTypeDefinition.plugWhitelistto determine whether this plug can be inserted into the socket."},{"Name":"plugCategoryHash","Type":"integer","Format":"uint32","Description":"The hash for the plugCategoryIdentifier.  You can use this instead if you wish: I put both in the definitionfor debugging purposes."},{"Name":"onActionRecreateSelf","Type":"boolean","Description":"If you successfully socket the item, this will determine whether or not you get \"refunded\" on the plug."},{"Name":"insertionMaterialRequirementHash","Type":"integer","Format":"uint32","Description":"If inserting this plug requires materials, this is the hash identifier for looking up theDestinyMaterialRequirementSetDefinition for those requirements.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyMaterialRequirementSetDefinition"}]},{"Name":"previewItemOverrideHash","Type":"integer","Format":"uint32","Description":"In the game, if you're inspecting a plug item directly, this will be the item shownwith the plug attached.  Look up the DestinyInventoryItemDefinition for this hash for the item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"enabledMaterialRequirementHash","Type":"integer","Format":"uint32","Description":"It's not enough for the plug to be inserted.  It has to be enabled as well.For it to be enabled, it may require materials.This is the hash identifier for the DestinyMaterialRequirementSetDefinition for those requirements,if there is one.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyMaterialRequirementSetDefinition"}]},{"Name":"enabledRules","Type":"array","Description":"The rules around whether the plug, once inserted, is enabled and providing its benefits.\r\nThe live data DestinyItemPlugComponent.enableFailIndexes will be an index intothis array, so you can pull out the failure strings appropriate for the user.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Items.DestinyPlugRuleDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Items\r\n{\r\n    public class DestinyItemPlugDefinition\r\n    {\r\npublic List<object> insertionRules;\r\npublic string plugCategoryIdentifier;\r\npublic int plugCategoryHash;\r\npublic bool onActionRecreateSelf;\r\npublic int insertionMaterialRequirementHash;\r\npublic int previewItemOverrideHash;\r\npublic int enabledMaterialRequirementHash;\r\npublic List<object> enabledRules;\r\n}\r\n}","Description":"If an item is a Plug, its DestinyInventoryItemDefinition.plug property will be populatedwith an instance of one of these bad boys.\r\nThis gives information about when it can be inserted, what the plug's categoryis (and thus whether it is compatible with a socket... see DestinySocketTypeDefinitionfor information about Plug Categories and socket compatibility), whether it is enabledand other Plug info."},{"Namespace":"Destiny.Definitions.Items","Name":"DestinyPlugRuleDefinition","RawName":"Destiny.Definitions.Items.DestinyPlugRuleDefinition","Properties":[{"Name":"failureMessage","Type":"string","Description":"The localized string to show if this rule fails."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Items\r\n{\r\n    public class DestinyPlugRuleDefinition\r\n    {\r\npublic string failureMessage;\r\n}\r\n}","Description":"Dictates a rule around whether the plug is enabled or insertable.\r\nIn practice, the live Destiny data will refer to these entries by index.  You can thenlook up that index in the appropriate property (enabledRules or insertionRules) to getthe localized string for the failure message if it failed."},{"Namespace":"Destiny.Definitions","Name":"DestinyMaterialRequirementSetDefinition","RawName":"Destiny.Definitions.DestinyMaterialRequirementSetDefinition","Properties":[{"Name":"materials","Type":"array","Description":"The list of all materials that are required.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyMaterialRequirement"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyMaterialRequirementSetDefinition\r\n    {\r\npublic List<object> materials;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Represent a set of material requirements: Items that either need to be owned or need to be consumedin order to perform an action.\r\nA variety of other entities refer to these as gatekeepers and paymentsfor actions that can be performed in game."},{"Namespace":"Destiny.Definitions","Name":"DestinyMaterialRequirement","RawName":"Destiny.Definitions.DestinyMaterialRequirement","Properties":[{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the material required.  Use it to look up the material's DestinyInventoryItemDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"deleteOnAction","Type":"boolean","Description":"If True, the material will be removed from the character's inventory when the action is performed."},{"Name":"count","Type":"integer","Format":"int32","Description":"The amount of the material required."},{"Name":"omitFromRequirements","Type":"boolean","Description":"If True, this requirement is \"silent\": don't bother showing it in a material requirements display.I mean, I'm not your mom: I'm not going to tell you you *can't* show it.  But we won't show it in our UI."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyMaterialRequirement\r\n    {\r\npublic int itemHash;\r\npublic bool deleteOnAction;\r\npublic int count;\r\npublic bool omitFromRequirements;\r\n}\r\n}","Description":"Many actions relating to items require you to expend materials:- Activating a talent node- Inserting a plug into a socketThe items will refer to material requirements by a materialRequirementsHash in these cases, and thisis the definition for those requirements in terms of the item required, how much of it is required and otherinteresting info.This is one of the rare/strange times where a single contract class is used both in definitions *and*in live data response contracts.  I'm not sure yet whether I regret that."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemGearsetBlockDefinition","RawName":"Destiny.Definitions.DestinyItemGearsetBlockDefinition","Properties":[{"Name":"trackingValueMax","Type":"integer","Format":"int32","Description":"The maximum possible number of items that can be collected."},{"Name":"itemList","Type":"array","Description":"The list of hashes for items in the gearset.  Use them to look up DestinyInventoryItemDefinition entries forthe items in the set.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemGearsetBlockDefinition\r\n    {\r\npublic int trackingValueMax;\r\npublic List<object> itemList;\r\n}\r\n}","Description":"If an item has a related gearset, this is the list of items in that set, and an unlock expressionthat evaluates to a number representing the progress toward gearset completion (a very rare use forunlock expressions!)"},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSackBlockDefinition","RawName":"Destiny.Definitions.DestinyItemSackBlockDefinition","Properties":[{"Name":"detailAction","Type":"string","Description":"A description of what will happen when you open the sack.As far as I can tell, this is blank currently.  Unknown whether it willeventually be populated with useful info."},{"Name":"openAction","Type":"string","Description":"The localized name of the action being performed when you open the sack."},{"Name":"selectItemCount","Type":"integer","Format":"int32"},{"Name":"vendorSackType","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSackBlockDefinition\r\n    {\r\npublic string detailAction;\r\npublic string openAction;\r\npublic int selectItemCount;\r\npublic string vendorSackType;\r\n}\r\n}","Description":"Some items are \"sacks\" - they can be \"opened\" to produce other items.This is information related to its sack status, mostly UI strings.Engrams are an example of items that are considered to be \"Sacks\"."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSocketBlockDefinition","RawName":"Destiny.Definitions.DestinyItemSocketBlockDefinition","Properties":[{"Name":"detail","Type":"string","Description":"This was supposed to be a string that would give per-item details about sockets.In practice, it turns out that all this ever has is the localized word \"details\".... that's lame, but perhaps it will become something cool in the future."},{"Name":"socketEntries","Type":"array","Description":"Each socket on an item is defined here.  Check inside for more info.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSocketEntryDefinition"}]},{"Name":"socketCategories","Type":"array","Description":"A convenience property, that refers to the sockets in the \"sockets\" property, pre-groupedby category and ordered in the manner that they should be grouped in the UI.You could form this yourself with the existing data, but why would you want to?  Enjoy life man.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSocketCategoryDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSocketBlockDefinition\r\n    {\r\npublic string detail;\r\npublic List<object> socketEntries;\r\npublic List<object> socketCategories;\r\n}\r\n}","Description":"If defined, the item has at least one socket."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSocketEntryDefinition","RawName":"Destiny.Definitions.DestinyItemSocketEntryDefinition","Properties":[{"Name":"socketTypeHash","Type":"integer","Format":"uint32","Description":"All sockets have a type, and this is the hash identifier for this particular type.Use it to look up the DestinySocketTypeDefinition: read there for more information onhow socket types affect the behavior of the socket.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Sockets.DestinySocketTypeDefinition"}]},{"Name":"singleInitialItemHash","Type":"integer","Format":"uint32","Description":"If a valid hash, this is the hash identifier for the DestinyInventoryItemDefinitionrepresenting the Plug that will be initially inserted into the item on item creation.Otherwise, this Socket will either start without a plug inserted, or will have one randomlyinserted.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"reusablePlugItems","Type":"array","Description":"This is a list of pre-determined plugs that can *always* be plugged into this socket, withoutthe character having the plug in their inventory.\r\nIf this list is populated, you will not be allowed to plug an arbitrary item in the socket: youwill only be able to choose from one of these reusable plugs.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSocketEntryPlugItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSocketEntryDefinition\r\n    {\r\npublic int socketTypeHash;\r\npublic int singleInitialItemHash;\r\npublic List<object> reusablePlugItems;\r\n}\r\n}","Description":"The definition information for a specific socket on an item.This will determine how the socket behaves in-game."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSocketEntryPlugItemDefinition","RawName":"Destiny.Definitions.DestinyItemSocketEntryPlugItemDefinition","Properties":[{"Name":"plugItemHash","Type":"integer","Format":"uint32","Description":"The hash identifier of a DestinyInventoryItemDefinition representing the plugthat can be inserted.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSocketEntryPlugItemDefinition\r\n    {\r\npublic int plugItemHash;\r\n}\r\n}","Description":"The definition of a known, reusable plug that can be applied to a socket."},{"Namespace":"Destiny.Definitions.Sockets","Name":"DestinySocketTypeDefinition","RawName":"Destiny.Definitions.Sockets.DestinySocketTypeDefinition","Properties":[{"Name":null,"Description":"There are fields for this display data, but they appear to be unpopulated as of now.I am not sure where in the UI these would show if they even were populated, butI will continue to return this data in case it becomes useful.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":null,"Description":"Defines what happens when a plug is inserted into sockets of this type.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Sockets.DestinyInsertPlugActionDefinition"}]]},{"Name":"plugWhitelist","Type":"array","Description":"A list of Plug \"Categories\" that are allowed to be plugged into sockets of this type.\r\nThese should be compared against a given plug item's DestinyInventoryItemDefinition.plug.plugCategoryHash,which indicates the plug item's category.\r\nIf the plug's category matches any whitelisted plug, or if the whitelist is empty, it is allowed to be inserted.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Sockets.DestinyPlugWhitelistEntryDefinition"}]},{"Name":"socketCategoryHash","Type":"integer","Format":"uint32"},{"Name":"visibility","$ref":"#/components/schemas/Destiny.DestinySocketVisibility"},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Sockets\r\n{\r\n    public class DestinySocketTypeDefinition\r\n    {\r\npublic List<object> plugWhitelist;\r\npublic int socketCategoryHash;\r\npublic Destiny.DestinySocketVisibility visibility;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"All Sockets have a \"Type\": a set of common properties that determine when the socket allowsPlugs to be inserted, what Categories of Plugs can be inserted, and whether the socket iseven visible at all given the current game/character/account state.\r\nSee DestinyInventoryItemDefinition for more information about Socketed items and Plugs."},{"Namespace":"Destiny.Definitions.Sockets","Name":"DestinyInsertPlugActionDefinition","RawName":"Destiny.Definitions.Sockets.DestinyInsertPlugActionDefinition","Properties":[{"Name":"actionExecuteSeconds","Type":"integer","Format":"int32","Description":"How long it takes for the Plugging of the item to be completed once it is initiated, if you care."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Sockets\r\n{\r\n    public class DestinyInsertPlugActionDefinition\r\n    {\r\npublic int actionExecuteSeconds;\r\n}\r\n}","Description":"Data related to what happens while a plug is being inserted, mostly for UI purposes."},{"Namespace":"Destiny.Definitions.Sockets","Name":"DestinyPlugWhitelistEntryDefinition","RawName":"Destiny.Definitions.Sockets.DestinyPlugWhitelistEntryDefinition","Properties":[{"Name":"categoryHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the Plug Category to compare against the plug item's plug.plugCategoryHash.\r\nNote that this does NOT relate to any Definition in itself, it is only used for comparison purposes."},{"Name":"categoryIdentifier","Type":"string","Description":"The string identifier for the category, which is here mostly for debug purposes."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Sockets\r\n{\r\n    public class DestinyPlugWhitelistEntryDefinition\r\n    {\r\npublic int categoryHash;\r\npublic string categoryIdentifier;\r\n}\r\n}","Description":"Defines a plug \"Category\" that is allowed to be plugged into a socket of this type.\r\nThis should be compared against a given plug item's DestinyInventoryItemDefinition.plug.plugCategoryHash,which indicates the plug item's category."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSocketCategoryDefinition","RawName":"Destiny.Definitions.DestinyItemSocketCategoryDefinition","Properties":[{"Name":"socketCategoryHash","Type":"integer","Format":"uint32","Description":"The hash for the Socket Category: a quick way to go get the header display information for the category.Use it to look up DestinyItemSocketCategoryDefinition info.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemSocketCategoryDefinition"}]},{"Name":"socketIndexes","Type":"array","Description":"Use these indexes to look up the sockets in the \"sockets.socketEntries\" property on the item definition.These are the indexes under the category, in game-rendered order.","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSocketCategoryDefinition\r\n    {\r\npublic int socketCategoryHash;\r\npublic List<object> socketIndexes;\r\n}\r\n}","Description":"Sockets are grouped into categories in the UI.  These define which categoryand which sockets are under that category."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemSummaryBlockDefinition","RawName":"Destiny.Definitions.DestinyItemSummaryBlockDefinition","Properties":[{"Name":"sortPriority","Type":"integer","Format":"int32","Description":"Apparently when rendering an item in a reward, this should be used as a sort priority.We're not doing it presently."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemSummaryBlockDefinition\r\n    {\r\npublic int sortPriority;\r\n}\r\n}","Description":"This appears to be information used when rendering rewards.  We don't currently use it on BNet."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemTalentGridBlockDefinition","RawName":"Destiny.Definitions.DestinyItemTalentGridBlockDefinition","Properties":[{"Name":"talentGridHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the DestinyTalentGridDefinition attached to this item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentGridDefinition"}]},{"Name":"itemDetailString","Type":"string","Description":"This is meant to be a subtitle for looking at the talent grid.In practice, somewhat frustratingly, this always merely says the localized wordfor \"Details\".  Great.  Maybe it'll have more if talent grids ever get usedfor more than builds and subclasses again."},{"Name":"buildName","Type":"string","Description":"A shortcut string identifier for the \"build\" in question, if this talent gridhas an associated build.  Doesn't map to anything we can expose at the moment."},{"Name":null,"Description":"If the talent grid implies a damage type, this is the enum value for that damage type.","allOf":[[{"$ref":"#/components/schemas/Destiny.DamageType"}]]},{"Name":"hudIcon","Type":"string","Description":"If the talent grid has a special icon that's shown in the game UI (like builds, funny that),this is the identifier for that icon.Sadly, we don't actually get that icon right now.  I'll be looking to replace thiswith a path to the actual icon itself."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemTalentGridBlockDefinition\r\n    {\r\npublic int talentGridHash;\r\npublic string itemDetailString;\r\npublic string buildName;\r\npublic string hudIcon;\r\n}\r\n}","Description":"This defines information that can only come from a talent grid on an item.Items mostly have negligible talent grid data these days, but instanced items still retaingrids as a source for some of this common information.\r\nBuilds/Subclasses are the only items left that still have talent grids with meaningfulNodes."},{"Namespace":"Destiny.Definitions","Name":"DestinyTalentGridDefinition","RawName":"Destiny.Definitions.DestinyTalentGridDefinition","Properties":[{"Name":"maxGridLevel","Type":"integer","Format":"int32","Description":"The maximum possible level of the Talent Grid: at this level, any nodes are allowed to be activated."},{"Name":"gridLevelPerColumn","Type":"integer","Format":"int32","Description":"The meaning of this has been lost in the sands of time: it still exists as a property, but appears to beunused in the modern UI of talent grids.  It used to imply that each visual \"column\" of talent nodesrequired identical progression levels in order to be activated.  Returning this value in case it is stilluseful to someone?  Perhaps it's just a bit of interesting history."},{"Name":"progressionHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the Progression (DestinyProgressionDefinition) that drives whether and whenTalent Nodes can be activated on the Grid.  Items will have instances of this Progression, and willgain experience that will eventually cause the grid to increase in level.  As the grid's level increases,it will cross the threshold where nodes can be activated.  See DestinyTalentGridStepDefinition'sactivation requirements for more information.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition"}]},{"Name":"nodes","Type":"array","Description":"The list of Talent Nodes on the Grid (recall that Nodes themselves are really just locations inthe UI to show whatever their current Step is.  You will only know the current step for a nodeby retrieving instanced data through platform calls to the API that return DestinyItemTalentGridComponent).","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeDefinition"}]},{"Name":"exclusiveSets","Type":"array","Description":"Talent Nodes can exist in \"exclusive sets\": these are sets of nodes in which only a single node in the set can be activated at any given time.  Activating a node in this set will automaticallydeactivate the other nodes in the set (referred to as a \"Swap\").\r\nIf a node in the exclusive set has already been activated, the game will not charge you materialsto activate another node in the set, even if you have never activated it before, because you alreadypaid the cost to activate one node in the set.\r\nNot to be confused with Exclusive Groups.  (how the heck do we NOT get confused by that?  Jeez)See the groups property for information about that only-tangentially-related concept.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeExclusiveSetDefinition"}]},{"Name":"independentNodeIndexes","Type":"array","Description":"This is a quick reference to the indexes of nodes that are not part of exclusive sets.  Handyfor knowing which talent nodes can only be activated directly, rather than via swapping.","items":[{"type":"integer","format":"int32"}]},{"Name":"groups","Type":"object","Description":"Talent Nodes can have \"Exclusive Groups\".  These are not to be confused with Exclusive Sets (see exclusiveSets property).\r\nLook at the definition of DestinyTalentExclusiveGroup for more information and how they work.  These groupsare keyed by the \"groupHash\" from DestinyTalentExclusiveGroup.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentExclusiveGroup"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"nodeCategories","Type":"array","Description":"BNet wants to show talent nodes grouped by similar purpose with localized titles.This is the ordered list of those categories: if you want to show nodes by category, you caniterate over this list, render the displayProperties for the category as the title, andthen iterate over the talent nodes referenced by the category to show the related nodes.\r\nNote that this is different from Exclusive Groups or Sets, because these categoriesalso incorporate \"Independent\" nodes that belong to neither sets nor groups.  These are purelyfor visual grouping of nodes rather than functional grouping.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeCategory"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyTalentGridDefinition\r\n    {\r\npublic int maxGridLevel;\r\npublic int gridLevelPerColumn;\r\npublic int progressionHash;\r\npublic List<object> nodes;\r\npublic List<object> exclusiveSets;\r\npublic List<object> independentNodeIndexes;\r\npublic List<object> nodeCategories;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"The time has unfortunately come to talk about Talent Grids.\r\nTalent Grids are the most complex and unintuitive part of the Destiny Definition data.  Grab a cup of coffeebefore we begin, I can wait.\r\nTalent Grids were the primary way that items could be customized in Destiny 1.  In Destiny 2, for now,talent grids have become exclusively used by Subclass/Build items: but the system is still in place for itto be used by items should the direction change back toward talent grids.\r\nTalent Grids have Nodes: the visual circles on the talent grid detail screen that have icons and canbe activated if you meet certain requirements and pay costs.  The actual visual data and effects, however,are driven by the \"Steps\" on Talent Nodes.  Any given node will have 1:M of these steps, and the specificstep that will be considered the \"current\" step (and thus the dictator of all benefits, visual state, andactivation requirements on the Node) will almost always not be determined until an instance of the item is created.  This is how, in Destiny 1, items were able to have such a wide variety of what users saw as \"Perks\":they were actually Talent Grids with nodes that had a wide variety of Steps, randomly chosen at the timeof item creation.\r\nNow that Talent Grids are used exclusively by subclasses and builds, all of the properties withinstill apply: but there are additional visual elements on the Subclass/Build screens that are superimposedon top of the talent nodes.  Unfortunately, BNet doesn't have this data: if you want to build a subclassscreen, you will have to provide your own \"decorative\" assets, such as the visual connectors betweennodes and the fancy colored-fire-bathed character standing behind the nodes.\r\nDestinyInventoryItem.talentGrid.talentGridHash defines an item's linked Talent Grid, which brings you tothis definition that contains enough satic data about talent grids to make your head spin.  These *must* becombined with instanced data - found when live data returns DestinyItemTalentGridComponent - in order toderive meaning.  The instanced data will reference nodes and steps within these definitions, which you willthen have to look up in the definition and combine with the instanced data to give the user thevisual representation of their item's talent grid."},{"Namespace":"Destiny.Definitions","Name":"DestinyTalentNodeDefinition","RawName":"Destiny.Definitions.DestinyTalentNodeDefinition","Properties":[{"Name":"nodeIndex","Type":"integer","Format":"int32","Description":"The index into the DestinyTalentGridDefinition's \"nodes\" property where this nodeis located.  Used to uniquely identify the node within the Talent Grid.  Note thatthis is content version dependent: make sure you have the latest version of contentbefore trying to use these properties."},{"Name":"nodeHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the node, which unfortunately is also content version dependentbut can be (and ideally, should be) used instead of the nodeIndex to uniquely identify the node.\r\nThe two exist side-by-side for backcompat reasons due to the Great Talent Node Restructuringof Destiny 1, and I ran out of time to remove one of them and standardize on the other.  Sorry!"},{"Name":"row","Type":"integer","Format":"int32","Description":"The visual \"row\" where the node should be shown in the UI.  If negative, then the node is hidden."},{"Name":"column","Type":"integer","Format":"int32","Description":"The visual \"column\" where the node should be shown in the UI.  If negative, the node is hidden."},{"Name":"prerequisiteNodeIndexes","Type":"array","Description":"Indexes into the DestinyTalentGridDefinition.nodes property for any nodesthat must be activated before this one is allowed to be activated.\r\nI would have liked to change this to hashes for Destiny 2, but we have run out of time.","items":[{"type":"integer","format":"int32"}]},{"Name":"binaryPairNodeIndex","Type":"integer","Format":"int32","Description":"At one point, Talent Nodes supported the idea of \"Binary Pairs\": nodes that overlapped eachother visually, and where activating one deactivated the other.  They ended up not being used,mostly because Exclusive Sets are *almost* a superset of this concept, but the potentialfor it to be used still exists in theory.\r\nIf this is ever used, this will be the index intothe DestinyTalentGridDefinition.nodes property for the node that is the binary pair matchto this node.  Activating one deactivates the other."},{"Name":"autoUnlocks","Type":"boolean","Description":"If true, this node will automatically unlock when the Talent Grid's level reachesthe required level of the current step of this node."},{"Name":"lastStepRepeats","Type":"boolean","Description":"At one point, Nodes were going to be able to be activated multiple times, changingthe current step and potentially piling on multiple effects from the previouslyactivated steps.  This property would indicate if the last step could be activatedmultiple times.  \r\nThis is not currently used, but it isn't out of the question thatthis could end up being used again in a theoretical future."},{"Name":"isRandom","Type":"boolean","Description":"If this is true, the node's step is determined randomly rather thanthe first step being chosen."},{"Name":null,"Description":"At one point, you were going to be able to repurchase talent nodes that had random steps,to \"re-roll\" the current step of the node (and thus change the properties of your item).This was to be the activation requirement for performing that re-roll.\r\nThe system still exists to do this, as far as I know, so it may yet come back around!","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyNodeActivationRequirement"}]]},{"Name":"isRandomRepurchasable","Type":"boolean","Description":"If this is true, the node can be \"re-rolled\" to acquire a different random current step.This is not used, but still exists for a theoretical future of talent grids."},{"Name":"steps","Type":"array","Description":"At this point, \"steps\" have been obfuscated into conceptual entities, aggregating the underlying notions of \"properties\" and \"true steps\".\r\nIf you need to know a step as it truly exists - such as when recreating Node logic when processingVendor data - you'll have to use the \"realSteps\" property below.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyNodeStepDefinition"}]},{"Name":"exclusiveWithNodeHashes","Type":"array","Description":"The nodeHash values for nodes that are in an Exclusive Set with this node.\r\nSee DestinyTalentGridDefinition.exclusiveSets for more info about exclusive sets.\r\nAgain, note that these are nodeHashes and *not* nodeIndexes.","items":[{"type":"integer","format":"uint32"}]},{"Name":"randomStartProgressionBarAtProgression","Type":"integer","Format":"int32","Description":"If the node's step is randomly selected, this is the amount of the Talent Grid's progression experienceat which the progression bar for the node should be shown."},{"Name":"layoutIdentifier","Type":"string","Description":"A string identifier for a custom visual layout to apply to this talent node.  Unfortunately,we do not have any data for rendering these custom layouts.  It will be up to you to interpretthese strings and change your UI if you want to have custom UI matching these layouts."},{"Name":"groupHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"As of Destiny 2, nodes can exist as part of \"Exclusive Groups\".  These differ from exclusive sets in that,within the group, many nodes can be activated.  But the act of activating any node in the group will cause \"opposing\" nodes(nodes in groups that are not allowed to be activated at the same time as this group) to deactivate.\r\nSee DestinyTalentExclusiveGroup for more information on the details.  This is an identifier for this node's group,if it is part of one."},{"Name":"loreHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"Talent nodes can be associated with a piece of Lore, generally rendered in a tooltip.  This is the hash identifierof the lore element to show, if there is one to be show.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Lore.DestinyLoreDefinition"}]},{"Name":"nodeStyleIdentifier","Type":"string","Description":"Comes from the talent grid node style: this identifier should be used to determinehow to render the node in the UI."},{"Name":"ignoreForCompletion","Type":"boolean","Description":"Comes from the talent grid node style: if true, then this node should be ignored for determining whether the grid is complete."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyTalentNodeDefinition\r\n    {\r\npublic int nodeIndex;\r\npublic int nodeHash;\r\npublic int row;\r\npublic int column;\r\npublic List<object> prerequisiteNodeIndexes;\r\npublic int binaryPairNodeIndex;\r\npublic bool autoUnlocks;\r\npublic bool lastStepRepeats;\r\npublic bool isRandom;\r\npublic bool isRandomRepurchasable;\r\npublic List<object> steps;\r\npublic List<object> exclusiveWithNodeHashes;\r\npublic int randomStartProgressionBarAtProgression;\r\npublic string layoutIdentifier;\r\npublic int groupHash;\r\npublic int loreHash;\r\npublic string nodeStyleIdentifier;\r\npublic bool ignoreForCompletion;\r\n}\r\n}","Description":"Talent Grids on items have Nodes.  These nodes have positions in the talent grid's UI,and contain \"Steps\" (DestinyTalentNodeStepDefinition), one of whom will be the \"Current\" step.\r\nThe Current Step determines the visual properties of the node, as well as what the node grantswhen it is activated.\r\nSee DestinyTalentGridDefinition for a more complete overview of how Talent Grids work, and howthey are used in Destiny 2 (and how they were used in Destiny 1)."},{"Namespace":"Destiny.Definitions","Name":"DestinyNodeActivationRequirement","RawName":"Destiny.Definitions.DestinyNodeActivationRequirement","Properties":[{"Name":"gridLevel","Type":"integer","Format":"int32","Description":"The Progression level on the Talent Grid required to activate this node.\r\nSee DestinyTalentGridDefinition.progressionHash for the related Progression, and readDestinyProgressionDefinition's documentation to learn more about Progressions."},{"Name":"materialRequirementHashes","Type":"array","Description":"The list of hash identifiers for material requirement sets: materials thatare required for the node to be activated.  See DestinyMaterialRequirementSetDefinition formore information about material requirements.\r\nIn this case, only a single DestinyMaterialRequirementSetDefinition will be chosenfrom this list, and we won't know which one will be chosen until an instance of the item is created.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyMaterialRequirementSetDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyNodeActivationRequirement\r\n    {\r\npublic int gridLevel;\r\npublic List<object> materialRequirementHashes;\r\n}\r\n}","Description":"Talent nodes have requirements that must be met before they can be activated.\r\nThis describes the material costs, the Level of the Talent Grid's progressionrequired, and other conditional information that limits whether a talent node can beactivated."},{"Namespace":"Destiny.Definitions","Name":"DestinyNodeStepDefinition","RawName":"Destiny.Definitions.DestinyNodeStepDefinition","Properties":[{"Name":null,"Description":"These are the display properties actually used to render the Talent Node.The currently active step's displayProperties are shown.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"stepIndex","Type":"integer","Format":"int32","Description":"The index of this step in the list of Steps on the Talent Node.\r\nUnfortunately, this is the closest thing we have to an identifier for the Step:steps are not provided a content version agnostic identifier.  This means that,when you are dealing with talent nodes, you will need to first ensure that you havethe latest version of content."},{"Name":"nodeStepHash","Type":"integer","Format":"uint32","Description":"The hash of this node step.  Unfortunately, while it can be used to uniquely identifythe step within a node, it is also content version dependent and should not be relied onwithout ensuring you have the latest vesion of content."},{"Name":"interactionDescription","Type":"string","Description":"If you can interact with this node in some way, this is the localized descriptionof that interaction."},{"Name":null,"Description":"An enum representing a damage type granted by activating this step, if any.","allOf":[[{"$ref":"#/components/schemas/Destiny.DamageType"}]]},{"Name":"damageTypeHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the step provides a damage type, this will be the hash identifier used to look upthe damage type's DestinyDamageTypeDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDamageTypeDefinition"}]},{"Name":null,"Description":"If the step has requirements for activation (they almost always do, if nothingelse than for the Talent Grid's Progression to have reached a certain level),they will be defined here.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyNodeActivationRequirement"}]]},{"Name":"canActivateNextStep","Type":"boolean","Description":"There was a time when talent nodes could be activated multiple times, andthe effects of subsequent Steps would be compounded on each other, essentially\"upgrading\" the node.  We have moved away from this, but theoretically the capabilitystill exists.\r\nI continue to return this in case it is used in the future: if true andthis step is the current step in the node, you are allowed to activate the nodea second time to receive the benefits of the next step in the node, which will thenbecome the active step."},{"Name":"nextStepIndex","Type":"integer","Format":"int32","Description":"The stepIndex of the next step in the talent node, or -1 if this is the last step or ifthe next step to be chosen is random.\r\nThis doesn't really matter anymore unless canActivateNextStep begins to be used again."},{"Name":"isNextStepRandom","Type":"boolean","Description":"If true, the next step to be chosen is random, and if you're allowed to activate thenext step. (if canActivateNextStep = true)"},{"Name":"perkHashes","Type":"array","Description":"The list of hash identifiers for Perks (DestinySandboxPerkDefinition) that are appliedwhen this step is active.  Perks provide a variety of benefits and modifications - examineDestinySandboxPerkDefinition to learn more.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinySandboxPerkDefinition"}]},{"Name":"startProgressionBarAtProgress","Type":"integer","Format":"int32","Description":"When the Talent Grid's progression reaches this value, the circular \"progress bar\" thatsurrounds the talent node should be shown.\r\nThis also indicates the lower bound of saidprogress bar, with the upper bound being the progress required to reach activationRequirement.gridLevel. (at some point I should precalculate the upper bound and putit in the definition to save people time)"},{"Name":"statHashes","Type":"array","Description":"When the step provides stat benefits on the item or character, this is the list of hash identifiersfor stats (DestinyStatDefinition) that are provided.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":"affectsQuality","Type":"boolean","Description":"If this is true, the step affects the item's Quality in some way.  See DestinyInventoryItemDefinitionfor more information about the meaning of Quality.  I already made a joke about Zen and the Art ofMotorcycle Maintenance elsewhere in the documentation, so I will avoid doing it again.  Oops too late"},{"Name":null,"Description":"In Destiny 1, the Armory's Perk Filtering was driven by a concept of TalentNodeStepGroups: categorizationsof talent nodes based on their functionality.  While the Armory isn't a BNet-facing thing for now, andthe new Armory will need to account for Sockets rather than Talent Nodes, this categorization capabilityfeels useful enough to still keep around.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentNodeStepGroups"}]]},{"Name":"affectsLevel","Type":"boolean","Description":"If true, this step can affect the level of the item.  See DestinyInventoryItemDefintion for moreinformation about item levels and their effect on stats."},{"Name":"socketReplacements","Type":"array","Description":"If this step is activated, this will be a list of information used to replace socket itemswith new Plugs.  See DestinyInventoryItemDefinition for more information about sockets and plugs.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyNodeSocketReplaceResponse"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyNodeStepDefinition\r\n    {\r\npublic int stepIndex;\r\npublic int nodeStepHash;\r\npublic string interactionDescription;\r\npublic int damageTypeHash;\r\npublic bool canActivateNextStep;\r\npublic int nextStepIndex;\r\npublic bool isNextStepRandom;\r\npublic List<object> perkHashes;\r\npublic int startProgressionBarAtProgress;\r\npublic List<object> statHashes;\r\npublic bool affectsQuality;\r\npublic bool affectsLevel;\r\npublic List<object> socketReplacements;\r\n}\r\n}","Description":"This defines the properties of a \"Talent Node Step\".  When you see a talent nodein game, the actual visible properties that you see (its icon, description, theperks and stats it provides) are not provided by the Node itself, but rather by the currently active Step on the node.\r\nWhen a Talent Node is activated, the currently active step's benefits are conferredupon the item and character.\r\nThe currently active step on talent nodes are determined when an item is first instantiated.  Sometimes it is random, sometimes it is more deterministic(particularly when a node has only a single step).\r\nNote that, when dealing with Talent Node Steps, you must ensure that you havethe latest version of content.  stepIndex and nodeStepHash - two ways ofidentifying the step within a node - are both content version dependent, and thusare subject to change between content updates."},{"Namespace":"Destiny.Definitions","Name":"DestinyNodeSocketReplaceResponse","RawName":"Destiny.Definitions.DestinyNodeSocketReplaceResponse","Properties":[{"Name":"socketTypeHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the socket type to find amidst the item's sockets (the item to which thistalent grid is attached).  See DestinyInventoryItemDefinition.sockets.socketEntries to findthe socket type of sockets on the item in question.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Sockets.DestinySocketTypeDefinition"}]},{"Name":"plugItemHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the plug item that will be inserted into the socket found.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyNodeSocketReplaceResponse\r\n    {\r\npublic int socketTypeHash;\r\npublic int plugItemHash;\r\n}\r\n}","Description":"This is a bit of an odd duck.  Apparently, if talent nodes steps have this data, the game will go through onstep activation and alter the first Socket it finds on the item that has a type matching the givensocket type, inserting the indicated plug item."},{"Namespace":"Destiny.Definitions","Name":"DestinyDamageTypeDefinition","RawName":"Destiny.Definitions.DestinyDamageTypeDefinition","Properties":[{"Name":null,"Description":"The description of the damage type, icon etc...","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"transparentIconPath","Type":"string","Description":"A variant of the icon that is transparent and colorless."},{"Name":"showIcon","Type":"boolean","Description":"If TRUE, the game shows this damage type's icon.  Otherwise, it doesn't.  Whether you show it or not is up to you."},{"Name":null,"Description":"We have an enumeration for damage types for quick reference.  This is the current definition's damage type enum value.","allOf":[[{"$ref":"#/components/schemas/Destiny.DamageType"}]]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyDamageTypeDefinition\r\n    {\r\npublic string transparentIconPath;\r\npublic bool showIcon;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"All damage types that are possible in the game are defined here, along with localized info and icons as needed."},{"Namespace":"Destiny.Definitions.Lore","Name":"DestinyLoreDefinition","RawName":"Destiny.Definitions.Lore.DestinyLoreDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"subtitle","Type":"string"},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Lore\r\n{\r\n    public class DestinyLoreDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic string subtitle;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"These are definitions for in-game \"Lore,\" meant to be narrative enhancements of the game experience.\r\nDestinyInventoryItemDefinitions for interesting items point to these definitions, but nothing's stoppingyou from scraping all of these and doing something cool with them.  If they end up having cool data."},{"Namespace":"Destiny.Definitions","Name":"DestinyTalentNodeExclusiveSetDefinition","RawName":"Destiny.Definitions.DestinyTalentNodeExclusiveSetDefinition","Properties":[{"Name":"nodeIndexes","Type":"array","Description":"The list of node indexes for the exclusive set.  Historically, these were indexes.I would have liked to replace this with nodeHashes for consistency, but it's way too late for that.(9:09 PM, he's right!)","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyTalentNodeExclusiveSetDefinition\r\n    {\r\npublic List<object> nodeIndexes;\r\n}\r\n}","Description":"The list of indexes into the Talent Grid's \"nodes\" property for nodes in thisexclusive set. (See DestinyTalentNodeDefinition.nodeIndex)"},{"Namespace":"Destiny.Definitions","Name":"DestinyTalentExclusiveGroup","RawName":"Destiny.Definitions.DestinyTalentExclusiveGroup","Properties":[{"Name":"groupHash","Type":"integer","Format":"uint32","Description":"The identifier for this exclusive group.  Only guaranteed unique within the talent grid, not globally."},{"Name":"loreHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If this group has an associated piece of lore to show next to it, this will be the identifier for that DestinyLoreDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Lore.DestinyLoreDefinition"}]},{"Name":"nodeHashes","Type":"array","Description":"A quick reference of the talent nodes that are part of this group, by their Talent Node hashes.(See DestinyTalentNodeDefinition.nodeHash)","items":[{"type":"integer","format":"uint32"}]},{"Name":"opposingGroupHashes","Type":"array","Description":"A quick reference of Groups whose nodes will be deactivated if any node in this group is activated.","items":[{"type":"integer","format":"uint32"}]},{"Name":"opposingNodeHashes","Type":"array","Description":"A quick reference of Nodes that will be deactivated if any node in this group is activated, bytheir Talent Node hashes. (See DestinyTalentNodeDefinition.nodeHash)","items":[{"type":"integer","format":"uint32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyTalentExclusiveGroup\r\n    {\r\npublic int groupHash;\r\npublic int loreHash;\r\npublic List<object> nodeHashes;\r\npublic List<object> opposingGroupHashes;\r\npublic List<object> opposingNodeHashes;\r\n}\r\n}","Description":"As of Destiny 2, nodes can exist as part of \"Exclusive Groups\".  These differ from exclusive sets in that,within the group, many nodes can be activated.  But the act of activating any node in the group will cause \"opposing\" nodes(nodes in groups that are not allowed to be activated at the same time as this group) to deactivate."},{"Namespace":"Destiny.Definitions","Name":"DestinyTalentNodeCategory","RawName":"Destiny.Definitions.DestinyTalentNodeCategory","Properties":[{"Name":"identifier","Type":"string","Description":"Mostly just for debug purposes, but if you find it useful you can have it.This is BNet's manually created identifier for this category."},{"Name":"isLoreDriven","Type":"boolean","Description":"If true, we found the localized content in a related DestinyLoreDefinitioninstead of local BNet localization files.  This is mostly for ease of my own future investigations."},{"Name":null,"Description":"Will contain at least the \"name\", which will be the title of the category.We will likely not have description and an icon yet, but I'm going to keep my optionsopen.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"nodeHashes","Type":"array","Description":"The set of all hash identifiers for Talent Nodes (DestinyTalentNodeDefinition)in this Talent Grid that are part of this Category.","items":[{"type":"integer","format":"uint32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyTalentNodeCategory\r\n    {\r\npublic string identifier;\r\npublic bool isLoreDriven;\r\npublic List<object> nodeHashes;\r\n}\r\n}","Description":"An artificial construct provided by Bungie.Net, where we attempt to group talent nodesby functionality.\r\nThis is a single set of references to Talent Nodes that share a commontrait or purpose."},{"Namespace":"Destiny.Definitions","Name":"DestinyItemPerkEntryDefinition","RawName":"Destiny.Definitions.DestinyItemPerkEntryDefinition","Properties":[{"Name":"requirementDisplayString","Type":"string","Description":"If this perk is not active, this is the string to show for whyit's not providing its benefits."},{"Name":"perkHash","Type":"integer","Format":"uint32","Description":"A hash identifier for the DestinySandboxPerkDefinition being provided on the item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinySandboxPerkDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemPerkEntryDefinition\r\n    {\r\npublic string requirementDisplayString;\r\npublic int perkHash;\r\n}\r\n}","Description":"An intrinsic perk on an item, and the requirements for it to be activated."},{"Namespace":"Destiny.Definitions.Animations","Name":"DestinyAnimationReference","RawName":"Destiny.Definitions.Animations.DestinyAnimationReference","Properties":[{"Name":"animName","Type":"string"},{"Name":"animIdentifier","Type":"string"},{"Name":"path","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Animations\r\n{\r\n    public class DestinyAnimationReference\r\n    {\r\npublic string animName;\r\npublic string animIdentifier;\r\npublic string path;\r\n}\r\n}"},{"Namespace":"Links","Name":"HyperlinkReference","RawName":"Links.HyperlinkReference","Properties":[{"Name":"title","Type":"string"},{"Name":"url","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Links\r\n{\r\n    public class HyperlinkReference\r\n    {\r\npublic string title;\r\npublic string url;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyItemCategoryDefinition","RawName":"Destiny.Definitions.DestinyItemCategoryDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"visible","Type":"boolean","Description":"If True, this category should be visible in UI.  Sometimes we make categories that wedon't think are interesting externally.  It's up to you if you want to skip on showing them."},{"Name":"shortTitle","Type":"string","Description":"A shortened version of the title.  The reason why we have this is because the Armory in Germanhad titles that were too long to display in our UI, so these were localized abbreviated versionsof those categories.  The property still exists today, even though the Armory doesn't exist for D2... yet."},{"Name":"itemTypeRegex","Type":"string","Description":"The janky regular expression we used against the item type to try and discern whetherthe item belongs to this category."},{"Name":"itemTypeRegexNot","Type":"string","Description":"If the item type matches this janky regex, it does *not* belong to this category."},{"Name":"originBucketIdentifier","Type":"string","Description":"If the item belongs to this bucket, it does belong to this category."},{"Name":null,"Description":"If an item belongs to this category, it will also receive this item type.This is now how DestinyItemType is populated for items: it used to be an even jankier process,but that's a story that requires more alcohol.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyItemType"}]]},{"Name":null,"Description":"If an item belongs to this category, it will also receive this subtype enum value.\r\nI know what you're thinking - what if it belongs to multiple categories that provide sub-types?\r\nThe last one processed wins, as is the case with all of these \"grant\" enums.  Now you can seeone reason why we moved away from these enums... but they're so convenient when they work, aren't they?","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyItemSubType"}]]},{"Name":null,"Description":"If an item belongs to this category, it will also get this class restriction enum value.\r\nSee the other \"grant\"-prefixed properties on this definition for my color commentary.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyClass"}]]},{"Name":"groupedCategoryHashes","Type":"array","Description":"If this category is a \"parent\" category of other categories, those children will have theirhashes listed in rendering order here, and can be looked up using these hashes againstDestinyItemCategoryDefinition.\r\nIn this way, you can build up a visual hierarchy of item categories.  That's what we did,and you can do it too.  I believe in you.  Yes, you, Carl.\r\n(I hope someone named Carl reads this someday)","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyItemCategoryDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyItemCategoryDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic bool visible;\r\npublic string shortTitle;\r\npublic string itemTypeRegex;\r\npublic string itemTypeRegexNot;\r\npublic string originBucketIdentifier;\r\npublic List<object> groupedCategoryHashes;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"In an attempt to categorize items by type, usage, and other interesting properties, we createdDestinyItemCategoryDefinition: information about types that is assembled using a set of heuristicsthat examine the properties of an item such as what inventory bucket it's in, its item type name,and whether it has or is missing certain blocks of data.\r\nThis heuristic is imperfect, however.  If you find an item miscategorized, let us know on the BungieAPI forums!\r\nWe then populate all of the categories that we think an item belongs to in its DestinyInventoryItemDefinition.itemCategoryHashes property.  You can use that to provideyour own custom item filtering, sorting, aggregating... go nuts on it!  And let us know if yousee more categories that you wish would be added!"},{"Namespace":"GroupsV2","Name":"GroupUserBase","RawName":"GroupsV2.GroupUserBase","Properties":[{"Name":"groupId","Type":"integer","Format":"int64"},{"Name":"destinyUserInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"bungieNetUserInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"joinDate","Type":"string","Format":"date-time"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupUserBase\r\n    {\r\npublic int groupId;\r\npublic User.UserInfoCard destinyUserInfo;\r\npublic User.UserInfoCard bungieNetUserInfo;\r\npublic string joinDate;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupMember","RawName":"GroupsV2.GroupMember","Properties":[{"Name":"memberType","$ref":"#/components/schemas/GroupsV2.RuntimeGroupMemberType"},{"Name":"isOnline","Type":"boolean"},{"Name":"groupId","Type":"integer","Format":"int64"},{"Name":"destinyUserInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"bungieNetUserInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"joinDate","Type":"string","Format":"date-time"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupMember\r\n    {\r\npublic GroupsV2.RuntimeGroupMemberType memberType;\r\npublic bool isOnline;\r\npublic int groupId;\r\npublic User.UserInfoCard destinyUserInfo;\r\npublic User.UserInfoCard bungieNetUserInfo;\r\npublic string joinDate;\r\n}\r\n}"},{"Namespace":"GroupsV2","Name":"GroupPotentialMember","RawName":"GroupsV2.GroupPotentialMember","Properties":[{"Name":"potentialStatus","$ref":"#/components/schemas/GroupsV2.GroupPotentialMemberStatus"},{"Name":"groupId","Type":"integer","Format":"int64"},{"Name":"destinyUserInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"bungieNetUserInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"joinDate","Type":"string","Format":"date-time"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace GroupsV2\r\n{\r\n    public class GroupPotentialMember\r\n    {\r\npublic GroupsV2.GroupPotentialMemberStatus potentialStatus;\r\npublic int groupId;\r\npublic User.UserInfoCard destinyUserInfo;\r\npublic User.UserInfoCard bungieNetUserInfo;\r\npublic string joinDate;\r\n}\r\n}"},{"Namespace":"Tags.Models.Contracts","Name":"TagResponse","RawName":"Tags.Models.Contracts.TagResponse","Properties":[{"Name":"tagText","Type":"string"},{"Name":"ignoreStatus","$ref":"#/components/schemas/Ignores.IgnoreResponse"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Tags.Models.Contracts\r\n{\r\n    public class TagResponse\r\n    {\r\npublic string tagText;\r\npublic Ignores.IgnoreResponse ignoreStatus;\r\n}\r\n}"},{"Namespace":"Forum","Name":"PollResponse","RawName":"Forum.PollResponse","Properties":[{"Name":"topicId","Type":"integer","Format":"int64"},{"Name":"results","Type":"array","items":[{"$ref":"#/components/schemas/Forum.PollResult"}]},{"Name":"totalVotes","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Forum\r\n{\r\n    public class PollResponse\r\n    {\r\npublic int topicId;\r\npublic List<object> results;\r\npublic int totalVotes;\r\n}\r\n}"},{"Namespace":"Forum","Name":"PollResult","RawName":"Forum.PollResult","Properties":[{"Name":"answerText","Type":"string"},{"Name":"answerSlot","Type":"integer","Format":"int32"},{"Name":"lastVoteDate","Type":"string","Format":"date-time"},{"Name":"votes","Type":"integer","Format":"int32"},{"Name":"requestingUserVoted","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Forum\r\n{\r\n    public class PollResult\r\n    {\r\npublic string answerText;\r\npublic int answerSlot;\r\npublic string lastVoteDate;\r\npublic int votes;\r\npublic bool requestingUserVoted;\r\n}\r\n}"},{"Namespace":"Forum","Name":"ForumRecruitmentDetail","RawName":"Forum.ForumRecruitmentDetail","Properties":[{"Name":"topicId","Type":"integer","Format":"int64"},{"Name":"microphoneRequired","Type":"boolean"},{"Name":"intensity","$ref":"#/components/schemas/Forum.ForumRecruitmentIntensityLabel"},{"Name":"tone","$ref":"#/components/schemas/Forum.ForumRecruitmentToneLabel"},{"Name":"approved","Type":"boolean"},{"Name":"conversationId","Type":"integer","Format":"int64","Nullable":true},{"Name":"playerSlotsTotal","Type":"integer","Format":"int32"},{"Name":"playerSlotsRemaining","Type":"integer","Format":"int32"},{"Name":"Fireteam","Type":"array","items":[{"$ref":"#/components/schemas/User.GeneralUser"}]},{"Name":"kickedPlayerIds","Type":"array","items":[{"type":"integer","format":"int64"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Forum\r\n{\r\n    public class ForumRecruitmentDetail\r\n    {\r\npublic int topicId;\r\npublic bool microphoneRequired;\r\npublic Forum.ForumRecruitmentIntensityLabel intensity;\r\npublic Forum.ForumRecruitmentToneLabel tone;\r\npublic bool approved;\r\npublic int conversationId;\r\npublic int playerSlotsTotal;\r\npublic int playerSlotsRemaining;\r\npublic List<object> Fireteam;\r\npublic List<object> kickedPlayerIds;\r\n}\r\n}"},{"Namespace":"Messages.Responses","Name":"SaveMessageResult","RawName":"Messages.Responses.SaveMessageResult","Properties":[{"Name":"conversationId","Type":"integer","Format":"int64"},{"Name":"messageId","Type":"integer","Format":"int64"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Messages.Responses\r\n{\r\n    public class SaveMessageResult\r\n    {\r\npublic int conversationId;\r\npublic int messageId;\r\n}\r\n}"},{"Namespace":"Destiny.Config","Name":"DestinyManifest","RawName":"Destiny.Config.DestinyManifest","Properties":[{"Name":"version","Type":"string"},{"Name":"mobileAssetContentPath","Type":"string"},{"Name":"mobileGearAssetDataBases","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.Config.GearAssetDataBaseDefinition"}]},{"Name":"mobileWorldContentPaths","Type":"object","additionalProperties":[{"type":"string"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"mobileClanBannerDatabasePath","Type":"string"},{"Name":"mobileGearCDN","Type":"object","additionalProperties":[{"type":"string"}],"x-dictionary-key":[{"type":"string"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Config\r\n{\r\n    public class DestinyManifest\r\n    {\r\npublic string version;\r\npublic string mobileAssetContentPath;\r\npublic List<object> mobileGearAssetDataBases;\r\npublic string mobileClanBannerDatabasePath;\r\n}\r\n}","Description":"DestinyManifest is the external-facing contract for just the properties needed by those calling the Destiny Platform."},{"Namespace":"Destiny.Config","Name":"GearAssetDataBaseDefinition","RawName":"Destiny.Config.GearAssetDataBaseDefinition","Properties":[{"Name":"version","Type":"integer","Format":"int32"},{"Name":"path","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Config\r\n{\r\n    public class GearAssetDataBaseDefinition\r\n    {\r\npublic int version;\r\npublic string path;\r\n}\r\n}"},{"Namespace":"Destiny.Responses","Name":"DestinyProfileResponse","RawName":"Destiny.Responses.DestinyProfileResponse","Properties":[{"Name":null,"Description":"Recent, refundable purchases you have made from vendors.  When will you use it?  Couldn't say...\r\nCOMPONENT TYPE: VendorReceipts","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyVendorReceiptsComponent"}]],"x-destiny-component-type-dependency":"VendorReceipts"},{"Name":null,"Description":"The profile-level inventory of the Destiny Profile.\r\nCOMPONENT TYPE: ProfileInventories","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyInventoryComponent"}]],"x-destiny-component-type-dependency":"ProfileInventories"},{"Name":null,"Description":"The profile-level currencies owned by the Destiny Profile.\r\nCOMPONENT TYPE: ProfileCurrencies","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyInventoryComponent"}]],"x-destiny-component-type-dependency":"ProfileCurrencies"},{"Name":null,"Description":"The basic information about the Destiny Profile (formerly \"Account\").\r\nCOMPONENT TYPE: Profiles","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyProfileComponent"}]],"x-destiny-component-type-dependency":"Profiles"},{"Name":null,"Description":"Items available from Kiosks that are available Profile-wide (i.e. across all characters)\r\nThis component returns information about what Kiosk items are available to you on a *Profile*level.  It is theoretically possible for Kiosks to have items gated by specific Character as well.If you ever have those, you will find them on the characterKiosks property.\r\nCOMPONENT TYPE: Kiosks","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyKiosksComponent"}]],"x-destiny-component-type-dependency":"Kiosks"},{"Name":null,"Description":"Basic information about each character, keyed by the CharacterId.\r\nCOMPONENT TYPE: Characters","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyCharacterComponent"}]],"x-destiny-component-type-dependency":"Characters"},{"Name":null,"Description":"The character-level non-equipped inventory items, keyed by the Character's Id.\r\nCOMPONENT TYPE: CharacterInventories","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyInventoryComponent"}]],"x-destiny-component-type-dependency":"CharacterInventories"},{"Name":null,"Description":"Character-level progression data, keyed by the Character's Id.\r\nCOMPONENT TYPE: CharacterProgressions","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyCharacterProgressionComponent"}]],"x-destiny-component-type-dependency":"CharacterProgressions"},{"Name":null,"Description":"Character rendering data - a minimal set of info needed to render a character in 3D - keyed by the Character's Id.\r\nCOMPONENT TYPE: CharacterRenderData","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyCharacterRenderComponent"}]],"x-destiny-component-type-dependency":"CharacterRenderData"},{"Name":null,"Description":"Character activity data - the activities available to this character and its status, keyed by the Character's Id.\r\nCOMPONENT TYPE: CharacterActivities","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyCharacterActivitiesComponent"}]],"x-destiny-component-type-dependency":"CharacterActivities"},{"Name":null,"Description":"The character's equipped items, keyed by the Character's Id.\r\nCOMPONENT TYPE: CharacterEquipment","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyInventoryComponent"}]],"x-destiny-component-type-dependency":"CharacterEquipment"},{"Name":null,"Description":"Items available from Kiosks that are available to a specific character as opposed to the account as a whole.It must be combined with data from the profileKiosks property to get a full picture of the character's availableitems to check out of a kiosk.\r\nThis component returns information about what Kiosk items are available to you on a *Character*level.  Usually, kiosk items will be earned for the entire Profile (all characters) at once.To find those, look in the profileKiosks property.\r\nCOMPONENT TYPE: Kiosks","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyKiosksComponent"}]],"x-destiny-component-type-dependency":"Kiosks"},{"Name":null,"Description":"Information about instanced items across all returned characters, keyed by the item's instance ID.\r\nCOMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]","allOf":[[{"$ref":"#/components/schemas/DestinyItemComponentSetOfint64"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Responses\r\n{\r\n    public class DestinyProfileResponse\r\n    {\r\n}\r\n}","Description":"The response for GetDestinyProfile, with components for character and item-level data."},{"Namespace":"Destiny.Entities.Profiles","Name":"DestinyVendorReceiptsComponent","RawName":"Destiny.Entities.Profiles.DestinyVendorReceiptsComponent","Properties":[{"Name":"receipts","Type":"array","Description":"The receipts for refundable purchases made at a vendor.","items":[{"$ref":"#/components/schemas/Destiny.Vendors.DestinyVendorReceipt"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Profiles\r\n{\r\n    public class DestinyVendorReceiptsComponent\r\n    {\r\npublic List<object> receipts;\r\n}\r\n}","Description":"For now, this isn't used for much: it's a record of the recent refundable purchasesthat the user has made.  In the future, it could be used for providing refunds/buyback via the API.Wouldn't that be fun?"},{"Namespace":"Destiny.Vendors","Name":"DestinyVendorReceipt","RawName":"Destiny.Vendors.DestinyVendorReceipt","Properties":[{"Name":"currencyPaid","Type":"array","Description":"The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]},{"Name":null,"Description":"The item that was received, and its quantity.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]]},{"Name":"licenseUnlockHash","Type":"integer","Format":"uint32","Description":"The unlock flag used to determine whether you still have the purchased item."},{"Name":"purchasedByCharacterId","Type":"integer","Format":"int64","Description":"The ID of the character who made the purchase."},{"Name":null,"Description":"Whether you can get a refund, and what happens in order for the refund to be received.See the DestinyVendorItemRefundPolicy enum for details.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyVendorItemRefundPolicy"}]]},{"Name":"sequenceNumber","Type":"integer","Format":"int32","Description":"The identifier of this receipt."},{"Name":"timeToExpiration","Type":"integer","Format":"int64","Description":"The seconds since epoch at which this receipt is rendered invalid."},{"Name":"expiresOn","Type":"string","Format":"date-time","Description":"The date at which this receipt is rendered invalid."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Vendors\r\n{\r\n    public class DestinyVendorReceipt\r\n    {\r\npublic List<object> currencyPaid;\r\npublic int licenseUnlockHash;\r\npublic int purchasedByCharacterId;\r\npublic int sequenceNumber;\r\npublic int timeToExpiration;\r\npublic string expiresOn;\r\n}\r\n}","Description":"If a character purchased an item that is refundable, a Vendor Receipt will be created on the user's Destiny Profile.These expire after a configurable period of time, but until then can be used to get refunds on items.BNet does not provide the ability to refund a purchase *yet*, but you know."},{"Namespace":"Components","Name":"ComponentResponse","RawName":"Components.ComponentResponse","Properties":[{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Components\r\n{\r\n    public class ComponentResponse\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}","Description":"The base class for any component-returning object that may need to indicateinformation about the state of the component being returned."},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyVendorReceiptsComponent","RawName":"SingleComponentResponseOfDestinyVendorReceiptsComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Profiles.DestinyVendorReceiptsComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyVendorReceiptsComponent\r\n    {\r\npublic Destiny.Entities.Profiles.DestinyVendorReceiptsComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Inventory","Name":"DestinyInventoryComponent","RawName":"Destiny.Entities.Inventory.DestinyInventoryComponent","Properties":[{"Name":"items","Type":"array","Description":"The items in this inventory.  If you care to bucket them, use the item's bucketHash property to groupthem.","items":[{"$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemComponent"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Inventory\r\n{\r\n    public class DestinyInventoryComponent\r\n    {\r\npublic List<object> items;\r\n}\r\n}","Description":"A list of minimal information for items in an inventory: be it a character's inventory, or a Profile's inventory.(Note that the Vault is a collection of inventory buckets in the Profile's inventory)\r\nInventory Items returned here are in a flat list, but importantly they have a bucketHash property thatindicates the specific inventory bucket that is holding them.  These buckets constitute things like the separatesections of the Vault, the user's inventory slots, etc.  See DestinyInventoryBucketDefinition for more info."},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemComponent","RawName":"Destiny.Entities.Items.DestinyItemComponent","Properties":[{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The identifier for the item's definition, which is where most of the useful static information for the itemcan be found.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"itemInstanceId","Type":"integer","Format":"int64","Nullable":true,"Description":"If the item is instanced, it will have an instance ID.  Lack of an instance ID impliesthat the item has no distinct local qualities aside from stack size."},{"Name":"quantity","Type":"integer","Format":"int32","Description":"The quantity of the item in this stack.  Note that Instanced items cannot stack.If an instanced item, this value will always be 1 (as the stack has exactly one item in it)"},{"Name":null,"Description":"If the item is bound to a location, it will be specified in this enum.","allOf":[[{"$ref":"#/components/schemas/Destiny.ItemBindStatus"}]]},{"Name":null,"Description":"An easy reference for where the item is located.  Redundant if you got the itemfrom an Inventory, but useful when making detail calls on specific items.","allOf":[[{"$ref":"#/components/schemas/Destiny.ItemLocation"}]]},{"Name":"bucketHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the specific inventory bucket in which the item is located.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryBucketDefinition"}]},{"Name":null,"Description":"If there is a known error state that would cause this item to not be transferable, this Flags enum willindicate all of those error states.  Otherwise, it will be 0 (CanTransfer).","allOf":[[{"$ref":"#/components/schemas/Destiny.TransferStatuses"}]]},{"Name":"lockable","Type":"boolean","Description":"If the item can be locked, this will indicate that state."},{"Name":null,"Description":"A flags enumeration indicating the states of the item: whether it's tracked or locked for example.","allOf":[[{"$ref":"#/components/schemas/Destiny.ItemState"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemComponent\r\n    {\r\npublic int itemHash;\r\npublic int itemInstanceId;\r\npublic int quantity;\r\npublic int bucketHash;\r\npublic bool lockable;\r\n}\r\n}","Description":"The base item component, filled with properties that are generally useful to know in any item request or thatdon't feel worthwhile to put in their own component."},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyInventoryComponent","RawName":"SingleComponentResponseOfDestinyInventoryComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Inventory.DestinyInventoryComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyInventoryComponent\r\n    {\r\npublic Destiny.Entities.Inventory.DestinyInventoryComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Profiles","Name":"DestinyProfileComponent","RawName":"Destiny.Entities.Profiles.DestinyProfileComponent","Properties":[{"Name":null,"Description":"If you need to render the Profile (their platform name, icon, etc...) somewhere, this property containsthat information.","allOf":[[{"$ref":"#/components/schemas/User.UserInfoCard"}]]},{"Name":"dateLastPlayed","Type":"string","Format":"date-time","Description":"The last time the user played with any character on this Profile."},{"Name":null,"Description":"If you want to know what expansions they own, this will contain that data.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyGameVersions"}]]},{"Name":"characterIds","Type":"array","Description":"A list of the character IDs, for further querying on your part.","items":[{"type":"integer","format":"int64"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Profiles\r\n{\r\n    public class DestinyProfileComponent\r\n    {\r\npublic string dateLastPlayed;\r\npublic List<object> characterIds;\r\n}\r\n}","Description":"The most essential summary information about a Profile (in Destiny 1, we called these \"Accounts\")."},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyProfileComponent","RawName":"SingleComponentResponseOfDestinyProfileComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Profiles.DestinyProfileComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyProfileComponent\r\n    {\r\npublic Destiny.Entities.Profiles.DestinyProfileComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Components.Kiosks","Name":"DestinyKiosksComponent","RawName":"Destiny.Components.Kiosks.DestinyKiosksComponent","Properties":[{"Name":"kioskItems","Type":"object","Description":"A dictionary keyed by the Kiosk Vendor's hash identifier (use it to look up the DestinyVendorDefinitionfor the relevant kiosk vendor), and whose value is a list of all the items that the user can \"see\" inthe Kiosk, and any other interesting metadata.","additionalProperties":[{"type":"array","items":{"$ref":"#/components/schemas/Destiny.Components.Kiosks.DestinyKioskItem"}}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Components.Kiosks\r\n{\r\n    public class DestinyKiosksComponent\r\n    {\r\n}\r\n}","Description":"A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on whether you havealready acquired that item before.\r\nThis component returns information about what Kiosk items are available to you on a *Profile*level.  It is theoretically possible for Kiosks to have items gated by specific Character as well.If you ever have those, you will find them on the individual character's DestinyCharacterKiosksComponent.\r\nNote that, because this component returns vendorItemIndexes (that is to say, indexes into the Kiosk Vendor'sitemList property), these results are necessarily content version dependent.  Make sure that you havethe latest version of the content manifest databases before using this data."},{"Namespace":"Destiny.Components.Kiosks","Name":"DestinyKioskItem","RawName":"Destiny.Components.Kiosks.DestinyKioskItem","Properties":[{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the item in the related DestinyVendorDefintion's itemList property, representingthe sale."},{"Name":"canAcquire","Type":"boolean","Description":"If true, the user can not only see the item, but they can acquire it.  It is possible that a usercan see a kiosk item and not be able to acquire it."},{"Name":"failureIndexes","Type":"array","Description":"Indexes into failureStrings for the Vendor, indicating the reasons why it failed if any.","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Components.Kiosks\r\n{\r\n    public class DestinyKioskItem\r\n    {\r\npublic int index;\r\npublic bool canAcquire;\r\npublic List<object> failureIndexes;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyKiosksComponent","RawName":"SingleComponentResponseOfDestinyKiosksComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Components.Kiosks.DestinyKiosksComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyKiosksComponent\r\n    {\r\npublic Destiny.Components.Kiosks.DestinyKiosksComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Characters","Name":"DestinyCharacterComponent","RawName":"Destiny.Entities.Characters.DestinyCharacterComponent","Properties":[{"Name":"membershipId","Type":"integer","Format":"int64","Description":"Every Destiny Profile has a membershipId.  This is provided on the character as well for convenience."},{"Name":null,"Description":"membershipType tells you the platform on which the character plays.Examine the BungieMembershipType enumeration for possible values.","allOf":[[{"$ref":"#/components/schemas/BungieMembershipType"}]]},{"Name":"characterId","Type":"integer","Format":"int64","Description":"The unique identifier for the character."},{"Name":"dateLastPlayed","Type":"string","Format":"date-time","Description":"The last date that the user played Destiny."},{"Name":"minutesPlayedThisSession","Type":"integer","Format":"int64","Description":"If the user is currently playing, this is how long they've been playing."},{"Name":"minutesPlayedTotal","Type":"integer","Format":"int64","Description":"If this value is 525,600, then they played Destiny for a year.  Or they're a very dedicated Rent fan.Note that this includes idle time, not just time spent actually in activities shooting things."},{"Name":"light","Type":"integer","Format":"int32","Description":"The user's calculated \"Light Level\".  Light level is an indicator of your power that mostly matters inthe end game, once you've reached the maximum character level: it's a level that's dependent on the averageAttack/Defense power of your items."},{"Name":"stats","Type":"object","Description":"Your character's stats, such as Agility, Resilience, etc... *not* historical stats.\r\nYou'll have to call a different endpoint for those.","additionalProperties":[{"type":"integer","format":"int32"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"raceHash","Type":"integer","Format":"uint32","Description":"Use this hash to look up the character's DestinyRaceDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyRaceDefinition"}]},{"Name":"genderHash","Type":"integer","Format":"uint32","Description":"Use this hash to look up the character's DestinyGenderDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyGenderDefinition"}]},{"Name":"classHash","Type":"integer","Format":"uint32","Description":"Use this hash to look up the character's DestinyClassDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyClassDefinition"}]},{"Name":null,"Description":"Mostly for historical purposes at this point, this is an enumeration for the character's race.\r\nIt'll be preferable in the general case to look up the related definition: but for some people thiswas too convenient to remove.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyRace"}]]},{"Name":null,"Description":"Mostly for historical purposes at this point, this is an enumeration for the character's class.\r\nIt'll be preferable in the general case to look up the related definition: but for some people thiswas too convenient to remove.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyClass"}]]},{"Name":null,"Description":"Mostly for historical purposes at this point, this is an enumeration for the character's Gender.\r\nIt'll be preferable in the general case to look up the related definition: but for some people thiswas too convenient to remove.  And yeah, it's an enumeration and not a boolean.  Fight me.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyGender"}]]},{"Name":"emblemPath","Type":"string","Description":"A shortcut path to the user's currently equipped emblem image.  If you're just showing summaryinfo for a user, this is more convenient than examining their equipped emblem and looking up the definition."},{"Name":"emblemBackgroundPath","Type":"string","Description":"A shortcut path to the user's currently equipped emblem background image.  If you're just showing summaryinfo for a user, this is more convenient than examining their equipped emblem and looking up the definition."},{"Name":"emblemHash","Type":"integer","Format":"uint32","Description":"The hash of the currently equipped emblem for the user.  Can be used to look up the DestinyInventoryItemDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":null,"Description":"The progression that indicates your character's level.  Not their light level, but theircharacter level: you know, the thing you max out a couple hours in and then ignore forthe sake of light level.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyProgression"}]]},{"Name":"baseCharacterLevel","Type":"integer","Format":"int32","Description":"The \"base\" level of your character, not accounting for any light level."},{"Name":"percentToNextLevel","Type":"number","Format":"float","Description":"A number between 0 and 100, indicating the whole and fractional % remaining to get tothe next character level."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Characters\r\n{\r\n    public class DestinyCharacterComponent\r\n    {\r\npublic int membershipId;\r\npublic int characterId;\r\npublic string dateLastPlayed;\r\npublic int minutesPlayedThisSession;\r\npublic int minutesPlayedTotal;\r\npublic int light;\r\npublic int raceHash;\r\npublic int genderHash;\r\npublic int classHash;\r\npublic string emblemPath;\r\npublic string emblemBackgroundPath;\r\npublic int emblemHash;\r\npublic int baseCharacterLevel;\r\npublic decimal percentToNextLevel;\r\n}\r\n}","Description":"This component contains base properties of the character.  You'll probably want to always request this component,but hey you do you."},{"Namespace":"Destiny.Definitions","Name":"DestinyRaceDefinition","RawName":"Destiny.Definitions.DestinyRaceDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":null,"Description":"An enumeration defining the existing, known Races/Species for player characters.  This valuewill be the enum value matching this definition.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyRace"}]]},{"Name":"genderedRaceNames","Type":"object","Description":"A localized string referring to the singular form of the Race's name when referred to in gendered form.Keyed by the DestinyGender.","additionalProperties":[{"type":"string"}],"x-dictionary-key":[{"$ref":"#/components/schemas/Destiny.DestinyGender"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyRaceDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"In Destiny, \"Races\" are really more like \"Species\".  Sort of.  I mean, are the Awoken a separate species fromhumans?  I'm not sure.  But either way, they're defined here.  You'll see Exo, Awoken, and Human as examplesof these Species.  Players will choose one for their character."},{"Namespace":"Destiny.Definitions","Name":"DestinyGenderDefinition","RawName":"Destiny.Definitions.DestinyGenderDefinition","Properties":[{"Name":null,"Description":"This is a quick reference enumeration for all of the currently defined Genders.  We use the enumerationfor quicker lookups in related data, like DestinyClassDefinition.genderedClassNames.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyGender"}]]},{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyGenderDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Gender is a social construct, and as such we have definitions for Genders.  Right now there happensto only be two, but we'll see what the future holds."},{"Namespace":"Destiny.Definitions","Name":"DestinyClassDefinition","RawName":"Destiny.Definitions.DestinyClassDefinition","Properties":[{"Name":null,"Description":"In Destiny 1, we added a convenience Enumeration for referring to classes.  We've kept it,though mostly for posterity.  This is the enum value for this definition's class.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyClass"}]]},{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"genderedClassNames","Type":"object","Description":"A localized string referring to the singular form of the Class's name when referred to in gendered form.Keyed by the DestinyGender.","additionalProperties":[{"type":"string"}],"x-dictionary-key":[{"$ref":"#/components/schemas/Destiny.DestinyGender"}]},{"Name":"mentorVendorHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the Class has a Mentor (all classes *should*), this will be the hash identifier for that Vendor if you care.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyClassDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic int mentorVendorHash;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Defines a Character Class in Destiny 2.  These are types of characters you can play, likeTitan, Warlock, and Hunter."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyCharacterComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyCharacterComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"Characters","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyCharacterComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyInventoryComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyInventoryComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Entities.Inventory.DestinyInventoryComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyInventoryComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Characters","Name":"DestinyCharacterProgressionComponent","RawName":"Destiny.Entities.Characters.DestinyCharacterProgressionComponent","Properties":[{"Name":"progressions","Type":"object","Description":"A Dictionary of all known progressions for the Character, keyed by the Progression's hash.\r\nNot all progressions have user-facing data, but those who do will have that data contained in the DestinyProgressionDefinition.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.DestinyProgression"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition"}]},{"Name":"factions","Type":"object","Description":"A dictionary of all known Factions, keyed by the Faction's hash.  It contains data about this character'sstatus with the faction.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Progression.DestinyFactionProgression"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyFactionDefinition"}]},{"Name":"milestones","Type":"object","Description":"Milestones are related to the simple progressions shown in the game, but return additional andhopefully helpful information for users about the specifics of the Milestone's status.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestone"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneDefinition"}]},{"Name":"quests","Type":"array","Description":"If the user has any active quests, the quests' statuses will be returned here.\r\nNote that quests have been largely supplanted by Milestones, but that doesn't mean thatthey won't make a comeback independent of milestones at some point.","items":[{"$ref":"#/components/schemas/Destiny.Quests.DestinyQuestStatus"}]},{"Name":"uninstancedItemObjectives","Type":"object","Description":"Sometimes, you have items in your inventory that don't have instances, but still haveObjective information.  This provides you that objective information for uninstanceditems.  \r\nThis dictionary is keyed by the item's hash: which you can use to look up thename and description for the overall task(s) implied by the objective.The value is the list of objectives for this item, and their statuses.","additionalProperties":[{"type":"array","items":{"$ref":"#/components/schemas/Destiny.Quests.DestinyObjectiveProgress"}}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Characters\r\n{\r\n    public class DestinyCharacterProgressionComponent\r\n    {\r\npublic List<object> quests;\r\n}\r\n}","Description":"This component returns anything that could be considered \"Progression\" on a user: datawhere the user is gaining levels, reputation, completions, rewards, etc..."},{"Namespace":"Destiny.Progression","Name":"DestinyFactionProgression","RawName":"Destiny.Progression.DestinyFactionProgression","Properties":[{"Name":"factionHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the Faction related to this progression.  Use it to look up the DestinyFactionDefinitionfor more rendering info.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyFactionDefinition"}]},{"Name":"progressionHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the Progression in question.  Use it to look up the DestinyProgressionDefinition in static data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyProgressionDefinition"}]},{"Name":"dailyProgress","Type":"integer","Format":"int32","Description":"The amount of progress earned today for this progression."},{"Name":"dailyLimit","Type":"integer","Format":"int32","Description":"If this progression has a daily limit, this is that limit."},{"Name":"weeklyProgress","Type":"integer","Format":"int32","Description":"The amount of progress earned toward this progression in the current week."},{"Name":"weeklyLimit","Type":"integer","Format":"int32","Description":"If this progression has a weekly limit, this is that limit."},{"Name":"currentProgress","Type":"integer","Format":"int32","Description":"This is the total amount of progress obtained overall for thisprogression (for instance, the total amount of Character Level experience earned)"},{"Name":"level","Type":"integer","Format":"int32","Description":"This is the level of the progression (for instance, the Character Level)."},{"Name":"levelCap","Type":"integer","Format":"int32","Description":"This is the maximum possible level you can achieve for this progression (for example, the maximumcharacter level obtainable)"},{"Name":"stepIndex","Type":"integer","Format":"int32","Description":"Progressions define their levels in \"steps\".  Since the last step may be repeatable, the user maybe at a higher level than the actual Step achieved in the progression.  Not necessarily useful, butpotentially interesting for those cruising the API.  Relate this to the \"steps\" property of the DestinyProgressionto see which step the user is on, if you care about that.  (Note that this is Content Version dependent sinceit refers to indexes.)"},{"Name":"progressToNextLevel","Type":"integer","Format":"int32","Description":"The amount of progression (i.e. \"Experience\") needed to reach the next level of this Progression.Jeez, progression is such an overloaded word."},{"Name":"nextLevelAt","Type":"integer","Format":"int32","Description":"The total amount of progression (i.e. \"Experience\") needed in order to reach the next level."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Progression\r\n{\r\n    public class DestinyFactionProgression\r\n    {\r\npublic int factionHash;\r\npublic int progressionHash;\r\npublic int dailyProgress;\r\npublic int dailyLimit;\r\npublic int weeklyProgress;\r\npublic int weeklyLimit;\r\npublic int currentProgress;\r\npublic int level;\r\npublic int levelCap;\r\npublic int stepIndex;\r\npublic int progressToNextLevel;\r\npublic int nextLevelAt;\r\n}\r\n}","Description":"Mostly for historical purposes, we segregate Faction progressions from other progressions.This is just a DestinyProgression with a shortcut for finding the DestinyFactionDefinitionof the faction related to the progression."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestone","RawName":"Destiny.Milestones.DestinyMilestone","Properties":[{"Name":"milestoneHash","Type":"integer","Format":"uint32","Description":"The unique identifier for the Milestone.  Use it to look up the DestinyMilestoneDefinition, soyou can combine the other data in this contract with static definition data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneDefinition"}]},{"Name":"availableQuests","Type":"array","Description":"Indicates what quests are available for this Milestone.Usually this will be only a single Quest, but some quests have multiple available that youcan choose from at any given time.All possible quests for a milestone can be found in the DestinyMilestoneDefinition, but they mustbe combined with this Live data to determine which one(s) are actually active right now.It is possible for Milestones to not have any quests.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneQuest"}]},{"Name":"values","Type":"object","Description":"Milestones may have arbitrary key/value pairs associated with them, for data that users willwant to know about but that doesn't fit neatly into any of the common components such as Quests.A good example of this would be - if this existed in Destiny 1 - the number of wins you currently haveon your Trials of Osiris ticket.Looking in the DestinyMilestoneDefinition,you can use the string identifier of this dictionary to look up more info about the value, includinglocalized string content for displaying the value.  The value in the dictionary is the floating pointnumber.  The definition will tell you how to format this number.","additionalProperties":[{"type":"number","format":"float"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"vendorHashes","Type":"array","Description":"A milestone may have one or more active vendors that are \"related\" to it (that provide rewards, or thatare the initiators of the Milestone).  I already regret this, even as I'm typing it.You see, sometimes a milestone may be directly correlated with a set of vendors that provide varying tiersof rewards.  The player may not be able to interact with one or more of those vendors.  This will returnthe hashes of the Vendors that the player *can* interact with, allowing you to show their current inventoryas rewards or related items to the Milestone or its activities.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":"rewards","Type":"array","Description":"If the entity to which this component is attached has known active Rewards for the player, this will detailinformation about those rewards, keyed by the RewardEntry Hash. (See DestinyMilestoneDefinition formore information about Reward Entries)Note that these rewards are not for the Quests related to the Milestone.  Think of these as \"overview/checklist\"rewards that may be provided for Milestones that may provide rewards for performing a variety of tasks thataren't under a specific Quest.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneRewardCategory"}]},{"Name":"startDate","Type":"string","Format":"date-time","Nullable":true,"Description":"If known, this is the date when the event last began or refreshed.  It will only be populated for events with fixedand repeating start and end dates."},{"Name":"endDate","Type":"string","Format":"date-time","Nullable":true,"Description":"If known, this is the date when the event will next end or repeat.  It will only be populated for events with fixedand repeating start and end dates."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestone\r\n    {\r\npublic int milestoneHash;\r\npublic List<object> availableQuests;\r\npublic List<object> vendorHashes;\r\npublic List<object> rewards;\r\npublic string startDate;\r\npublic string endDate;\r\n}\r\n}","Description":"Represents a runtime instance of a user's milestone status.Live Milestone data should be combined with DestinyMilestoneDefinition data to show the usera picture of what is available for them to do in the game, and their status in regards to said \"things to do.\"Consider it a big, wonky to-do list, or Advisors 3.0 for those who remember the Destiny 1 API."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneQuest","RawName":"Destiny.Milestones.DestinyMilestoneQuest","Properties":[{"Name":"questItemHash","Type":"integer","Format":"uint32","Description":"Quests are defined as Items in content.  As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest.  It will have pointers to all of the stepsin the quest, and display information for the quest (title, description, icon etc)Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setDataproperty, and themselves are Items with their own renderable data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":null,"Description":"The current status of the quest for the character making the request.","allOf":[[{"$ref":"#/components/schemas/Destiny.Quests.DestinyQuestStatus"}]]},{"Name":null,"Description":"*IF* the Milestone has an active Activity that can give you greater detailsabout what you need to do, it will be returned here.Remember to associate this with the DestinyMilestoneDefinition's activitiesto get details about the activity, including what specific quest it is related to if youhave multiple quests to choose from.","allOf":[[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneActivity"}]]},{"Name":"challenges","Type":"array","Description":"The activities referred to by this quest can have many associated challenges.They are all contained here, with activityHashes so that you can associate them withthe specific activity variants in which they can be found.In retrospect, I probably should have put these under the specific Activity Variants,but it's too late to change it now.Theoretically, a quest without Activities can still have Challenges, which is whythis is on a higher level than activity/variants, but it probably should have beenin both places.  That may come as a later revision.","items":[{"$ref":"#/components/schemas/Destiny.Challenges.DestinyChallengeStatus"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneQuest\r\n    {\r\npublic int questItemHash;\r\npublic List<object> challenges;\r\n}\r\n}","Description":"If a Milestone has one or more Quests, this will contain the live information for the character's status withone of those quests."},{"Namespace":"Destiny.Quests","Name":"DestinyQuestStatus","RawName":"Destiny.Quests.DestinyQuestStatus","Properties":[{"Name":"questHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the Quest Item.  (Note: Quests are defined as Items, and thus you woulduse this to look up the quest's DestinyInventoryItemDefinition).For information on all steps in the quest, you can then examine its DestinyInventoryItemDefinition.setDataproperty for Quest Steps (which are *also* items).You can use the Item Definition to display human readable data about the overall quest.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"stepHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the current Quest Step, which is also a DestinyInventoryItemDefinition.  You can usethis to get human readable data about the current step and what to do in that step.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"stepObjectives","Type":"array","Description":"A step can have multiple objectives.  This will give you the progress for each objective in the current step,in the order in which they are rendered in-game.","items":[{"$ref":"#/components/schemas/Destiny.Quests.DestinyObjectiveProgress"}]},{"Name":"tracked","Type":"boolean","Description":"Whether or not the quest is tracked"},{"Name":"itemInstanceId","Type":"integer","Format":"int64","Description":"The current Quest Step will be an instanced item in the player's inventory.  If you care about that,this is the instance ID of that item."},{"Name":"completed","Type":"boolean","Description":"Whether or not the whole quest has been completed, regardless of whether or notyou have redeemed the rewards for the quest."},{"Name":"redeemed","Type":"boolean","Description":"Whether or not you have redeemed rewards for this quest."},{"Name":"started","Type":"boolean","Description":"Whether or not you have started this quest."},{"Name":"vendorHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the quest has a related Vendor that you should talk to in order to initiate the quest/earn rewards/continue the quest, this will be the hash identifier of that Vendor.  Look it up its DestinyVendorDefinition."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Quests\r\n{\r\n    public class DestinyQuestStatus\r\n    {\r\npublic int questHash;\r\npublic int stepHash;\r\npublic List<object> stepObjectives;\r\npublic bool tracked;\r\npublic int itemInstanceId;\r\npublic bool completed;\r\npublic bool redeemed;\r\npublic bool started;\r\npublic int vendorHash;\r\n}\r\n}","Description":"Data regarding the progress of a Quest for a specific character.Quests are composed of multiple steps, each with potentially multiple objectives:this QuestStatus will return Objective data for the *currently active* step in this quest."},{"Namespace":"Destiny.Quests","Name":"DestinyObjectiveProgress","RawName":"Destiny.Quests.DestinyObjectiveProgress","Properties":[{"Name":"objectiveHash","Type":"integer","Format":"uint32","Description":"The unique identifier of the Objective being referred to.  Use to look up the DestinyObjectiveDefinition in static data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveDefinition"}]},{"Name":"destinationHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the Objective has a Destination associated with it, this is the unique identifier of the Destination being referred to.Use to look up the DestinyDestinationDefinition in static data.This will give localized data about *where* in the universe the objective should be achieved.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDestinationDefinition"}]},{"Name":"activityHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If the Objective has an Activity associated with it, this is the unique identifier of the Activity being referred to.Use to look up the DestinyActivityDefinition in static data.This will give localized data about *what* you should be playing for the objective to be achieved.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"progress","Type":"integer","Format":"int32","Nullable":true,"Description":"If progress has been made, and the progress can be measured numerically, this will be the value of that progress.You can compare it to the DestinyObjectiveDefinition.completionValue property for current vs. upper bounds,and use DestinyObjectiveDefinition.valueStyle to determine how this should be rendered.Note that progress, in Destiny 2, need not be a literal numeric progression.  It could be one of a number ofpossible values, even a Timestamp.  Always examine DestinyObjectiveDefinition.valueStyle before renderingprogress."},{"Name":"complete","Type":"boolean","Description":"Whether or not the Objective is completed."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Quests\r\n{\r\n    public class DestinyObjectiveProgress\r\n    {\r\npublic int objectiveHash;\r\npublic int destinationHash;\r\npublic int activityHash;\r\npublic int progress;\r\npublic bool complete;\r\n}\r\n}","Description":"Returns data about a character's status with a given Objective.Combine with DestinyObjectiveDefinition static data for display purposes."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneActivity","RawName":"Destiny.Milestones.DestinyMilestoneActivity","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The hash of an arbitrarily chosen variant of this activity.  We'll go ahead andcall that the \"canonical\" activity, because if you're using this value you shouldonly use it for properties that are common across the variants: things like thename of the activity, it's location, etc...Use this hash to look up the DestinyActivityDefinition of this activity for rendering data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"modifierHashes","Type":"array","Description":"If the activity has modifiers, this will be the list of modifiers that all variantshave in common.  Perform lookups againstDestinyActivityModifierDefinition which defines the modifier being applied to getat the modifier data.Note that, in the DestiyActivityDefinition, you will see many more modifiers than thisbeing referred to: those are all *possible* modifiers for the activity, not the active ones.Use only the active ones to match what's really live.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.ActivityModifiers.DestinyActivityModifierDefinition"}]},{"Name":"variants","Type":"array","Description":"If you want more than just name/location/etc... you're going to have to dig intoand show the variants of the conceptual activity.  These will differ in seeminglyarbitrary ways, like difficulty level and modifiers applied.  Show it in whateverway tickles your fancy.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneActivityVariant"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneActivity\r\n    {\r\npublic int activityHash;\r\npublic List<object> modifierHashes;\r\npublic List<object> variants;\r\n}\r\n}","Description":"Sometimes, we know the specific activity that the Milestone wants you to play.This entity provides additional information about that Activity and all of itsvariants.  (sometimes there's only one variant, but I think you get the point)"},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneActivityVariant","RawName":"Destiny.Milestones.DestinyMilestoneActivityVariant","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The hash for the specific variant of the activity related to this milestone.You can pull more detailed static info from the DestinyActivityDefinition, such as difficulty level.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":null,"Description":"An OPTIONAL component: if it makes sense to talk about this activity variant in terms ofwhether or not it has been completed or what progress you have made in it, this will be returned.Otherwise, this will be NULL.","allOf":[[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneActivityCompletionStatus"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneActivityVariant\r\n    {\r\npublic int activityHash;\r\n}\r\n}","Description":"Represents custom data that we know about an individual variant of an activity."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneActivityCompletionStatus","RawName":"Destiny.Milestones.DestinyMilestoneActivityCompletionStatus","Properties":[{"Name":"completed","Type":"boolean","Description":"If the activity has been \"completed\", that information will be returned here."},{"Name":"phases","Type":"array","Description":"If the Activity has discrete \"phases\" that we can track, that info will be here.  Otherwise,this value will be NULL.Note that this is a list and not a dictionary: the order implies the ascending order of phasesor progression in this activity.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneActivityPhase"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneActivityCompletionStatus\r\n    {\r\npublic bool completed;\r\npublic List<object> phases;\r\n}\r\n}","Description":"Represents this player's personal completion status for the Activity under a Milestone, if theactivity has trackable completion and progress information. (most activities won't, or the conceptwon't apply.  For instance, it makes sense to talk about a tier of a raid as being Completed or havingprogress, but it doesn't make sense to talk about a Crucible Playlist in those terms."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneActivityPhase","RawName":"Destiny.Milestones.DestinyMilestoneActivityPhase","Properties":[{"Name":"complete","Type":"boolean","Description":"Indicates if the phase has been completed."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneActivityPhase\r\n    {\r\npublic bool complete;\r\n}\r\n}","Description":"Represents whatever information we can return about an explicit phase in an activity.In the future, I hope we'll have more than just \"guh, you done gone and did something,\"but for the forseeable future that's all we've got.  I'm making it more than just a list ofbooleans out of that overly-optimistic hope."},{"Namespace":"Destiny.Challenges","Name":"DestinyChallengeStatus","RawName":"Destiny.Challenges.DestinyChallengeStatus","Properties":[{"Name":null,"Description":"The progress - including completion status - of the active challenge.","allOf":[[{"$ref":"#/components/schemas/Destiny.Quests.DestinyObjectiveProgress"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Challenges\r\n{\r\n    public class DestinyChallengeStatus\r\n    {\r\n}\r\n}","Description":"Represents the status and other related information for a challenge that is - or was - availableto a player.  \r\nA challenge is a bonus objective, generally tacked onto Quests or Activities, thatprovide additional variations on play."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneRewardCategory","RawName":"Destiny.Milestones.DestinyMilestoneRewardCategory","Properties":[{"Name":"rewardCategoryHash","Type":"integer","Format":"uint32","Description":"Look up the relevant DestinyMilestoneDefinition, and then use rewardCategoryHash to look up thecategory info in DestinyMilestoneDefinition.rewards."},{"Name":"entries","Type":"array","Description":"The individual reward entries for this category, and their status.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneRewardEntry"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneRewardCategory\r\n    {\r\npublic int rewardCategoryHash;\r\npublic List<object> entries;\r\n}\r\n}","Description":"Represents a category of \"summary\" rewards that can be earned for the Milestone regardless ofspecific quest rewards that can be earned."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneRewardEntry","RawName":"Destiny.Milestones.DestinyMilestoneRewardEntry","Properties":[{"Name":"rewardEntryHash","Type":"integer","Format":"uint32","Description":"The identifier for the reward entry in question.  It is important to look up the relatedDestinyMilestoneRewardEntryDefinition to get the static details about the reward, whichyou can do by looking up the milestone's DestinyMilestoneDefinition and examining theDestinyMilestoneDefinition.rewards[rewardCategoryHash].rewardEntries[rewardEntryHash] data."},{"Name":"earned","Type":"boolean","Description":"If TRUE, the player has earned this reward."},{"Name":"redeemed","Type":"boolean","Description":"If TRUE, the player has redeemed/picked up/obtained this reward.Feel free to alias this to \"gotTheShinyBauble\" in your own codebase."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneRewardEntry\r\n    {\r\npublic int rewardEntryHash;\r\npublic bool earned;\r\npublic bool redeemed;\r\n}\r\n}","Description":"The character-specific data for a milestone's reward entry.  See DestinyMilestoneDefinition formore information about Reward Entries."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"image","Type":"string","Description":"A custom image someone made just for the milestone.  Isn't that special?"},{"Name":null,"Description":"An enumeration listing one of the possible types of milestones.  Check out theDestinyMilestoneType enum for more info!","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneType"}]]},{"Name":"recruitable","Type":"boolean","Description":"If True, then the Milestone has been integrated with BNet's recruiting feature."},{"Name":"friendlyName","Type":"string","Description":"If the milestone has a friendly identifier for association with other features - such as Recruiting - thatidentifier can be found here.  This is \"friendly\" in that it looks better in a URL than whateverthe identifier for the Milestone actually is."},{"Name":"showInExplorer","Type":"boolean","Description":"If TRUE, this entry should be returned in the list of milestones for the \"Explore Destiny\"(i.e. new BNet homepage) features of Bungie.net (as long as the underlying event is active)"},{"Name":"hasPredictableDates","Type":"boolean","Description":"A shortcut for clients - and the server - to understand whether we can predict the start and end datesfor this event.  In practice, there are multiple ways that an event could have predictable date ranges, but not allevents will be able to be predicted via any mechanism (for instance, events that are manually triggered on and off)"},{"Name":"quests","Type":"object","Description":"The full set of possible Quests that give the overview of the Milestone event/activity in question.Only one of these can be active at a time for a given Conceptual Milestone, but many of them may be\"available\" for the user to choose from. (for instance, with Milestones you can choose from the threeavailable Quests, but only one can be active at a time)Keyed by the quest item.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"rewards","Type":"object","Description":"If this milestone can provide rewards, this will define the categoriesinto which the individual reward entries are placed.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneRewardCategoryDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"vendors","Type":"array","Description":"Sometimes, milestones will have rewards provided by Vendors.  This definition gives the information neededto understand which vendors are relevant, the order in which they should be returned if order matters,and the conditions under which the Vendor is relevant to the user.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneVendorDefinition"}]},{"Name":"values","Type":"object","Description":"Sometimes, milestones will have arbitrary values associated with them that are of interest to usor to third party developers.  This is the collection of those values' definitions, keyed by the identifierof the value and providing useful definition information such as localizable names and descriptions for the value.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneValueDefinition"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"isInGameMilestone","Type":"boolean","Description":"Some milestones are explicit objectives that you can see and interact with in the game.Some milestones are more conceptual, built by BNet to help advise you on activities and eventsthat happen in-game but that aren't explicitly shown in game as Milestones.If this is TRUE, you can see this as a milestone in the game.If this is FALSE, it's an event or activity you can participate in, but you won't see it asa Milestone in the game's UI."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic string image;\r\npublic bool recruitable;\r\npublic string friendlyName;\r\npublic bool showInExplorer;\r\npublic bool hasPredictableDates;\r\npublic List<object> vendors;\r\npublic bool isInGameMilestone;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Milestones are an in-game concept where they're attempting to tell you what you can do next in-game.\r\nIf that sounds a lot like Advisors in Destiny 1, it is!  So we threw out Advisors in the Destiny 2API and tacked all of the data we would have put on Advisors onto Milestones instead.\r\nEach Milestone represents something going on in the game right now:\r\n- A \"ritual activity\" you can perform, like nightfall\r\n- A \"special event\" that may have activities related to it, like Taco Tuesday (there's no Taco Tuesday in Destiny 2)\r\n- A checklist you can fulfill, like helping your Clan complete all of its weekly objectives\r\n- A tutorial quest you can play through, like the introduction to the Crucible.\r\nMost of these milestones appear in game as well.  Some of them are BNet only, because we're so extra.  You're welcome."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneQuestDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneQuestDefinition","Properties":[{"Name":"questItemHash","Type":"integer","Format":"uint32","Description":"The item representing this Milestone quest.  Use this hash to look up the DestinyInventoryItemDefinitionfor the quest to find its steps and human readable data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":null,"Description":"The individual quests may have different definitions from the overall milestone: if there's a specific activequest, use these displayProperties instead of that of the overall DestinyMilestoneDefinition.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"overrideImage","Type":"string","Description":"If populated, this image can be shown instead of the generic milestone's image when this quest is live,or it can be used to show a background image for the quest itself that differs from that of the Activityor the Milestone."},{"Name":null,"Description":"The rewards you will get for completing this quest, as best as we could extract them fromour data.  Sometimes, it'll be a decent amount of data.  Sometimes, it's going to be sucky.  Sorry.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneQuestRewardsDefinition"}]]},{"Name":"activities","Type":"object","Description":"The full set of all possible \"conceptual activities\" that are related to this Milestone.Tiers or alternative modes of play within these conceptual activities will be defined as sub-entities.Keyed by the Conceptual Activity Hash.  Use the key to look up DestinyActivityDefinition.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneActivityDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneQuestDefinition\r\n    {\r\npublic int questItemHash;\r\npublic string overrideImage;\r\n}\r\n}","Description":"Any data we need to figure out whether this Quest Item is the currently active one for the conceptual Milestone.Even just typing this description, I already regret it."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneQuestRewardsDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneQuestRewardsDefinition","Properties":[{"Name":"items","Type":"array","Description":"The items that represent your reward for completing the quest.\r\nBe warned, these could be \"dummy\" items: items that are only used torender a good-looking in-game tooltip, but aren't the actual items themselves.\r\nFor instance, when experience is given there's often a dummy item representing \"experience\",with quantity being the amount of experience you got.  We don't have a programmatic associationbetween those and whatever Progression is actually getting that experience... yet.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneQuestRewardItem"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneQuestRewardsDefinition\r\n    {\r\npublic List<object> items;\r\n}\r\n}","Description":"If rewards are given in a quest - as opposed to overall in the entire Milestone - there's way lessto track.  We're going to simplify this contract as a result.  However, this also gives us theopportunity to potentially put more than just item information into the reward data if we're ableto mine it out in the future.  Remember this if you come back and ask \"why are quest reward itemsnested inside of their own class?\""},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneQuestRewardItem","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneQuestRewardItem","Properties":[{"Name":"vendorHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"The quest reward item *may* be associated with a vendor.  If so,this is that vendor.  Use this hash to look up the DestinyVendorDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":"vendorItemIndex","Type":"integer","Format":"int32","Nullable":true,"Description":"The quest reward item *may* be associated with a vendor.  If so,this is the index of the item being sold, which we can use at runtimeto find instanced item information for the reward item."},{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the item in question.  Use it to look up the item's DestinyInventoryItemDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"itemInstanceId","Type":"integer","Format":"int64","Nullable":true,"Description":"If this quantity is referring to a specific instance of an item, this will have the item's instance ID.Normally, this will be null."},{"Name":"quantity","Type":"integer","Format":"int32","Description":"The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneQuestRewardItem\r\n    {\r\npublic int vendorHash;\r\npublic int vendorItemIndex;\r\npublic int itemHash;\r\npublic int itemInstanceId;\r\npublic int quantity;\r\n}\r\n}","Description":"A subclass of DestinyItemQuantity, that provides not just the item and its quantitybut also information that BNet can - at some point - use internally to providemore robust runtime information about the item's qualities.\r\nIf you want it, please ask!  We're just out of time to wire it up right now.Or a clever person just may do it with our existing endpoints."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneActivityDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneActivityDefinition","Properties":[{"Name":"conceptualActivityHash","Type":"integer","Format":"uint32","Description":"The \"Conceptual\" activity hash.  Basically, we picked the lowest level activityand are treating it as the canonical definition of the activity for rendering purposes.\r\nIf you care about the specific difficulty modes and variations, use the activities under\"Variants\".","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"variants","Type":"object","Description":"A milestone-referenced activity can have many variants, such as Tiers or alternative modes of play.\r\nEven if there is only a single variant, the details for these are represented within as a variant definition.\r\nIt is assumed that, if this DestinyMilestoneActivityDefinition is active, then all variants should be active.\r\nIf a Milestone could ever split the variants' active status conditionally, they should all have their own DestinyMilestoneActivityDefinition instead!  The potential duplication will be worth it for the obviousness of processingand use.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneActivityVariantDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneActivityDefinition\r\n    {\r\npublic int conceptualActivityHash;\r\n}\r\n}","Description":"Milestones can have associated activities which provide additional information about the context, challenges, modifiers, state etc...related to this Milestone.  \r\nInformation we need to be able to return that data is defined here, along with Tier data to establisha relationship between a conceptual Activity and its difficulty levels and variants."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneActivityVariantDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneActivityVariantDefinition","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The hash to use for looking up the variant Activity's definition (DestinyActivityDefinition),where you can find its distinguishing characteristics such as difficulty level and recommendedlight level.  \r\nFrequently, that will be the only distinguishing characteristics in practice, whichis somewhat of a bummer.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"order","Type":"integer","Format":"int32","Description":"If you care to do so, render the variants in the order prescribed by this value.\r\nWhen you combine live Milestone data with the definition, the order becomes more usefulbecause you'll be cross-referencing between the definition and live data."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneActivityVariantDefinition\r\n    {\r\npublic int activityHash;\r\npublic int order;\r\n}\r\n}","Description":"Represents a variant on an activity for a Milestone: a specific difficulty tier, or a specific activity variant for example.\r\nThese will often have more specific details, such as an associated Guided Game, progression steps, tier-specific rewards,and custom values."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneRewardCategoryDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneRewardCategoryDefinition","Properties":[{"Name":"categoryHash","Type":"integer","Format":"uint32","Description":"Identifies the reward category.  Only guaranteed unique within this specific component!"},{"Name":"categoryIdentifier","Type":"string","Description":"The string identifier for the category, if you want to use it for some end.  Guaranteed uniquewithin the specific component."},{"Name":null,"Description":"Hopefully this is obvious by now.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"rewardEntries","Type":"object","Description":"If this milestone can provide rewards, this will define the setsof rewards that can be earned, the conditions under which they can be acquired,internal data that we'll use at runtime to determine whether you'vealready earned or redeemed this set of rewards,and the category that this reward should be placed under.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"order","Type":"integer","Format":"int32","Description":"If you want to use BNet's recommended order for rendering categories programmatically,use this value and compare it to other categories to determine the order in whichthey should be rendered.  I don't feel great about putting this here, I won't lie."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneRewardCategoryDefinition\r\n    {\r\npublic int categoryHash;\r\npublic string categoryIdentifier;\r\npublic int order;\r\n}\r\n}","Description":"The definition of a category of rewards, that contains many individual rewards."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneRewardEntryDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneRewardEntryDefinition","Properties":[{"Name":"rewardEntryHash","Type":"integer","Format":"uint32","Description":"The identifier for this reward entry.  Runtime data will refer to reward entriesby this hash.  Only guaranteed unique within the specific Milestone."},{"Name":"rewardEntryIdentifier","Type":"string","Description":"The string identifier, if you care about it.  Only guaranteed unique within the specific Milestone."},{"Name":"items","Type":"array","Description":"The items you will get as rewards, and how much of it you'll get.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]},{"Name":"vendorHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in orderto redeem the reward.  Use this hash to look up the DestinyVendorDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":null,"Description":"For us to bother returning this info, we should be able to return some kind of informationabout why these rewards are grouped together.  This is ideally that information.Look at how confident I am that this will always remain true.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"order","Type":"integer","Format":"int32","Description":"If you want to follow BNet's ordering of these rewards, use this number within a given categoryto order the rewards.  Yeah, I know.  I feel dirty too."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneRewardEntryDefinition\r\n    {\r\npublic int rewardEntryHash;\r\npublic string rewardEntryIdentifier;\r\npublic List<object> items;\r\npublic int vendorHash;\r\npublic int order;\r\n}\r\n}","Description":"The definition of a specific reward, which may be contained in a category of rewards andthat has optional information about how it is obtained."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneVendorDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneVendorDefinition","Properties":[{"Name":"vendorHash","Type":"integer","Format":"uint32","Description":"The hash of the vendor whose wares should be shown as associated with the Milestone.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneVendorDefinition\r\n    {\r\npublic int vendorHash;\r\n}\r\n}","Description":"If the Milestone or a component has vendors whose inventories could/should be displayed that are relevant to it,this will return the vendor in question.  \r\nIt also contains information we need to determine whether that vendoris actually relevant at the moment, given the user's current state."},{"Namespace":"Destiny.Definitions.Milestones","Name":"DestinyMilestoneValueDefinition","RawName":"Destiny.Definitions.Milestones.DestinyMilestoneValueDefinition","Properties":[{"Name":"key","Type":"string"},{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions.Milestones\r\n{\r\n    public class DestinyMilestoneValueDefinition\r\n    {\r\npublic string key;\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\n}\r\n}","Description":"The definition for information related to a key/value pair that is relevant for a particular Milestone orcomponent within the Milestone.  \r\nThis lets us more flexibly pass up information that's useful to someone,even if it's not necessarily us."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyCharacterProgressionComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyCharacterProgressionComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"CharacterProgressions","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterProgressionComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyCharacterProgressionComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Characters","Name":"DestinyCharacterRenderComponent","RawName":"Destiny.Entities.Characters.DestinyCharacterRenderComponent","Properties":[{"Name":"customDyes","Type":"array","Description":"Custom dyes, calculated by iterating over the character's equipped items.Useful for pre-fetching all of the dye data needed from our server.","items":[{"$ref":"#/components/schemas/Destiny.DyeReference"}]},{"Name":null,"Description":"This is actually something that Spasm.js *doesn't* do right now, and that we don't return assets for yet.This is the data about what character customization options you picked.  You can combine this withDestinyCharacterCustomizationOptionDefinition to show some cool info, and hopefully someday to actuallyrender a user's face in 3D.  We'll see if we ever end up with time for that.","allOf":[[{"$ref":"#/components/schemas/Destiny.Character.DestinyCharacterCustomization"}]]},{"Name":null,"Description":"A minimal view of:\r\n- Equipped items\r\n- The rendering-related custom options on those equipped items\r\nCombined, that should be enough to render all of the items on the equipped character.","allOf":[[{"$ref":"#/components/schemas/Destiny.Character.DestinyCharacterPeerView"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Characters\r\n{\r\n    public class DestinyCharacterRenderComponent\r\n    {\r\npublic List<object> customDyes;\r\n}\r\n}","Description":"Only really useful if you're attempting to render the character's current appearance in 3D,this returns a bare minimum of information, pre-aggregated, that you'll need to perform that rendering.Note that you need to combine this with other 3D assets and data from our servers.\r\nExamine the Javascript returned by https://bungie.net/sharedbundle/spasm to see how we use this data, butbe warned: the rabbit hole goes pretty deep."},{"Namespace":"Destiny.Character","Name":"DestinyCharacterCustomization","RawName":"Destiny.Character.DestinyCharacterCustomization","Properties":[{"Name":"personality","Type":"integer","Format":"uint32"},{"Name":"face","Type":"integer","Format":"uint32"},{"Name":"skinColor","Type":"integer","Format":"uint32"},{"Name":"lipColor","Type":"integer","Format":"uint32"},{"Name":"eyeColor","Type":"integer","Format":"uint32"},{"Name":"hairColors","Type":"array","items":[{"type":"integer","format":"uint32"}]},{"Name":"featureColors","Type":"array","items":[{"type":"integer","format":"uint32"}]},{"Name":"decalColor","Type":"integer","Format":"uint32"},{"Name":"wearHelmet","Type":"boolean"},{"Name":"hairIndex","Type":"integer","Format":"int32"},{"Name":"featureIndex","Type":"integer","Format":"int32"},{"Name":"decalIndex","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Character\r\n{\r\n    public class DestinyCharacterCustomization\r\n    {\r\npublic int personality;\r\npublic int face;\r\npublic int skinColor;\r\npublic int lipColor;\r\npublic int eyeColor;\r\npublic List<object> hairColors;\r\npublic List<object> featureColors;\r\npublic int decalColor;\r\npublic bool wearHelmet;\r\npublic int hairIndex;\r\npublic int featureIndex;\r\npublic int decalIndex;\r\n}\r\n}","Description":"Raw data about the customization options chosen for a character's face and appearance.\r\nYou can look up the relevant class/race/gender combo in DestinyCharacterCustomizationOptionDefinitionfor the character, and then look up these values within the CustomizationOptions foundto pull some data about their choices.  Warning: not all of that data is meaningful.  Some data hasuseful icons.  Others have nothing, and are only meant for 3D rendering purposes (which we sadlydo not expose yet)"},{"Namespace":"Destiny.Character","Name":"DestinyCharacterPeerView","RawName":"Destiny.Character.DestinyCharacterPeerView","Properties":[{"Name":"equipment","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.Character.DestinyItemPeerView"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Character\r\n{\r\n    public class DestinyCharacterPeerView\r\n    {\r\npublic List<object> equipment;\r\n}\r\n}","Description":"A minimal view of a character's equipped items, for the purpose of rendering a summaryscreen or showing the character in 3D."},{"Namespace":"Destiny.Character","Name":"DestinyItemPeerView","RawName":"Destiny.Character.DestinyItemPeerView","Properties":[{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the item in question.  Use it to look up the DestinyInventoryItemDefinition of the itemfor static rendering data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"dyes","Type":"array","Description":"The list of dyes that have been applied to this item.","items":[{"$ref":"#/components/schemas/Destiny.DyeReference"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Character\r\n{\r\n    public class DestinyItemPeerView\r\n    {\r\npublic int itemHash;\r\npublic List<object> dyes;\r\n}\r\n}","Description":"Bare minimum summary information for an item, for the sake of 3D rendering the item."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyCharacterRenderComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyCharacterRenderComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"CharacterRenderData","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterRenderComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyCharacterRenderComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Characters","Name":"DestinyCharacterActivitiesComponent","RawName":"Destiny.Entities.Characters.DestinyCharacterActivitiesComponent","Properties":[{"Name":"dateActivityStarted","Type":"string","Format":"date-time","Description":"The last date that the user started playing an activity."},{"Name":"availableActivities","Type":"array","Description":"The list of activities that the user can play.","items":[{"$ref":"#/components/schemas/Destiny.DestinyActivity"}]},{"Name":"currentActivityHash","Type":"integer","Format":"uint32","Description":"If the user is in an activity, this will be the hash of the Activity being played.Note that you must combine this info with currentActivityModeHash to get a real picture of whatthe user is doing right now.  For instance, PVP \"Activities\" are just maps: it's the ActivityModethat determines what type of PVP game they're playing.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"currentActivityModeHash","Type":"integer","Format":"uint32","Description":"If the user is in an activity, this will be the hash of the activity mode being played.Combine with currentActivityHash to give a person a full picture of what they're doing right now.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityModeDefinition"}]},{"Name":"lastCompletedStoryHash","Type":"integer","Format":"uint32","Description":"This will have the activity hash of the last completed story/campaign mission, in case you care about that.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Characters\r\n{\r\n    public class DestinyCharacterActivitiesComponent\r\n    {\r\npublic string dateActivityStarted;\r\npublic List<object> availableActivities;\r\npublic int currentActivityHash;\r\npublic int currentActivityModeHash;\r\npublic int lastCompletedStoryHash;\r\n}\r\n}","Description":"This component holds activity data for a character.  It will tell you about the character's current activity status,as well as activities that are available to the user."},{"Namespace":"Destiny","Name":"DestinyActivity","RawName":"Destiny.DestinyActivity","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the Activity.  Use this to look up the DestinyActivityDefinition of the activity.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"isNew","Type":"boolean","Description":"If true, then the activity should have a \"new\" indicator in the Director UI."},{"Name":"canLead","Type":"boolean","Description":"If true, the user is allowed to lead a Fireteam into this activity."},{"Name":"canJoin","Type":"boolean","Description":"If true, the user is allowed to join with another Fireteam in this activity."},{"Name":"isCompleted","Type":"boolean","Description":"If true, we both have the ability to know that the user has completed this activity andthey have completed it.  Unfortunately, we can't necessarily know this for all activities.  As such,this should probably only be used if you already know in advance which specific activities you wish to check."},{"Name":"isVisible","Type":"boolean","Description":"If true, the user should be able to see this activity."},{"Name":"displayLevel","Type":"integer","Format":"int32","Nullable":true,"Description":"The difficulty level of the activity, if applicable."},{"Name":"recommendedLight","Type":"integer","Format":"int32","Nullable":true,"Description":"The recommended light level for the activity, if applicable."},{"Name":null,"Description":"A DestinyActivityDifficultyTier enum value indicating the difficulty of the activity.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyActivityDifficultyTier"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyActivity\r\n    {\r\npublic int activityHash;\r\npublic bool isNew;\r\npublic bool canLead;\r\npublic bool canJoin;\r\npublic bool isCompleted;\r\npublic bool isVisible;\r\npublic int displayLevel;\r\npublic int recommendedLight;\r\n}\r\n}","Description":"Represents the \"Live\" data that we can obtain about a Character's status with a specific Activity.This will tell you whether the character can participate in the activity, as well as some otherbasic mutable information.  \r\nMeant to be combined with static DestinyActivityDefinition data for a fullpicture of the Activity."},{"Namespace":"Destiny.Definitions","Name":"DestinyActivityModeDefinition","RawName":"Destiny.Definitions.DestinyActivityModeDefinition","Properties":[{"Name":"displayProperties","$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"},{"Name":"pgcrImage","Type":"string"},{"Name":"modeType","$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyActivityModeType"},{"Name":"activityModeCategory","$ref":"#/components/schemas/Destiny.DestinyActivityModeCategory"},{"Name":"parentHashes","Type":"array","items":[{"type":"integer","format":"uint32"}]},{"Name":"friendlyName","Type":"string"},{"Name":"activityModeMappings","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyActivityModeType"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"display","Type":"boolean","Description":"If FALSE, we want to ignore this type when we're showing activity modes in BNet UI.  It will still be returned in case3rd parties want to use it for any purpose."},{"Name":"order","Type":"integer","Format":"int32","Description":"The relative ordering of activity modes."},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyActivityModeDefinition\r\n    {\r\npublic Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition displayProperties;\r\npublic string pgcrImage;\r\npublic Destiny.HistoricalStats.Definitions.DestinyActivityModeType modeType;\r\npublic Destiny.DestinyActivityModeCategory activityModeCategory;\r\npublic List<object> parentHashes;\r\npublic string friendlyName;\r\npublic bool display;\r\npublic int order;\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyCharacterActivitiesComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyCharacterActivitiesComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"CharacterActivities","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterActivitiesComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyCharacterActivitiesComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyKiosksComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyKiosksComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"Kiosks","$ref":"#/components/schemas/Destiny.Components.Kiosks.DestinyKiosksComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyKiosksComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DestinyItemComponentSetOfint64","RawName":"DestinyItemComponentSetOfint64","Properties":[{"Name":"instances","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent","x-destiny-component-type-dependency":"ItemInstances"},{"Name":"objectives","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent","x-destiny-component-type-dependency":"ItemObjectives"},{"Name":"perks","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemPerksComponent","x-destiny-component-type-dependency":"ItemPerks"},{"Name":"renderData","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemRenderComponent","x-destiny-component-type-dependency":"ItemRenderData"},{"Name":"stats","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemStatsComponent","x-destiny-component-type-dependency":"ItemStats"},{"Name":"sockets","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent","x-destiny-component-type-dependency":"ItemSockets"},{"Name":"talentGrids","$ref":"#/components/schemas/DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent","x-destiny-component-type-dependency":"ItemTalentGrids"},{"Name":"plugStates","$ref":"#/components/schemas/DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent","x-destiny-component-type-dependency":"ItemPlugStates"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DestinyItemComponentSetOfint64\r\n    {\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent instances;\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent objectives;\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemPerksComponent perks;\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemRenderComponent renderData;\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemStatsComponent stats;\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent sockets;\r\npublic  DestinySharp.DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent talentGrids;\r\npublic  DestinySharp.DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent plugStates;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemInstanceComponent","RawName":"Destiny.Entities.Items.DestinyItemInstanceComponent","Properties":[{"Name":null,"Description":"If the item has a damage type, this is the item's current damage type.","allOf":[[{"$ref":"#/components/schemas/Destiny.DamageType"}]]},{"Name":"damageTypeHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"The current damage type's hash, so you can look up localized info and icons for it.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyDamageTypeDefinition"}]},{"Name":null,"Description":"The item stat that we consider to be \"primary\" for the item.  For instance, this would be \"Attack\" forWeapons or \"Defense\" for armor.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyStat"}]]},{"Name":"itemLevel","Type":"integer","Format":"int32","Description":"The Item's \"Level\" has the most significant bearing on its stats, such as Light and Power."},{"Name":"quality","Type":"integer","Format":"int32","Description":"The \"Quality\" of the item has a lesser - but still impactful - bearing on stats like Light and Power."},{"Name":"isEquipped","Type":"boolean","Description":"Is the item currently equipped on the given character?"},{"Name":"canEquip","Type":"boolean","Description":"If this is an equippable item, you can check it here.  There are permanent as well as transitory reasonswhy an item might not be able to be equipped: check cannotEquipReason for details."},{"Name":"equipRequiredLevel","Type":"integer","Format":"int32","Description":"If the item cannot be equipped until you reach a certain level, that level will be reflected here."},{"Name":"unlockHashesRequiredToEquip","Type":"array","Description":"Sometimes, there are limitations to equipping that are represented by character-level flags called \"unlocks\".\r\nThis is a list of flags that they need in order to equip the item that the character has not met.Use these to look up the descriptions to show in your UI by looking up the relevant DestinyUnlockDefinitions for the hashes.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyUnlockDefinition"}]},{"Name":null,"Description":"If you cannot equip the item, this is a flags enum that enumerates all of the reasons why you couldn't equipthe item.  You may need to refine your UI further by using unlockHashesRequiredToEquip and equipRequiredLevel.","allOf":[[{"$ref":"#/components/schemas/Destiny.EquipFailureReason"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemInstanceComponent\r\n    {\r\npublic int damageTypeHash;\r\npublic int itemLevel;\r\npublic int quality;\r\npublic bool isEquipped;\r\npublic bool canEquip;\r\npublic int equipRequiredLevel;\r\npublic List<object> unlockHashesRequiredToEquip;\r\n}\r\n}","Description":"If an item is \"instanced\", this will contain information about the item's instance that doesn't fit easilyinto other components.  One might say this is the \"essential\" instance data for the item.\r\nItems are instanced if they require information or state that can vary.  For instance, weapons are Instanced:they are given a unique identifier, uniquely generated stats, and can have their properties altered.  Non-instanceditems have none of these things: for instance, Glimmer has no unique properties aside from how much of it you own.\r\nYou can tell from an item's definition whether it will be instanced or not by looking at the DestinyInventoryItemDefinition'sdefinition.inventory.isInstanceItem property."},{"Namespace":"Destiny","Name":"DestinyStat","RawName":"Destiny.DestinyStat","Properties":[{"Name":"statHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the Stat.  Use it to look up the DestinyStatDefinition for static data about the stat.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]},{"Name":"value","Type":"integer","Format":"int32","Description":"The current value of the Stat."},{"Name":"maximumValue","Type":"integer","Format":"int32","Description":"The highest possible value for the stat, if we were able to compute it.  (I wouldn't necessarily trust thisvalue right now.  I would like to improve its calculation in later iterations of the API.  Consider thisa placeholder for desired future functionality)"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyStat\r\n    {\r\npublic int statHash;\r\npublic int value;\r\npublic int maximumValue;\r\n}\r\n}","Description":"Represents a stat on an item *or* Character (NOT a Historical Stat, but a physical attribute stat like Attack, Defense etc...)"},{"Namespace":"Destiny.Definitions","Name":"DestinyUnlockDefinition","RawName":"Destiny.Definitions.DestinyUnlockDefinition","Properties":[{"Name":null,"Description":"Sometimes, but not frequently, these unlock flags also havehuman readable information: usually when they are being directly tested for some requirement,in which case the string is a localized description of why the requirement check failed.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"hash","Type":"integer","Format":"uint32","Description":"The unique identifier for this entity.  Guaranteed to be unique for the type of entity, but not globally.\r\nWhen entities refer to each other in Destiny content, it is this hash that they are referring to."},{"Name":"index","Type":"integer","Format":"int32","Description":"The index of the entity as it was found in the investment tables."},{"Name":"redacted","Type":"boolean","Description":"If this is true, then there is an entity with this identifier/type combination, but BNet isnot yet allowed to show it.  Sorry!"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyUnlockDefinition\r\n    {\r\npublic int hash;\r\npublic int index;\r\npublic bool redacted;\r\n}\r\n}","Description":"Unlock Flags are small bits (literally, a bit, as in a boolean value) that the game serveruses for an extremely wide range of state checks, progress storage, and other interestingtidbits of information."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemInstances","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemInstanceComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemObjectivesComponent","RawName":"Destiny.Entities.Items.DestinyItemObjectivesComponent","Properties":[{"Name":"objectives","Type":"array","Description":"If the item has a hard association with objectives, your progress on themwill be defined here.  \r\nObjectives are our standard way to describe a series of tasks that have to be completed for a reward.","items":[{"$ref":"#/components/schemas/Destiny.Quests.DestinyObjectiveProgress"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemObjectivesComponent\r\n    {\r\npublic List<object> objectives;\r\n}\r\n}","Description":"Items can have objectives and progression.  When you request this block, you will obtaininformation about any Objectives and progression tied to this item."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemObjectives","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemObjectivesComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemPerksComponent","RawName":"Destiny.Entities.Items.DestinyItemPerksComponent","Properties":[{"Name":"perks","Type":"array","Description":"The list of perks to display in an item tooltip - and whether or not they have been activated.","items":[{"$ref":"#/components/schemas/Destiny.Perks.DestinyPerkReference"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemPerksComponent\r\n    {\r\npublic List<object> perks;\r\n}\r\n}","Description":"Instanced items can have perks: benefits that the item bestows.\r\nThese are related to DestinySandboxPerkDefinition, and sometimes - but not always - have human readable info.When they do, they are the icons and text that you see in an item's tooltip.\r\nTalent Grids, Sockets, and the item itself can apply Perks, which are then summarized here for your convenience."},{"Namespace":"Destiny.Perks","Name":"DestinyPerkReference","RawName":"Destiny.Perks.DestinyPerkReference","Properties":[{"Name":"perkHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists.Be warned, perks frequently do not have user-viewable information.  You should examine whether you actuallyfound a name/description in the perk's definition before you show it to the user.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinySandboxPerkDefinition"}]},{"Name":"iconPath","Type":"string","Description":"The icon for the perk."},{"Name":"isActive","Type":"boolean","Description":"Whether this perk is currently active.  (We may return perks that you have not actually activated yet:these represent perks that you should show in the item's tooltip, but that the user has not yetactivated.)"},{"Name":"visible","Type":"boolean","Description":"Some perks provide benefits, but aren't visible in the UI.  This value will let you know if this isperk should be shown in your UI."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Perks\r\n{\r\n    public class DestinyPerkReference\r\n    {\r\npublic int perkHash;\r\npublic string iconPath;\r\npublic bool isActive;\r\npublic bool visible;\r\n}\r\n}","Description":"The list of perks to display in an item tooltip - and whether or not they have been activated.\r\nPerks apply a variety of effects to a character, and are generally either intrinsic to the itemor provided in activated talent nodes or sockets."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemPerksComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemPerksComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemPerks","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemPerksComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemPerksComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemRenderComponent","RawName":"Destiny.Entities.Items.DestinyItemRenderComponent","Properties":[{"Name":"useCustomDyes","Type":"boolean","Description":"If you should use custom dyes on this item, it will be indicated here."},{"Name":"artRegions","Type":"object","Description":"A dictionary for rendering gear components, with:\r\nkey = Art Arrangement Region Index\r\nvalue = The chosen Arrangement Index for the Region, based on the value of a stat on the item used for making the choice.","additionalProperties":[{"type":"integer","format":"int32"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemRenderComponent\r\n    {\r\npublic bool useCustomDyes;\r\n}\r\n}","Description":"Many items can be rendered in 3D.  When you request this block, you will obtainthe custom data needed to render this specific instance of the item."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemRenderComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemRenderComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemRenderData","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemRenderComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemRenderComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemStatsComponent","RawName":"Destiny.Entities.Items.DestinyItemStatsComponent","Properties":[{"Name":"stats","Type":"object","Description":"If the item has stats that it provides (damage, defense, etc...), it will be given here.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.DestinyStat"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyStatDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemStatsComponent\r\n    {\r\n}\r\n}","Description":"If you want the stats on an item's instanced data, get this component.\r\nThese are stats like Attack, Defense etc... and *not* historical stats.\r\nNote that some stats have additional computation in-game at runtime - for instance, Magazine Size - and thus these stats might not be 100% accurate compared to what you seein-game for some stats.  I know, it sucks.  I hate it too."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemStatsComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemStatsComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemStats","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemStatsComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemStatsComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemSocketsComponent","RawName":"Destiny.Entities.Items.DestinyItemSocketsComponent","Properties":[{"Name":"sockets","Type":"array","Description":"The list of all sockets on the item, and their status information.","items":[{"$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemSocketState"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemSocketsComponent\r\n    {\r\npublic List<object> sockets;\r\n}\r\n}","Description":"Instanced items can have sockets, which are slots on the item where plugs can be inserted.\r\nSockets are a bit complex: be sure to examine the documentation on the DestinyInventoryItemDefinition's\"socket\" block and elsewhere on these objects for more details."},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemSocketState","RawName":"Destiny.Entities.Items.DestinyItemSocketState","Properties":[{"Name":"plugHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"The currently active plug, if any.\r\nNote that, because all plugs are statically defined, its effect on stats and perks can bestatically determined using the plug item's definition.  The stats and perks can be taken at facevalue on the plug item as the stats and perks it will provide to the user/item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"isEnabled","Type":"boolean","Description":"Even if a plug is inserted, it doesn't mean it's enabled.\r\nThis flag indicates whether the plug is active and providing its benefits."},{"Name":"enableFailIndexes","Type":"array","Description":"If a plug is inserted but not enabled, this will be populated with indexes into the plug item definition's plug.enabledRulesproperty, so that you can show the reasons why it is not enabled.","items":[{"type":"integer","format":"int32"}]},{"Name":"reusablePlugHashes","Type":"array","Description":"If the item supports reusable plugs, this is the list of plug item hashes that are currentlyallowed to be used for this socket.  (sometimes restrictions may cause reusable plugs defined on the item definition to not be valid, so you should trust the instanced reusablePlugHashes listrather than the definition's list)\r\nA Reusable Plug is a plug that you can *always* insert into this socket, regardless of whether or notyou have the plug in your inventory.  In practice, a socket will *either* have reusable plugs *or*it will allow for plugs in your inventory to be inserted.  See DestinyInventoryItemDefinition.socketfor more info.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemSocketState\r\n    {\r\npublic int plugHash;\r\npublic bool isEnabled;\r\npublic List<object> enableFailIndexes;\r\npublic List<object> reusablePlugHashes;\r\n}\r\n}","Description":"The status of a given item's socket.  (which plug is inserted, if any: whether it is enabled, what \"reusable\"plugs can be inserted, etc...)"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemSockets","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemSocketsComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Items","Name":"DestinyItemTalentGridComponent","RawName":"Destiny.Entities.Items.DestinyItemTalentGridComponent","Properties":[{"Name":"talentGridHash","Type":"integer","Format":"uint32","Description":"Most items don't have useful talent grids anymore, but Builds in particular still do.\r\nYou can use this hash to lookup the DestinyTalentGridDefinition attached to this item,which will be crucial for understanding the node values on the item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyTalentGridDefinition"}]},{"Name":"nodes","Type":"array","Description":"Detailed information about the individual nodes in the talent grid.\r\nA node represents a single visual \"pip\" in the talent grid or Build detail view,though each node may have multiple \"steps\" which indicate the actual bonusesand visual representation of that node.","items":[{"$ref":"#/components/schemas/Destiny.DestinyTalentNode"}]},{"Name":"isGridComplete","Type":"boolean","Description":"Indicates whether the talent grid on this item is completed, and thus whether it should have a gold border around it.\r\nOnly will be true if the item actually *has* a talent grid, and only then if it is completed (i.e. every exclusive sethas an activated node, and every non-exclusive set node has been activated)"},{"Name":null,"Description":"If the item has a progression, it will be detailed here.  A progressionmeans that the item can gain experience.  Thresholds of experience are what determineswhether and when a talent node can be activated.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyProgression"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Items\r\n{\r\n    public class DestinyItemTalentGridComponent\r\n    {\r\npublic int talentGridHash;\r\npublic List<object> nodes;\r\npublic bool isGridComplete;\r\n}\r\n}","Description":"Well, we're here in Destiny 2, and Talent Grids are unfortunately still around.\r\nThe good news is that they're pretty much only being used for certain base informationon items and for Builds/Subclasses.  The bad news is that they still suck.If you really want this information, grab this component.\r\nAn important note is that talent grids are defined as such:\r\nA Grid has 1:M Nodes, which has 1:M Steps.\r\nAny given node can only have a single stepactive at one time, which represents the actual visual contents and effects of the Node(for instance, if you see a \"Super Cool Bonus\" node, the actual icon and text for the nodeis coming from the current Step of that node).\r\nNodes can be grouped into exclusivity sets*and* as of D2, exclusivity groups (which are collections of exclusivity sets that affecteach other).\r\nSee DestinyTalentGridDefinition for more information.  Brace yourself, the water's coldout there in the deep end."},{"Namespace":"Destiny","Name":"DestinyTalentNode","RawName":"Destiny.DestinyTalentNode","Properties":[{"Name":"nodeIndex","Type":"integer","Format":"int32","Description":"The index of the Talent Node being referred to (an index into DestinyTalentGridDefinition.nodes[]).CONTENT VERSION DEPENDENT."},{"Name":"nodeHash","Type":"integer","Format":"uint32","Description":"The hash of the Talent Node being referred to (in DestinyTalentGridDefinition.nodes).Deceptively CONTENT VERSION DEPENDENT.  We have no guarantee of the hash's immutability between content versions."},{"Name":null,"Description":"An DestinyTalentNodeState enum value indicating the node's state: whether it can be activated or swapped, and why notif neither can be performed.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyTalentNodeState"}]]},{"Name":"isActivated","Type":"boolean","Description":"If true, the node is activated: it's current step then provides its benefits."},{"Name":"stepIndex","Type":"integer","Format":"int32","Description":"The currently relevant Step for the node.  It is this step that has rendering data for the nodeand the benefits that are provided if the node is activated.  (the actual rules for benefits providedare extremely complicated in theory, but with how Talent Grids are being used in Destiny 2 you don't have to worryabout a lot of those old Destiny 1 rules.)  This is an index into:DestinyTalentGridDefinition.nodes[nodeIndex].steps[stepIndex]"},{"Name":"materialsToUpgrade","Type":"array","Description":"If the node has material requirements to be activated, this is the list of those requirements.","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyMaterialRequirement"}]},{"Name":"activationGridLevel","Type":"integer","Format":"int32","Description":"The progression level required on the Talent Grid in order to be able to activate this talent node.Talent Grids have their own Progression - similar to Character Level, but in this case it is experiencerelated to the item itself."},{"Name":"progressPercent","Type":"number","Format":"float","Description":"If you want to show a progress bar or circle for how close this talent node is to being activate-able, thisis the percentage to show.  It follows the node's underlying rules about when the progress bar should firstshow up, and when it should be filled."},{"Name":"hidden","Type":"boolean","Description":"Whether or not the talent node is actually visible in the game's UI.  Whether you want to show it in your ownUI is up to you!  I'm not gonna tell you who to sock it to."},{"Name":null,"Description":"This property has some history.  A talent grid can provide stats on both the item it's related to andthe character equipping the item.  This returns data about those stat bonuses.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyTalentNodeStatBlock"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyTalentNode\r\n    {\r\npublic int nodeIndex;\r\npublic int nodeHash;\r\npublic bool isActivated;\r\npublic int stepIndex;\r\npublic List<object> materialsToUpgrade;\r\npublic int activationGridLevel;\r\npublic decimal progressPercent;\r\npublic bool hidden;\r\n}\r\n}","Description":"I see you've come to find out more about Talent Nodes.  I'm so sorry.Talent Nodes are the conceptual, visual nodes that appear on Talent Grids.Talent Grids, in Destiny 1, were found on almost every instanced item: they had Nodes that couldbe activated to change the properties of the item.In Destiny 2, Talent Grids only exist for Builds/Subclasses, and while the basic concept is the same(Nodes can be activated once you've gained sufficient Experience on the Item, and provide effects),there are some new concepts from Destiny 1.  Examine DestinyTalentGridDefinition and its subordinatesfor more information.This is the \"Live\" information for the current status of a Talent Node on a specific item.Talent Nodes have many Steps, but only one can be active at any one time: and it is the Step that determinesboth the visual and the game state-changing properties that the Node provides.  Examine this and DestinyTalentNodeStepDefinitioncarefully.*IMPORTANT NOTE* Talent Nodes are, unfortunately, Content Version DEPENDENT.  Though they refer to hashes for Nodes and Steps,those hashes are not guaranteed to be immutable across content versions.  This is a source of great exasperation for me,but as a result anyone using Talent Grid data must ensure that the content version of their static contentmatches that of the server responses before showing or making decisions based on talent grid data."},{"Namespace":"Destiny","Name":"DestinyTalentNodeStatBlock","RawName":"Destiny.DestinyTalentNodeStatBlock","Properties":[{"Name":"currentStepStats","Type":"array","Description":"The stat benefits conferred when this talent node is activated for the current Step that is active on the node.","items":[{"$ref":"#/components/schemas/Destiny.DestinyStat"}]},{"Name":"nextStepStats","Type":"array","Description":"This is a holdover from the old days of Destiny 1, when a node could be activated multiple times, conferringmultiple steps worth of benefits: you would use this property to show what activating the \"next\" step on the nodewould provide vs. what the current step is providing.While Nodes are currently not being used this way, the underlying system for this functionality still exists.I hesitate to remove this property while the ability for designers to make such a talent grid still exists.Whether you want to show it is up to you.","items":[{"$ref":"#/components/schemas/Destiny.DestinyStat"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyTalentNodeStatBlock\r\n    {\r\npublic List<object> currentStepStats;\r\npublic List<object> nextStepStats;\r\n}\r\n}","Description":"This property has some history.  A talent grid can provide stats on both the item it's related to andthe character equipping the item.  This returns data about those stat bonuses."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent","RawName":"DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemTalentGrids","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemTalentGridComponent"}],"x-dictionary-key":[{"type":"integer","format":"int64"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Components.Items","Name":"DestinyItemPlugComponent","RawName":"Destiny.Components.Items.DestinyItemPlugComponent","Properties":[{"Name":"insertFailIndexes","Type":"array","Description":"If the plug cannot be inserted for some reason, this will have the indexes into the plug item definition's plug.insertionRules property, so you can show the reasons why it can't be inserted.\r\nThis list will be empty if the plug can be inserted.","items":[{"type":"integer","format":"int32"}]},{"Name":"enableFailIndexes","Type":"array","Description":"If a plug is not enabled, this will be populated with indexes into the plug item definition's plug.enabledRules property, so that you can show the reasons why it is not enabled.\r\nThis list will be empty if the plug is enabled.","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Components.Items\r\n{\r\n    public class DestinyItemPlugComponent\r\n    {\r\npublic List<object> insertFailIndexes;\r\npublic List<object> enableFailIndexes;\r\n}\r\n}","Description":"Plugs are non-instanced items that can provide Stat and Perk benefits when socketed into an instanced item.Items have Sockets, and Plugs are inserted into Sockets.\r\nThis component finds all items that are considered \"Plugs\" in your inventory, and return information aboutthe plug aside from any specific Socket into which it could be inserted."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent","RawName":"DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemPlugStates","$ref":"#/components/schemas/Destiny.Components.Items.DestinyItemPlugComponent"}],"x-dictionary-key":[{"type":"integer","format":"uint32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Responses","Name":"DestinyCharacterResponse","RawName":"Destiny.Responses.DestinyCharacterResponse","Properties":[{"Name":null,"Description":"The character-level non-equipped inventory items.\r\nCOMPONENT TYPE: CharacterInventories","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyInventoryComponent"}]],"x-destiny-component-type-dependency":"CharacterInventories"},{"Name":null,"Description":"Base information about the character in question.\r\nCOMPONENT TYPE: Characters","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyCharacterComponent"}]],"x-destiny-component-type-dependency":"Characters"},{"Name":null,"Description":"Character progression data, including Milestones.\r\nCOMPONENT TYPE: CharacterProgressions","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyCharacterProgressionComponent"}]],"x-destiny-component-type-dependency":"CharacterProgressions"},{"Name":null,"Description":"Character rendering data - a minimal set of information about equipment and dyes used for rendering.\r\nCOMPONENT TYPE: CharacterRenderData","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyCharacterRenderComponent"}]],"x-destiny-component-type-dependency":"CharacterRenderData"},{"Name":null,"Description":"Activity data - info about current activities available to the player.\r\nCOMPONENT TYPE: CharacterActivities","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyCharacterActivitiesComponent"}]],"x-destiny-component-type-dependency":"CharacterActivities"},{"Name":null,"Description":"Equipped items on the character.\r\nCOMPONENT TYPE: CharacterEquipment","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyInventoryComponent"}]],"x-destiny-component-type-dependency":"CharacterEquipment"},{"Name":null,"Description":"Items available from Kiosks that are available to this specific character. \r\nCOMPONENT TYPE: Kiosks","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyKiosksComponent"}]],"x-destiny-component-type-dependency":"Kiosks"},{"Name":null,"Description":"The set of components belonging to the player's instanced items.\r\nCOMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]","allOf":[[{"$ref":"#/components/schemas/DestinyItemComponentSetOfint64"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Responses\r\n{\r\n    public class DestinyCharacterResponse\r\n    {\r\n}\r\n}","Description":"The response contract for GetDestinyCharacter, with components that can be returned for characterand item-level data."},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyCharacterComponent","RawName":"SingleComponentResponseOfDestinyCharacterComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyCharacterComponent\r\n    {\r\npublic Destiny.Entities.Characters.DestinyCharacterComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyCharacterProgressionComponent","RawName":"SingleComponentResponseOfDestinyCharacterProgressionComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterProgressionComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyCharacterProgressionComponent\r\n    {\r\npublic Destiny.Entities.Characters.DestinyCharacterProgressionComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyCharacterRenderComponent","RawName":"SingleComponentResponseOfDestinyCharacterRenderComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterRenderComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyCharacterRenderComponent\r\n    {\r\npublic Destiny.Entities.Characters.DestinyCharacterRenderComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyCharacterActivitiesComponent","RawName":"SingleComponentResponseOfDestinyCharacterActivitiesComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Characters.DestinyCharacterActivitiesComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyCharacterActivitiesComponent\r\n    {\r\npublic Destiny.Entities.Characters.DestinyCharacterActivitiesComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Responses","Name":"DestinyItemResponse","RawName":"Destiny.Responses.DestinyItemResponse","Properties":[{"Name":"characterId","Type":"integer","Format":"int64","Nullable":true,"Description":"If the item is on a character, this will return the ID of the character that is holding the item."},{"Name":null,"Description":"Common data for the item relevant to its non-instanced properties.\r\nCOMPONENT TYPE: ItemCommonData","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemComponent"}]],"x-destiny-component-type-dependency":"ItemCommonData"},{"Name":null,"Description":"Basic instance data for the item.\r\nCOMPONENT TYPE: ItemInstances","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemInstanceComponent"}]],"x-destiny-component-type-dependency":"ItemInstances"},{"Name":null,"Description":"Information specifically about the item's objectives.\r\nCOMPONENT TYPE: ItemObjectives","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemObjectivesComponent"}]],"x-destiny-component-type-dependency":"ItemObjectives"},{"Name":null,"Description":"Information specifically about the perks currently active on the item.\r\nCOMPONENT TYPE: ItemPerks","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemPerksComponent"}]],"x-destiny-component-type-dependency":"ItemPerks"},{"Name":null,"Description":"Information about how to render the item in 3D.\r\nCOMPONENT TYPE: ItemRenderData","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemRenderComponent"}]],"x-destiny-component-type-dependency":"ItemRenderData"},{"Name":null,"Description":"Information about the computed stats of the item: power, defense, etc...\r\nCOMPONENT TYPE: ItemStats","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemStatsComponent"}]],"x-destiny-component-type-dependency":"ItemStats"},{"Name":null,"Description":"Information about the talent grid attached to the item.  Talent nodes can provide a variety ofbenefits and abilities, and in Destiny 2 are used almost exclusively for the character's \"Builds\".\r\nCOMPONENT TYPE: ItemTalentGrids","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemTalentGridComponent"}]],"x-destiny-component-type-dependency":"ItemTalentGrids"},{"Name":null,"Description":"Information about the sockets of the item: which are currently active, what potential socketsyou could have and the stats/abilities/perks you can gain from them.\r\nCOMPONENT TYPE: ItemSockets","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyItemSocketsComponent"}]],"x-destiny-component-type-dependency":"ItemSockets"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Responses\r\n{\r\n    public class DestinyItemResponse\r\n    {\r\npublic int characterId;\r\n}\r\n}","Description":"The response object for retrieving an individual instanced item.  None of these components are relevantfor an item that doesn't have an \"itemInstanceId\": for those, get your information from the DestinyInventoryDefinition."},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemComponent","RawName":"SingleComponentResponseOfDestinyItemComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemInstanceComponent","RawName":"SingleComponentResponseOfDestinyItemInstanceComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemInstanceComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemInstanceComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemInstanceComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemObjectivesComponent","RawName":"SingleComponentResponseOfDestinyItemObjectivesComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemObjectivesComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemObjectivesComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemObjectivesComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemPerksComponent","RawName":"SingleComponentResponseOfDestinyItemPerksComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemPerksComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemPerksComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemPerksComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemRenderComponent","RawName":"SingleComponentResponseOfDestinyItemRenderComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemRenderComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemRenderComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemRenderComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemStatsComponent","RawName":"SingleComponentResponseOfDestinyItemStatsComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemStatsComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemStatsComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemStatsComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemTalentGridComponent","RawName":"SingleComponentResponseOfDestinyItemTalentGridComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemTalentGridComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemTalentGridComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemTalentGridComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyItemSocketsComponent","RawName":"SingleComponentResponseOfDestinyItemSocketsComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemSocketsComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyItemSocketsComponent\r\n    {\r\npublic Destiny.Entities.Items.DestinyItemSocketsComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Responses","Name":"DestinyVendorResponse","RawName":"Destiny.Responses.DestinyVendorResponse","Properties":[{"Name":null,"Description":"The base properties of the vendor.\r\nCOMPONENT TYPE: Vendors","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyVendorComponent"}]],"x-destiny-component-type-dependency":"Vendors"},{"Name":null,"Description":"Categories that the vendor has available, and references to the sales therein.\r\nCOMPONENT TYPE: VendorCategories","allOf":[[{"$ref":"#/components/schemas/SingleComponentResponseOfDestinyVendorCategoriesComponent"}]],"x-destiny-component-type-dependency":"VendorCategories"},{"Name":null,"Description":"Sales, keyed by the vendorItemIndex of the item being sold.\r\nCOMPONENT TYPE: VendorSales","allOf":[[{"$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent"}]],"x-destiny-component-type-dependency":"VendorSales"},{"Name":null,"Description":"Item components, keyed by the vendorItemIndex of the active sale items.\r\nCOMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]","allOf":[[{"$ref":"#/components/schemas/DestinyItemComponentSetOfint32"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Responses\r\n{\r\n    public class DestinyVendorResponse\r\n    {\r\n}\r\n}","Description":"A response containing all of the components for a vendor."},{"Namespace":"Destiny.Entities.Vendors","Name":"DestinyVendorComponent","RawName":"Destiny.Entities.Vendors.DestinyVendorComponent","Properties":[{"Name":"vendorHash","Type":"integer","Format":"uint32","Description":"The unique identifier for the vendor.  Use it to look up their DestinyVendorDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyVendorDefinition"}]},{"Name":null,"Description":"Long ago, we thought it would be a good idea to have special UI that showed whether or notyou've seen a Vendor's inventory after cycling.  \r\nFor now, we don't have that UI anymore.  This propertystill exists for historical purposes.  Don't worry about it.","allOf":[[{"$ref":"#/components/schemas/User.AckState"}]]},{"Name":"nextRefreshDate","Type":"string","Format":"date-time","Description":"The date when this vendor's inventory will next rotate/refresh."},{"Name":"enabled","Type":"boolean","Description":"If True, the Vendor is currently accessible.  \r\nIf False, they may not actually be visible in the world at the moment."},{"Name":"canPurchase","Type":"boolean","Description":"If True, you can purchase from the Vendor.\r\nTheoretically, Vendors can be restricted from selling items.  In practice, none do that (yet?)."},{"Name":null,"Description":"If the Vendor has a related Reputation, this is the Progression data that represents the character'sReputation level with this Vendor.","allOf":[[{"$ref":"#/components/schemas/Destiny.DestinyProgression"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Vendors\r\n{\r\n    public class DestinyVendorComponent\r\n    {\r\npublic int vendorHash;\r\npublic string nextRefreshDate;\r\npublic bool enabled;\r\npublic bool canPurchase;\r\n}\r\n}","Description":"This component contains essential/summary information about the vendor."},{"Namespace":"User","Name":"AckState","RawName":"User.AckState","Properties":[{"Name":"needsAck","Type":"boolean","Description":"Indicates the related item has not been acknowledged."},{"Name":"ackId","Type":"string","Description":"Identifier to use when acknowledging the related item.[category]:[entityId]:[targetId]"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace User\r\n{\r\n    public class AckState\r\n    {\r\npublic bool needsAck;\r\npublic string ackId;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyVendorComponent","RawName":"SingleComponentResponseOfDestinyVendorComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Vendors.DestinyVendorComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyVendorComponent\r\n    {\r\npublic Destiny.Entities.Vendors.DestinyVendorComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Vendors","Name":"DestinyVendorCategoriesComponent","RawName":"Destiny.Entities.Vendors.DestinyVendorCategoriesComponent","Properties":[{"Name":"categories","Type":"array","Description":"The list of categories for items that the vendor sells, in rendering order.","items":[{"$ref":"#/components/schemas/Destiny.Entities.Vendors.DestinyVendorCategory"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Vendors\r\n{\r\n    public class DestinyVendorCategoriesComponent\r\n    {\r\npublic List<object> categories;\r\n}\r\n}","Description":"A vendor can have many categories of items that they sell.  This component will return the category informationfor available items, as well as the index into those items in the user's sale item list.\r\nNote that, since both the category and items are indexes, this data is Content Version dependent.  Be sure to checkthat your content is up to date before using this data.  This is an unfortunate, but permanent, limitation ofVendor data."},{"Namespace":"Destiny.Entities.Vendors","Name":"DestinyVendorCategory","RawName":"Destiny.Entities.Vendors.DestinyVendorCategory","Properties":[{"Name":"categoryIndex","Type":"integer","Format":"int32","Description":"An index into the DestinyVendorDefinition.categories property, so you can grab the display data for this category."},{"Name":"itemIndexes","Type":"array","Description":"An ordered list of indexes into items being sold in this category (DestinyVendorDefinition.itemList)which will contain more information about the items being sold themselves.  Can also be used to index intoDestinyVendorSaleItemComponent data, if you asked for that data to be returned.","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Vendors\r\n{\r\n    public class DestinyVendorCategory\r\n    {\r\npublic int categoryIndex;\r\npublic List<object> itemIndexes;\r\n}\r\n}","Description":"Information about the category and items currently sold in that category."},{"Namespace":"DestinySharp","Name":"SingleComponentResponseOfDestinyVendorCategoriesComponent","RawName":"SingleComponentResponseOfDestinyVendorCategoriesComponent","Properties":[{"Name":"data","$ref":"#/components/schemas/Destiny.Entities.Vendors.DestinyVendorCategoriesComponent"},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SingleComponentResponseOfDestinyVendorCategoriesComponent\r\n    {\r\npublic Destiny.Entities.Vendors.DestinyVendorCategoriesComponent data;\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Entities.Vendors","Name":"DestinyVendorSaleItemComponent","RawName":"Destiny.Entities.Vendors.DestinyVendorSaleItemComponent","Properties":[{"Name":"vendorItemIndex","Type":"integer","Format":"int32","Description":"The index into the DestinyVendorDefinition.itemList property.  Note that this means Vendor data*is* Content Version dependent: make sure you have the latest content before you use Vendor data,or these indexes may mismatch.  \r\nMost systems avoid this problem, but Vendors is one area where weare unable to reasonably avoid content dependency at the moment."},{"Name":"itemHash","Type":"integer","Format":"uint32","Description":"The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinitionof the sale item.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":null,"Description":"A flag indicating whether the requesting character can buy the item, and if not the reasons why the character can't buy it.","allOf":[[{"$ref":"#/components/schemas/Destiny.VendorItemStatus"}]]},{"Name":"costs","Type":"array","Description":"A summary of the current costs of the item.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]},{"Name":"requiredUnlocks","Type":"array","Description":"If you can't buy the item due to a complex character state, these will be hashes forDestinyUnlockDefinitions that you can check to see messages regarding the failure (if the unlockshave human readable information: it is not guaranteed that Unlocks will have human readable strings, andyour application will have to handle that)\r\nPrefer using failureIndexes instead.  These are provided for informational purposes, but have largelybeen supplanted by failureIndexes.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyUnlockDefinition"}]},{"Name":"unlockStatuses","Type":"array","Description":"If any complex unlock states are checked in determining purchasability, these willbe returned here along with the status of the unlock check.\r\nPrefer using failureIndexes instead.  These are provided for informational purposes, but have largelybeen supplanted by failureIndexes.","items":[{"$ref":"#/components/schemas/Destiny.DestinyUnlockStatus"}]},{"Name":"failureIndexes","Type":"array","Description":"Indexes in to the \"failureStrings\" lookup table in DestinyVendorDefinition for the given Vendor.Gives some more reliable failure information for why you can't purchase an item.\r\nIt is preferred to use these over requiredUnlocks and unlockStatuses: the latter are providedmostly in case someone can do something interesting with it that I didn't anticipate.","items":[{"type":"integer","format":"int32"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Entities.Vendors\r\n{\r\n    public class DestinyVendorSaleItemComponent\r\n    {\r\npublic int vendorItemIndex;\r\npublic int itemHash;\r\npublic List<object> costs;\r\npublic List<object> requiredUnlocks;\r\npublic List<object> unlockStatuses;\r\npublic List<object> failureIndexes;\r\n}\r\n}","Description":"Request this component if you want the details about an item being sold in relation to the charactermaking the request: whether the character can buy it,whether they can afford it, and other data related to purchasing the item.\r\nNote that if you want instance, stats, etc... data for the item, you'll have to request additional components such asItemInstances, ItemPerks etc... and acquire them from the DestinyVendorResponse's \"items\" property."},{"Namespace":"Destiny","Name":"DestinyUnlockStatus","RawName":"Destiny.DestinyUnlockStatus","Properties":[{"Name":"unlockHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the Unlock Flag.  Use to lookup DestinyUnlockDefinition for static data.Not all unlocks have human readable data - in fact, most don't.  But when they do, it can be very useful to show.Even if they don't have human readable data, you might be able to infer the meaning of an unlock flagwith a bit of experimentation...","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyUnlockDefinition"}]},{"Name":"isSet","Type":"boolean","Description":"Whether the unlock flag is set."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyUnlockStatus\r\n    {\r\npublic int unlockHash;\r\npublic bool isSet;\r\n}\r\n}","Description":"Indicates the status of an \"Unlock Flag\" on a Character or Profile.\r\nThese are individual bits of state that can be either set or not set, and sometimes provide interestinghuman-readable information in their related DestinyUnlockDefinition."},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"VendorSales","$ref":"#/components/schemas/Destiny.Entities.Vendors.DestinyVendorSaleItemComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyVendorSaleItemComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DestinyItemComponentSetOfint32","RawName":"DestinyItemComponentSetOfint32","Properties":[{"Name":"instances","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemInstanceComponent","x-destiny-component-type-dependency":"ItemInstances"},{"Name":"objectives","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemObjectivesComponent","x-destiny-component-type-dependency":"ItemObjectives"},{"Name":"perks","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemPerksComponent","x-destiny-component-type-dependency":"ItemPerks"},{"Name":"renderData","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemRenderComponent","x-destiny-component-type-dependency":"ItemRenderData"},{"Name":"stats","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemStatsComponent","x-destiny-component-type-dependency":"ItemStats"},{"Name":"sockets","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemSocketsComponent","x-destiny-component-type-dependency":"ItemSockets"},{"Name":"talentGrids","$ref":"#/components/schemas/DictionaryComponentResponseOfint32AndDestinyItemTalentGridComponent","x-destiny-component-type-dependency":"ItemTalentGrids"},{"Name":"plugStates","$ref":"#/components/schemas/DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent","x-destiny-component-type-dependency":"ItemPlugStates"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DestinyItemComponentSetOfint32\r\n    {\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemInstanceComponent instances;\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemObjectivesComponent objectives;\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemPerksComponent perks;\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemRenderComponent renderData;\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemStatsComponent stats;\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemSocketsComponent sockets;\r\npublic  DestinySharp.DictionaryComponentResponseOfint32AndDestinyItemTalentGridComponent talentGrids;\r\npublic  DestinySharp.DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent plugStates;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemInstanceComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemInstanceComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemInstances","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemInstanceComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemInstanceComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemObjectivesComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemObjectivesComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemObjectives","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemObjectivesComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemObjectivesComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemPerksComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemPerksComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemPerks","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemPerksComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemPerksComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemRenderComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemRenderComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemRenderData","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemRenderComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemRenderComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemStatsComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemStatsComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemStats","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemStatsComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemStatsComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemSocketsComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemSocketsComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemSockets","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemSocketsComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemSocketsComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"DictionaryComponentResponseOfint32AndDestinyItemTalentGridComponent","RawName":"DictionaryComponentResponseOfint32AndDestinyItemTalentGridComponent","Properties":[{"Name":"data","Type":"object","additionalProperties":[{"x-destiny-component-type-dependency":"ItemTalentGrids","$ref":"#/components/schemas/Destiny.Entities.Items.DestinyItemTalentGridComponent"}],"x-dictionary-key":[{"type":"integer","format":"int32"}]},{"Name":"privacy","$ref":"#/components/schemas/Components.ComponentPrivacySetting"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class DictionaryComponentResponseOfint32AndDestinyItemTalentGridComponent\r\n    {\r\npublic Components.ComponentPrivacySetting privacy;\r\n}\r\n}"},{"Namespace":"Destiny.Requests.Actions","Name":"DestinyActionRequest","RawName":"Destiny.Requests.Actions.DestinyActionRequest","Properties":[{"Name":"membershipType","$ref":"#/components/schemas/BungieMembershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Requests.Actions\r\n{\r\n    public class DestinyActionRequest\r\n    {\r\npublic  DestinySharp.BungieMembershipType membershipType;\r\n}\r\n}"},{"Namespace":"Destiny.Requests.Actions","Name":"DestinyCharacterActionRequest","RawName":"Destiny.Requests.Actions.DestinyCharacterActionRequest","Properties":[{"Name":"characterId","Type":"integer","Format":"int64"},{"Name":"membershipType","$ref":"#/components/schemas/BungieMembershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Requests.Actions\r\n{\r\n    public class DestinyCharacterActionRequest\r\n    {\r\npublic int characterId;\r\npublic  DestinySharp.BungieMembershipType membershipType;\r\n}\r\n}"},{"Namespace":"Destiny.Requests.Actions","Name":"DestinyItemActionRequest","RawName":"Destiny.Requests.Actions.DestinyItemActionRequest","Properties":[{"Name":"itemId","Type":"integer","Format":"int64"},{"Name":"characterId","Type":"integer","Format":"int64"},{"Name":"membershipType","$ref":"#/components/schemas/BungieMembershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Requests.Actions\r\n{\r\n    public class DestinyItemActionRequest\r\n    {\r\npublic int itemId;\r\npublic int characterId;\r\npublic  DestinySharp.BungieMembershipType membershipType;\r\n}\r\n}"},{"Namespace":"Destiny.Requests","Name":"DestinyItemTransferRequest","RawName":"Destiny.Requests.DestinyItemTransferRequest","Properties":[{"Name":"itemReferenceHash","Type":"integer","Format":"uint32"},{"Name":"stackSize","Type":"integer","Format":"int32"},{"Name":"transferToVault","Type":"boolean"},{"Name":"itemId","Type":"integer","Format":"int64"},{"Name":"characterId","Type":"integer","Format":"int64"},{"Name":"membershipType","$ref":"#/components/schemas/BungieMembershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Requests\r\n{\r\n    public class DestinyItemTransferRequest\r\n    {\r\npublic int itemReferenceHash;\r\npublic int stackSize;\r\npublic bool transferToVault;\r\npublic int itemId;\r\npublic int characterId;\r\npublic  DestinySharp.BungieMembershipType membershipType;\r\n}\r\n}"},{"Namespace":"Destiny","Name":"DestinyEquipItemResults","RawName":"Destiny.DestinyEquipItemResults","Properties":[{"Name":"equipResults","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.DestinyEquipItemResult"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyEquipItemResults\r\n    {\r\npublic List<object> equipResults;\r\n}\r\n}","Description":"The results of a bulk Equipping operation performed through the Destiny API."},{"Namespace":"Destiny","Name":"DestinyEquipItemResult","RawName":"Destiny.DestinyEquipItemResult","Properties":[{"Name":"itemInstanceId","Type":"integer","Format":"int64","Description":"The instance ID of the item in question (all items that can be equipped must, but definition,be Instanced and thus have an Instance ID that you can use to refer to them)"},{"Name":null,"Description":"A PlatformErrorCodes enum indicating whether it succeeded, and if it failed why.","allOf":[[{"$ref":"#/components/schemas/Exceptions.PlatformErrorCodes"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny\r\n{\r\n    public class DestinyEquipItemResult\r\n    {\r\npublic int itemInstanceId;\r\n}\r\n}","Description":"The results of an Equipping operation performed through the Destiny API."},{"Namespace":"Destiny.Requests.Actions","Name":"DestinyItemSetActionRequest","RawName":"Destiny.Requests.Actions.DestinyItemSetActionRequest","Properties":[{"Name":"itemIds","Type":"array","items":[{"type":"integer","format":"int64"}]},{"Name":"characterId","Type":"integer","Format":"int64"},{"Name":"membershipType","$ref":"#/components/schemas/BungieMembershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Requests.Actions\r\n{\r\n    public class DestinyItemSetActionRequest\r\n    {\r\npublic List<object> itemIds;\r\npublic int characterId;\r\npublic  DestinySharp.BungieMembershipType membershipType;\r\n}\r\n}"},{"Namespace":"Destiny.Requests.Actions","Name":"DestinyItemStateRequest","RawName":"Destiny.Requests.Actions.DestinyItemStateRequest","Properties":[{"Name":"state","Type":"boolean"},{"Name":"itemId","Type":"integer","Format":"int64"},{"Name":"characterId","Type":"integer","Format":"int64"},{"Name":"membershipType","$ref":"#/components/schemas/BungieMembershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Requests.Actions\r\n{\r\n    public class DestinyItemStateRequest\r\n    {\r\npublic bool state;\r\npublic int itemId;\r\npublic int characterId;\r\npublic  DestinySharp.BungieMembershipType membershipType;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyPostGameCarnageReportData","RawName":"Destiny.HistoricalStats.DestinyPostGameCarnageReportData","Properties":[{"Name":"period","Type":"string","Format":"date-time","Description":"Date and time for the activity."},{"Name":null,"Description":"Details about the activity.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsActivity"}]]},{"Name":"entries","Type":"array","Description":"Collection of players and their data for this activity.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry"}]},{"Name":"teams","Type":"array","Description":"Collection of stats for the player in this activity.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyPostGameCarnageReportTeamEntry"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyPostGameCarnageReportData\r\n    {\r\npublic string period;\r\npublic List<object> entries;\r\npublic List<object> teams;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsActivity","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsActivity","Properties":[{"Name":"referenceId","Type":"integer","Format":"uint32","Description":"Hash ID that can be looked up in the DestinyActivityTable.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"instanceId","Type":"integer","Format":"int64","Description":"This value can be used to get additional data about this activity such as who else was playing."},{"Name":null,"Description":"Indicates the game mode of the activity.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyActivityModeType"}]]},{"Name":"activityTypeHashOverride","Type":"integer","Format":"uint32","Description":"Hash ID that can be looked up in the DestinyActivityTypeTable. Prefer this value over the type used by the activity if it is specified.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityTypeDefinition"}]},{"Name":"isPrivate","Type":"boolean","Description":"Whether or not the match was a private match."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsActivity\r\n    {\r\npublic int referenceId;\r\npublic int instanceId;\r\npublic int activityTypeHashOverride;\r\npublic bool isPrivate;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyPostGameCarnageReportEntry","RawName":"Destiny.HistoricalStats.DestinyPostGameCarnageReportEntry","Properties":[{"Name":"standing","Type":"integer","Format":"int32","Description":"Standing of the player"},{"Name":null,"Description":"Score of the player if available","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}]]},{"Name":null,"Description":"Identity details of the player","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyPlayer"}]]},{"Name":"characterId","Type":"integer","Format":"int64","Description":"ID of the player's character used in the activity."},{"Name":"values","Type":"object","Description":"Collection of stats for the player in this activity.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]},{"Name":null,"Description":"Extended data extracted from the activity blob.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyPostGameCarnageReportExtendedData"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyPostGameCarnageReportEntry\r\n    {\r\npublic int standing;\r\npublic int characterId;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsValue","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsValue","Properties":[{"Name":"statId","Type":"string","Description":"Unique ID for this stat"},{"Name":null,"Description":"Basic stat value.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValuePair"}]]},{"Name":null,"Description":"Per game average for the statistic, if applicable","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValuePair"}]]},{"Name":null,"Description":"Weighted value of the stat if a weight greater than 1 has been assigned.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValuePair"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsValue\r\n    {\r\npublic string statId;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsValuePair","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsValuePair","Properties":[{"Name":"value","Type":"number","Format":"double","Description":"Raw value of the statistic"},{"Name":"displayValue","Type":"string","Description":"Localized formated version of the value."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsValuePair\r\n    {\r\npublic decimal value;\r\npublic string displayValue;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyPlayer","RawName":"Destiny.HistoricalStats.DestinyPlayer","Properties":[{"Name":null,"Description":"Details about the player as they are known in game (platform display name, Destiny emblem)","allOf":[[{"$ref":"#/components/schemas/User.UserInfoCard"}]]},{"Name":"characterClass","Type":"string","Description":"Class of the character if applicable and available."},{"Name":"characterLevel","Type":"integer","Format":"int32","Description":"Level of the character if available. Zero if it is not available."},{"Name":"lightLevel","Type":"integer","Format":"int32","Description":"Light Level of the character if available. Zero if it is not available."},{"Name":null,"Description":"Details about the player as they are known on BungieNet.  This willbe undefined if the player has marked their credential private, or does not havea BungieNet account.","allOf":[[{"$ref":"#/components/schemas/User.UserInfoCard"}]]},{"Name":"clanName","Type":"string","Description":"Current clan name for the player. This value may be null or an empty string if the user does not have a clan."},{"Name":"clanTag","Type":"string","Description":"Current clan tag for the player.  This value may be null or an empty string if the user does not have a clan."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyPlayer\r\n    {\r\npublic string characterClass;\r\npublic int characterLevel;\r\npublic int lightLevel;\r\npublic string clanName;\r\npublic string clanTag;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyPostGameCarnageReportExtendedData","RawName":"Destiny.HistoricalStats.DestinyPostGameCarnageReportExtendedData","Properties":[{"Name":"weapons","Type":"array","Description":"List of weapons and their perspective values.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalWeaponStats"}]},{"Name":"values","Type":"object","Description":"Collection of stats for the player in this activity.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyPostGameCarnageReportExtendedData\r\n    {\r\npublic List<object> weapons;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalWeaponStats","RawName":"Destiny.HistoricalStats.DestinyHistoricalWeaponStats","Properties":[{"Name":"referenceId","Type":"integer","Format":"uint32","Description":"The hash ID of the item definition that describes the weapon.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]},{"Name":"values","Type":"object","Description":"Collection of stats for the period.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalWeaponStats\r\n    {\r\npublic int referenceId;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyPostGameCarnageReportTeamEntry","RawName":"Destiny.HistoricalStats.DestinyPostGameCarnageReportTeamEntry","Properties":[{"Name":"teamId","Type":"integer","Format":"int32","Description":"Integer ID for the team."},{"Name":null,"Description":"Team's standing relative to other teams.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}]]},{"Name":null,"Description":"Score earned by the team","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}]]},{"Name":"teamName","Type":"string","Description":"Alpha or Bravo"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyPostGameCarnageReportTeamEntry\r\n    {\r\npublic int teamId;\r\npublic string teamName;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats.Definitions","Name":"DestinyHistoricalStatsDefinition","RawName":"Destiny.HistoricalStats.Definitions.DestinyHistoricalStatsDefinition","Properties":[{"Name":"statId","Type":"string","Description":"Unique programmer friendly ID for this stat"},{"Name":null,"Description":"Statistic group","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyStatsGroupType"}]]},{"Name":"periodTypes","Type":"array","Description":"Time periods the statistic covers","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.PeriodType"}]},{"Name":"modes","Type":"array","Description":"Game modes where this statistic can be reported.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyActivityModeType"}]},{"Name":null,"Description":"Category for the stat.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyStatsCategoryType"}]]},{"Name":"statName","Type":"string","Description":"Display name"},{"Name":"statDescription","Type":"string","Description":"Description of a stat if applicable."},{"Name":null,"Description":"Unit, if any, for the statistic","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.UnitType"}]]},{"Name":"iconImage","Type":"string","Description":"Optional URI to an icon for the statistic"},{"Name":"mergeMethod","Type":"integer","Format":"int32","Nullable":true,"Description":"Optional icon for the statistic","ContainsEnumData":true},{"Name":"unitLabel","Type":"string","Description":"Localized Unit Name for the stat."},{"Name":"weight","Type":"integer","Format":"int32","Description":"Weight assigned to this stat indicating its relative impressiveness."},{"Name":"medalTierHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"The tier associated with this medal - be it implicitly or explicitly."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats.Definitions\r\n{\r\n    public class DestinyHistoricalStatsDefinition\r\n    {\r\npublic string statId;\r\npublic List<object> periodTypes;\r\npublic List<object> modes;\r\npublic string statName;\r\npublic string statDescription;\r\npublic string iconImage;\r\npublic int mergeMethod;\r\npublic string unitLabel;\r\npublic int weight;\r\npublic int medalTierHash;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyLeaderboard","RawName":"Destiny.HistoricalStats.DestinyLeaderboard","Properties":[{"Name":"statId","Type":"string"},{"Name":"entries","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyLeaderboardEntry"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyLeaderboard\r\n    {\r\npublic string statId;\r\npublic List<object> entries;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyLeaderboardEntry","RawName":"Destiny.HistoricalStats.DestinyLeaderboardEntry","Properties":[{"Name":"rank","Type":"integer","Format":"int32","Description":"Where this player ranks on the leaderboard.  A value of 1 is the top rank."},{"Name":null,"Description":"Identity details of the player","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyPlayer"}]]},{"Name":"characterId","Type":"integer","Format":"int64","Description":"ID of the player's best character for the reported stat."},{"Name":null,"Description":"Value of the stat for this player","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyLeaderboardEntry\r\n    {\r\npublic int rank;\r\npublic int characterId;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyClanAggregateStat","RawName":"Destiny.HistoricalStats.DestinyClanAggregateStat","Properties":[{"Name":null,"Description":"The id of the mode of stats (allPvp, allPvE, etc)","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyActivityModeType"}]]},{"Name":"statId","Type":"string","Description":"The id of the stat"},{"Name":null,"Description":"Value of the stat for this player","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyClanAggregateStat\r\n    {\r\npublic string statId;\r\n}\r\n}"},{"Namespace":"Destiny.Definitions","Name":"DestinyEntitySearchResult","RawName":"Destiny.Definitions.DestinyEntitySearchResult","Properties":[{"Name":"suggestedWords","Type":"array","Description":"A list of suggested words that might make for better search results,based on the text searched for.","items":[{"type":"string"}]},{"Name":null,"Description":"The items found that are matches/near matches for the searched-for term,sorted by something vaguely resembling \"relevance\".  Hopefully this willget better in the future.","allOf":[[{"$ref":"#/components/schemas/SearchResultOfDestinyEntitySearchResultItem"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyEntitySearchResult\r\n    {\r\npublic List<object> suggestedWords;\r\n}\r\n}","Description":"The results of a search for Destiny content.  This will be improved on over time,I've been doing some experimenting to see what might be useful."},{"Namespace":"Destiny.Definitions","Name":"DestinyEntitySearchResultItem","RawName":"Destiny.Definitions.DestinyEntitySearchResultItem","Properties":[{"Name":"hash","Type":"integer","Format":"uint32","Description":"The hash identifier of the entity.  You will use this to look up the DestinyDefinitionrelevant for the entity found."},{"Name":"entityType","Type":"string","Description":"The type of entity, returned as a string matching the DestinyDefinition's contract class name.You'll have to have your own mapping from class names to actually looking up those definitionsin the manifest databases."},{"Name":null,"Description":"Basic display properties on the entity, so you don't have to look up the definition to showbasic results for the item.","allOf":[[{"$ref":"#/components/schemas/Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition"}]]},{"Name":"weight","Type":"number","Format":"double","Description":"The ranking value for sorting that we calculated using our relevance formula.  Thiswill hopefully get better with time and iteration."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Definitions\r\n{\r\n    public class DestinyEntitySearchResultItem\r\n    {\r\npublic int hash;\r\npublic string entityType;\r\npublic decimal weight;\r\n}\r\n}","Description":"An individual Destiny Entity returned from the entity search."},{"Namespace":"DestinySharp","Name":"SearchResultOfDestinyEntitySearchResultItem","RawName":"SearchResultOfDestinyEntitySearchResultItem","Properties":[{"Name":"results","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyEntitySearchResultItem"}]},{"Name":"totalResults","Type":"integer","Format":"int32"},{"Name":"hasMore","Type":"boolean"},{"Name":"query","$ref":"#/components/schemas/Queries.PagedQuery"},{"Name":"replacementContinuationToken","Type":"string"},{"Name":"useTotalResults","Type":"boolean","Description":"If useTotalResults is true, then totalResults represents an accurate count.\r\nIf False, it does not, and may be estimated/only the size of the current page.\r\nEither way, you should probably always only trust hasMore.\r\nThis is a long-held historical throwback to when we used to do paging with known total results.Those queries toasted our database, and we were left to hastily alter our endpoints and create backward-compatible shims, of which useTotalResults is one."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SearchResultOfDestinyEntitySearchResultItem\r\n    {\r\npublic List<object> results;\r\npublic int totalResults;\r\npublic bool hasMore;\r\npublic Queries.PagedQuery query;\r\npublic string replacementContinuationToken;\r\npublic bool useTotalResults;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsByPeriod","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod","Properties":[{"Name":"allTime","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"allTimeTier1","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"allTimeTier2","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"allTimeTier3","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"daily","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsPeriodGroup"}]},{"Name":"monthly","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsPeriodGroup"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsByPeriod\r\n    {\r\npublic List<object> daily;\r\npublic List<object> monthly;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsPeriodGroup","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsPeriodGroup","Properties":[{"Name":"period","Type":"string","Format":"date-time","Description":"Period for the group.  If the stat periodType is day, then this will have a specific day. If the type is monthly, thenthis value will be the first day of the applicable month. This value is not set when the periodType is 'all time'."},{"Name":null,"Description":"If the period group is for a specific activity, this property will be set.","allOf":[[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsActivity"}]]},{"Name":"values","Type":"object","Description":"Collection of stats for the period.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsPeriodGroup\r\n    {\r\npublic string period;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsAccountResult","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsAccountResult","Properties":[{"Name":"mergedDeletedCharacters","$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsWithMerged"},{"Name":"mergedAllCharacters","$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsWithMerged"},{"Name":"characters","Type":"array","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsPerCharacter"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsAccountResult\r\n    {\r\npublic Destiny.HistoricalStats.DestinyHistoricalStatsWithMerged mergedDeletedCharacters;\r\npublic Destiny.HistoricalStats.DestinyHistoricalStatsWithMerged mergedAllCharacters;\r\npublic List<object> characters;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsWithMerged","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsWithMerged","Properties":[{"Name":"results","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"merged","$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsWithMerged\r\n    {\r\npublic Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod merged;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalStatsPerCharacter","RawName":"Destiny.HistoricalStats.DestinyHistoricalStatsPerCharacter","Properties":[{"Name":"characterId","Type":"integer","Format":"int64"},{"Name":"deleted","Type":"boolean"},{"Name":"results","Type":"object","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"merged","$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalStatsPerCharacter\r\n    {\r\npublic int characterId;\r\npublic bool deleted;\r\npublic Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod merged;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyActivityHistoryResults","RawName":"Destiny.HistoricalStats.DestinyActivityHistoryResults","Properties":[{"Name":"activities","Type":"array","Description":"List of activities, the most recent activity first.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsPeriodGroup"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyActivityHistoryResults\r\n    {\r\npublic List<object> activities;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyHistoricalWeaponStatsData","RawName":"Destiny.HistoricalStats.DestinyHistoricalWeaponStatsData","Properties":[{"Name":"weapons","Type":"array","Description":"List of weapons and their perspective values.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalWeaponStats"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyHistoricalWeaponStatsData\r\n    {\r\npublic List<object> weapons;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyAggregateActivityResults","RawName":"Destiny.HistoricalStats.DestinyAggregateActivityResults","Properties":[{"Name":"activities","Type":"array","Description":"List of all activities the player has participated in.","items":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyAggregateActivityStats"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyAggregateActivityResults\r\n    {\r\npublic List<object> activities;\r\n}\r\n}"},{"Namespace":"Destiny.HistoricalStats","Name":"DestinyAggregateActivityStats","RawName":"Destiny.HistoricalStats.DestinyAggregateActivityStats","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"Hash ID that can be looked up in the DestinyActivityTable.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"values","Type":"object","Description":"Collection of stats for the player in this activity.","additionalProperties":[{"$ref":"#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsValue"}],"x-dictionary-key":[{"type":"string"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.HistoricalStats\r\n{\r\n    public class DestinyAggregateActivityStats\r\n    {\r\npublic int activityHash;\r\n}\r\n}"},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneContent","RawName":"Destiny.Milestones.DestinyMilestoneContent","Properties":[{"Name":"about","Type":"string","Description":"The \"About this Milestone\" text from the Firehose."},{"Name":"status","Type":"string","Description":"The Current Status of the Milestone, as driven by the Firehose."},{"Name":"tips","Type":"array","Description":"A list of tips, provided by the Firehose.","items":[{"type":"string"}]},{"Name":"itemCategories","Type":"array","Description":"If DPS has defined items related to this Milestone, they can categorize those items in the Firehose.That data will then be returned as item categories here.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneContentItemCategory"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneContent\r\n    {\r\npublic string about;\r\npublic string status;\r\npublic List<object> tips;\r\npublic List<object> itemCategories;\r\n}\r\n}","Description":"Represents localized, extended content related to Milestones.This is intentionally returned by a separate endpoint and not with Character-level Milestone databecause we do not put localized data into standard Destiny responses, both for brevity of responseand for caching purposes.  If you really need this data, hit the Milestone Content endpoint."},{"Namespace":"Destiny.Milestones","Name":"DestinyMilestoneContentItemCategory","RawName":"Destiny.Milestones.DestinyMilestoneContentItemCategory","Properties":[{"Name":"title","Type":"string"},{"Name":"itemHashes","Type":"array","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyInventoryItemDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyMilestoneContentItemCategory\r\n    {\r\npublic string title;\r\npublic List<object> itemHashes;\r\n}\r\n}","Description":"Part of our dynamic, localized Milestone content is arbitrary categories of items.These are built in our content management system, and thus aren't the same as programmaticallygenerated rewards."},{"Namespace":"Destiny.Milestones","Name":"DestinyPublicMilestone","RawName":"Destiny.Milestones.DestinyPublicMilestone","Properties":[{"Name":"milestoneHash","Type":"integer","Format":"uint32","Description":"The hash identifier for the milestone.  Use it to look up the DestinyMilestoneDefinition forstatic data about the Milestone.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneDefinition"}]},{"Name":"availableQuests","Type":"array","Description":"A milestone not need have even a single quest, but if there are active quests they will be returned here.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyPublicMilestoneQuest"}]},{"Name":"vendorHashes","Type":"array","Description":"Sometimes milestones - or activities active in milestones - will have relevant vendors.These are the vendors that are currently relevant.","items":[{"type":"integer","format":"uint32"}]},{"Name":"startDate","Type":"string","Format":"date-time","Nullable":true,"Description":"If known, this is the date when the Milestone started/became active."},{"Name":"endDate","Type":"string","Format":"date-time","Nullable":true,"Description":"If known, this is the date when the Milestone will expire/recycle/end."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyPublicMilestone\r\n    {\r\npublic int milestoneHash;\r\npublic List<object> availableQuests;\r\npublic List<object> vendorHashes;\r\npublic string startDate;\r\npublic string endDate;\r\n}\r\n}","Description":"Information about milestones, presented in a character state-agnostic manner.Combine this data with DestinyMilestoneDefinition to get a full picture of the milestone, whichis basically a checklist of things to do in the game.  Think of this as GetPublicAdvisors 3.0, for those who used the Destiny 1 API."},{"Namespace":"Destiny.Milestones","Name":"DestinyPublicMilestoneQuest","RawName":"Destiny.Milestones.DestinyPublicMilestoneQuest","Properties":[{"Name":"questItemHash","Type":"integer","Format":"uint32","Description":"Quests are defined as Items in content.  As such, this is the hash identifier of the DestinyInventoryItemDefinition that represents this quest.  It will have pointers to all of the stepsin the quest, and display information for the quest (title, description, icon etc)Individual steps will be referred to in the Quest item's DestinyInventoryItemDefinition.setDataproperty, and themselves are Items with their own renderable data.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.Milestones.DestinyMilestoneDefinition"}]},{"Name":null,"Description":"A milestone need not have an active activity, but if there is one it will be returned here,along with any variant and additional information.","allOf":[[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyPublicMilestoneActivity"}]]},{"Name":"challenges","Type":"array","Description":"For the given quest there could be 0-to-Many challenges: mini queststhat you can perform in the course of doing this quest, that may grant you rewards and benefits.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyPublicMilestoneChallenge"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyPublicMilestoneQuest\r\n    {\r\npublic int questItemHash;\r\npublic List<object> challenges;\r\n}\r\n}"},{"Namespace":"Destiny.Milestones","Name":"DestinyPublicMilestoneActivity","RawName":"Destiny.Milestones.DestinyPublicMilestoneActivity","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The hash identifier of the activity that's been chosen to be considered the canonical \"conceptual\" activity definition.  This may have many variants, defined herein.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]},{"Name":"modifierHashes","Type":"array","Description":"The activity may have 0-to-many modifiers: if it does, this will contain the hashesto the DestinyActivityModifierDefinition that defines the modifier being applied.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.ActivityModifiers.DestinyActivityModifierDefinition"}]},{"Name":"variants","Type":"array","Description":"Every relevant variation of this conceptual activity, including the conceptual activity itself,have variants defined here.","items":[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyPublicMilestoneActivityVariant"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyPublicMilestoneActivity\r\n    {\r\npublic int activityHash;\r\npublic List<object> modifierHashes;\r\npublic List<object> variants;\r\n}\r\n}","Description":"A milestone may have one or more conceptual Activities associated with it, and each of those conceptualactivities could have a variety of variants, modes, tiers, what-have-you.Our attempts to determine what qualifies as a conceptual activity are, unfortunately, janky.  So ifyou see missing modes or modes that don't seem appropriate to you, let us know and I'll buy you a beerif we ever meet up in person."},{"Namespace":"Destiny.Milestones","Name":"DestinyPublicMilestoneActivityVariant","RawName":"Destiny.Milestones.DestinyPublicMilestoneActivityVariant","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32","Description":"The hash identifier of this activity variant.  Examine the activity's definition in the Manifest databaseto determine what makes it a distinct variant.  Usually it will be difficulty level or whether or not it is aguided game variant of the activity, but theoretically it could be distinguished in any arbitrary way."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyPublicMilestoneActivityVariant\r\n    {\r\npublic int activityHash;\r\n}\r\n}","Description":"Represents a variant of an activity that's relevant to a milestone."},{"Namespace":"Destiny.Milestones","Name":"DestinyPublicMilestoneChallenge","RawName":"Destiny.Milestones.DestinyPublicMilestoneChallenge","Properties":[{"Name":"objectiveHash","Type":"integer","Format":"uint32","Description":"The objective for the Challenge, which should have human-readable data about whatneeds to be done to accomplish the objective.  Use this hash to look up the DestinyObjectiveDefinition.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveDefinition"}]},{"Name":"activityHash","Type":"integer","Format":"uint32","Nullable":true,"Description":"IF the Objective is related to a specific Activity, this will be that activity's hash.Use it to look up the DestinyActivityDefinition for additional data to show.","x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyActivityDefinition"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Milestones\r\n{\r\n    public class DestinyPublicMilestoneChallenge\r\n    {\r\npublic int objectiveHash;\r\npublic int activityHash;\r\n}\r\n}","Description":"A Milestone can have many Challenges.  Challenges are just extra Objectives that providea fun way to mix-up play and provide extra rewards."},{"Namespace":"Community","Name":"CommunityLiveStatus","RawName":"Community.CommunityLiveStatus","Properties":[{"Name":"dateStatusUpdated","Type":"string","Format":"date-time"},{"Name":"url","Type":"string"},{"Name":"partnershipIdentifier","Type":"string"},{"Name":"partnershipType","$ref":"#/components/schemas/Partnerships.PartnershipType"},{"Name":"thumbnail","Type":"string"},{"Name":"thumbnailSmall","Type":"string"},{"Name":"thumbnailLarge","Type":"string"},{"Name":"destinyCharacterId","Type":"integer","Format":"int64"},{"Name":"userInfo","$ref":"#/components/schemas/User.UserInfoCard"},{"Name":"currentActivityHash","Type":"integer","Format":"uint32"},{"Name":"dateLastPlayed","Type":"string","Format":"date-time"},{"Name":"dateStreamStarted","Type":"string","Format":"date-time"},{"Name":"locale","Type":"string"},{"Name":"currentViewers","Type":"integer","Format":"int32"},{"Name":"followers","Type":"integer","Format":"int32"},{"Name":"overallViewers","Type":"integer","Format":"int32"},{"Name":"isFeatured","Type":"boolean"},{"Name":"title","Type":"string"},{"Name":"activityModeHash","Type":"integer","Format":"uint32"},{"Name":"dateFeatured","Type":"string","Format":"date-time","Nullable":true},{"Name":"trendingValue","Type":"number","Format":"float"},{"Name":"isSubscribable","Type":"boolean"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Community\r\n{\r\n    public class CommunityLiveStatus\r\n    {\r\npublic string dateStatusUpdated;\r\npublic string url;\r\npublic string partnershipIdentifier;\r\npublic Partnerships.PartnershipType partnershipType;\r\npublic string thumbnail;\r\npublic string thumbnailSmall;\r\npublic string thumbnailLarge;\r\npublic int destinyCharacterId;\r\npublic User.UserInfoCard userInfo;\r\npublic int currentActivityHash;\r\npublic string dateLastPlayed;\r\npublic string dateStreamStarted;\r\npublic string locale;\r\npublic int currentViewers;\r\npublic int followers;\r\npublic int overallViewers;\r\npublic bool isFeatured;\r\npublic string title;\r\npublic int activityModeHash;\r\npublic string dateFeatured;\r\npublic decimal trendingValue;\r\npublic bool isSubscribable;\r\n}\r\n}"},{"Namespace":"DestinySharp","Name":"SearchResultOfCommunityLiveStatus","RawName":"SearchResultOfCommunityLiveStatus","Properties":[{"Name":"results","Type":"array","items":[{"$ref":"#/components/schemas/Community.CommunityLiveStatus"}]},{"Name":"totalResults","Type":"integer","Format":"int32"},{"Name":"hasMore","Type":"boolean"},{"Name":"query","$ref":"#/components/schemas/Queries.PagedQuery"},{"Name":"replacementContinuationToken","Type":"string"},{"Name":"useTotalResults","Type":"boolean","Description":"If useTotalResults is true, then totalResults represents an accurate count.\r\nIf False, it does not, and may be estimated/only the size of the current page.\r\nEither way, you should probably always only trust hasMore.\r\nThis is a long-held historical throwback to when we used to do paging with known total results.Those queries toasted our database, and we were left to hastily alter our endpoints and create backward-compatible shims, of which useTotalResults is one."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SearchResultOfCommunityLiveStatus\r\n    {\r\npublic List<object> results;\r\npublic int totalResults;\r\npublic bool hasMore;\r\npublic Queries.PagedQuery query;\r\npublic string replacementContinuationToken;\r\npublic bool useTotalResults;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingCategories","RawName":"Trending.TrendingCategories","Properties":[{"Name":"categories","Type":"array","items":[{"$ref":"#/components/schemas/Trending.TrendingCategory"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingCategories\r\n    {\r\npublic List<object> categories;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingCategory","RawName":"Trending.TrendingCategory","Properties":[{"Name":"categoryName","Type":"string"},{"Name":"entries","$ref":"#/components/schemas/SearchResultOfTrendingEntry"},{"Name":"categoryId","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingCategory\r\n    {\r\npublic string categoryName;\r\npublic  DestinySharp.SearchResultOfTrendingEntry entries;\r\npublic string categoryId;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntry","RawName":"Trending.TrendingEntry","Properties":[{"Name":"weight","Type":"number","Format":"double","Description":"The weighted score of this trending item."},{"Name":"isFeatured","Type":"boolean"},{"Name":"identifier","Type":"string","Description":"We don't know whether the identifier will be a string, a uint, or a long... so we're going to cast it all to a string.But either way, we need any trending item created to have a single unique identifier for its type."},{"Name":null,"Description":"An enum - unfortunately - dictating all of the possible kinds of trending items that you might get in your result set,in case you want to do custom rendering or call to get the details of the item.","allOf":[[{"$ref":"#/components/schemas/Trending.TrendingEntryType"}]]},{"Name":"displayName","Type":"string","Description":"The localized \"display name/article title/'primary localized identifier'\" of the entity."},{"Name":"tagline","Type":"string","Description":"If the entity has a localized tagline/subtitle/motto/whatever, that is found here."},{"Name":"image","Type":"string"},{"Name":"startDate","Type":"string","Format":"date-time","Nullable":true},{"Name":"endDate","Type":"string","Format":"date-time","Nullable":true},{"Name":"link","Type":"string"},{"Name":"webmVideo","Type":"string","Description":"If this is populated, the entry has a related WebM video to show.I am 100% certain I am going to regret putting this directly on TrendingEntry,but it will work so yolo"},{"Name":"mp4Video","Type":"string","Description":"If this is populated, the entry has a related MP4 video to show.I am 100% certain I am going to regret putting this directly on TrendingEntry,but it will work so yolo"},{"Name":"featureImage","Type":"string","Description":"If isFeatured, this image will be populated with whatever the featured image is.Note that this will likely be a very large image, so don't use it all the time."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntry\r\n    {\r\npublic decimal weight;\r\npublic bool isFeatured;\r\npublic string identifier;\r\npublic string displayName;\r\npublic string tagline;\r\npublic string image;\r\npublic string startDate;\r\npublic string endDate;\r\npublic string link;\r\npublic string webmVideo;\r\npublic string mp4Video;\r\npublic string featureImage;\r\n}\r\n}","Description":"The list entry view for trending items.  Returns just enough to show the item on the trending page."},{"Namespace":"DestinySharp","Name":"SearchResultOfTrendingEntry","RawName":"SearchResultOfTrendingEntry","Properties":[{"Name":"results","Type":"array","items":[{"$ref":"#/components/schemas/Trending.TrendingEntry"}]},{"Name":"totalResults","Type":"integer","Format":"int32"},{"Name":"hasMore","Type":"boolean"},{"Name":"query","$ref":"#/components/schemas/Queries.PagedQuery"},{"Name":"replacementContinuationToken","Type":"string"},{"Name":"useTotalResults","Type":"boolean","Description":"If useTotalResults is true, then totalResults represents an accurate count.\r\nIf False, it does not, and may be estimated/only the size of the current page.\r\nEither way, you should probably always only trust hasMore.\r\nThis is a long-held historical throwback to when we used to do paging with known total results.Those queries toasted our database, and we were left to hastily alter our endpoints and create backward-compatible shims, of which useTotalResults is one."}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace DestinySharp\r\n{\r\n    public class SearchResultOfTrendingEntry\r\n    {\r\npublic List<object> results;\r\npublic int totalResults;\r\npublic bool hasMore;\r\npublic Queries.PagedQuery query;\r\npublic string replacementContinuationToken;\r\npublic bool useTotalResults;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingDetail","RawName":"Trending.TrendingDetail","Properties":[{"Name":"identifier","Type":"string"},{"Name":"entityType","$ref":"#/components/schemas/Trending.TrendingEntryType"},{"Name":"news","$ref":"#/components/schemas/Trending.TrendingEntryNews"},{"Name":"support","$ref":"#/components/schemas/Trending.TrendingEntrySupportArticle"},{"Name":"destinyItem","$ref":"#/components/schemas/Trending.TrendingEntryDestinyItem"},{"Name":"destinyActivity","$ref":"#/components/schemas/Trending.TrendingEntryDestinyActivity"},{"Name":"destinyRitual","$ref":"#/components/schemas/Trending.TrendingEntryDestinyRitual"},{"Name":"creation","$ref":"#/components/schemas/Trending.TrendingEntryCommunityCreation"},{"Name":"stream","$ref":"#/components/schemas/Trending.TrendingEntryCommunityStream"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingDetail\r\n    {\r\npublic string identifier;\r\npublic Trending.TrendingEntryType entityType;\r\npublic Trending.TrendingEntryNews news;\r\npublic Trending.TrendingEntrySupportArticle support;\r\npublic Trending.TrendingEntryDestinyItem destinyItem;\r\npublic Trending.TrendingEntryDestinyActivity destinyActivity;\r\npublic Trending.TrendingEntryDestinyRitual destinyRitual;\r\npublic Trending.TrendingEntryCommunityCreation creation;\r\npublic Trending.TrendingEntryCommunityStream stream;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntryNews","RawName":"Trending.TrendingEntryNews","Properties":[{"Name":"article","$ref":"#/components/schemas/Content.ContentItemPublicContract"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntryNews\r\n    {\r\npublic Content.ContentItemPublicContract article;\r\n}\r\n}"},{"Namespace":"Content","Name":"ContentItemPublicContract","RawName":"Content.ContentItemPublicContract","Properties":[{"Name":"contentId","Type":"integer","Format":"int64"},{"Name":"cType","Type":"string"},{"Name":"cmsPath","Type":"string"},{"Name":"creationDate","Type":"string","Format":"date-time"},{"Name":"modifyDate","Type":"string","Format":"date-time"},{"Name":"allowComments","Type":"boolean"},{"Name":"hasAgeGate","Type":"boolean"},{"Name":"minimumAge","Type":"integer","Format":"int32"},{"Name":"ratingImagePath","Type":"string"},{"Name":"author","$ref":"#/components/schemas/User.GeneralUser"},{"Name":"autoEnglishPropertyFallback","Type":"boolean"},{"Name":"properties","Type":"object","Description":"Firehose content is really a collection of metadata and \"properties\", which arethe potentially-but-not-strictly localizable data that comprises the meat ofwhatever content is being shown.\r\nAs Cole Porter would have crooned, \"Anything Goes\" with Firehose properties.They are most often strings, but they can theoretically be anything.  They are JSONencoded, and could be JSON structures, simple strings, numbers etc...  The Content Typeof the item (cType) will describe the properties, and thus how they ought to be deserialized.","additionalProperties":[{"type":"object"}],"x-dictionary-key":[{"type":"string"}]},{"Name":"representations","Type":"array","items":[{"$ref":"#/components/schemas/Content.ContentRepresentation"}]},{"Name":"tags","Type":"array","items":[{"type":"string"}]},{"Name":"commentSummary","$ref":"#/components/schemas/Content.CommentSummary"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Content\r\n{\r\n    public class ContentItemPublicContract\r\n    {\r\npublic int contentId;\r\npublic string cType;\r\npublic string cmsPath;\r\npublic string creationDate;\r\npublic string modifyDate;\r\npublic bool allowComments;\r\npublic bool hasAgeGate;\r\npublic int minimumAge;\r\npublic string ratingImagePath;\r\npublic User.GeneralUser author;\r\npublic bool autoEnglishPropertyFallback;\r\npublic List<object> representations;\r\npublic List<object> tags;\r\npublic Content.CommentSummary commentSummary;\r\n}\r\n}"},{"Namespace":"Content","Name":"ContentRepresentation","RawName":"Content.ContentRepresentation","Properties":[{"Name":"name","Type":"string"},{"Name":"path","Type":"string"},{"Name":"validationString","Type":"string"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Content\r\n{\r\n    public class ContentRepresentation\r\n    {\r\npublic string name;\r\npublic string path;\r\npublic string validationString;\r\n}\r\n}"},{"Namespace":"Content","Name":"CommentSummary","RawName":"Content.CommentSummary","Properties":[{"Name":"topicId","Type":"integer","Format":"int64"},{"Name":"commentCount","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Content\r\n{\r\n    public class CommentSummary\r\n    {\r\npublic int topicId;\r\npublic int commentCount;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntrySupportArticle","RawName":"Trending.TrendingEntrySupportArticle","Properties":[{"Name":"article","$ref":"#/components/schemas/Content.ContentItemPublicContract"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntrySupportArticle\r\n    {\r\npublic Content.ContentItemPublicContract article;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntryDestinyItem","RawName":"Trending.TrendingEntryDestinyItem","Properties":[{"Name":"itemHash","Type":"integer","Format":"uint32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntryDestinyItem\r\n    {\r\npublic int itemHash;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntryDestinyActivity","RawName":"Trending.TrendingEntryDestinyActivity","Properties":[{"Name":"activityHash","Type":"integer","Format":"uint32"},{"Name":"status","$ref":"#/components/schemas/Destiny.Activities.DestinyPublicActivityStatus"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntryDestinyActivity\r\n    {\r\npublic int activityHash;\r\npublic Destiny.Activities.DestinyPublicActivityStatus status;\r\n}\r\n}"},{"Namespace":"Destiny.Activities","Name":"DestinyPublicActivityStatus","RawName":"Destiny.Activities.DestinyPublicActivityStatus","Properties":[{"Name":"challengeObjectiveHashes","Type":"array","Description":"Active Challenges for the activity, if any - represented as hashes for DestinyObjectiveDefinitions.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.DestinyObjectiveDefinition"}]},{"Name":"modifierHashes","Type":"array","Description":"The active modifiers on this activity, if any - represented as hashes for DestinyActivityModifierDefinitions.","items":[{"type":"integer","format":"uint32"}],"x-mapped-definition":[{"$ref":"#/components/schemas/Destiny.Definitions.ActivityModifiers.DestinyActivityModifierDefinition"}]},{"Name":"rewardTooltipItems","Type":"array","Description":"If the activity itself provides any specific \"mock\" rewards, this will be the items and their quantity.\r\nWhy \"mock\", you ask?  Because these are the rewards as they are represented in the tooltip of the Activity.\r\nThese are often pointers to fake items that look good in a tooltip, but represent an abstract concept of what you will get for a reward rather than the specific items you may obtain.","items":[{"$ref":"#/components/schemas/Destiny.DestinyItemQuantity"}]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Destiny.Activities\r\n{\r\n    public class DestinyPublicActivityStatus\r\n    {\r\npublic List<object> challengeObjectiveHashes;\r\npublic List<object> modifierHashes;\r\npublic List<object> rewardTooltipItems;\r\n}\r\n}","Description":"Represents the public-facing status of an activity: any data about what is currently active in theActivity, regardless of an individual character's progress in it."},{"Namespace":"Trending","Name":"TrendingEntryDestinyRitual","RawName":"Trending.TrendingEntryDestinyRitual","Properties":[{"Name":"image","Type":"string"},{"Name":"icon","Type":"string"},{"Name":"title","Type":"string"},{"Name":"subtitle","Type":"string"},{"Name":"dateStart","Type":"string","Format":"date-time","Nullable":true},{"Name":"dateEnd","Type":"string","Format":"date-time","Nullable":true},{"Name":null,"Description":"A destiny event does not necessarily have a related Milestone, but if it does the detailswill be returned here.","allOf":[[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyPublicMilestone"}]]},{"Name":null,"Description":"A destiny event will not necessarily have milestone \"custom content\", but if it doesthe details will be here.","allOf":[[{"$ref":"#/components/schemas/Destiny.Milestones.DestinyMilestoneContent"}]]}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntryDestinyRitual\r\n    {\r\npublic string image;\r\npublic string icon;\r\npublic string title;\r\npublic string subtitle;\r\npublic string dateStart;\r\npublic string dateEnd;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntryCommunityCreation","RawName":"Trending.TrendingEntryCommunityCreation","Properties":[{"Name":"media","Type":"string"},{"Name":"title","Type":"string"},{"Name":"author","Type":"string"},{"Name":"authorMembershipId","Type":"integer","Format":"int64"},{"Name":"postId","Type":"integer","Format":"uint64"},{"Name":"body","Type":"string"},{"Name":"upvotes","Type":"integer","Format":"int32"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntryCommunityCreation\r\n    {\r\npublic string media;\r\npublic string title;\r\npublic string author;\r\npublic int authorMembershipId;\r\npublic int postId;\r\npublic string body;\r\npublic int upvotes;\r\n}\r\n}"},{"Namespace":"Trending","Name":"TrendingEntryCommunityStream","RawName":"Trending.TrendingEntryCommunityStream","Properties":[{"Name":"image","Type":"string"},{"Name":"title","Type":"string"},{"Name":"partnershipIdentifier","Type":"string"},{"Name":"partnershipType","$ref":"#/components/schemas/Partnerships.PartnershipType"}],"Code":"\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DestinySharp;\r\n\r\nnamespace Trending\r\n{\r\n    public class TrendingEntryCommunityStream\r\n    {\r\npublic string image;\r\npublic string title;\r\npublic string partnershipIdentifier;\r\npublic Partnerships.PartnershipType partnershipType;\r\n}\r\n}"}]